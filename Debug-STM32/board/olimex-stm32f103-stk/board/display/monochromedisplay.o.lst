   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"monochromedisplay.cpp"
  23              	.Ltext0:
  24              		.file 1 "../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp"
 19484              		.align	2
 19485              		.thumb
 19486              		.thumb_func
 19488              	_ZL20__gthread_key_deletei:
 19489              	.LFB858:
   1:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Compile this one with gcc.  */
   3:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Copyright (C) 1997, 1999, 2000, 2004, 2008, 2009
   4:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****    Free Software Foundation, Inc.
   5:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
   6:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** This file is part of GCC.
   7:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
   8:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** GCC is free software; you can redistribute it and/or modify it under
   9:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** the terms of the GNU General Public License as published by the Free
  10:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** Software Foundation; either version 3, or (at your option) any later
  11:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** version.
  12:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  13:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  14:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  15:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  16:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** for more details.
  17:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  18:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** Under Section 7 of GPL version 3, you are granted additional
  19:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** permissions described in the GCC Runtime Library Exception, version
  20:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 3.1, as published by the Free Software Foundation.
  21:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  22:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** You should have received a copy of the GNU General Public License and
  23:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** a copy of the GCC Runtime Library Exception along with this program;
  24:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  25:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** <http://www.gnu.org/licenses/>.  */
  26:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  27:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  28:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  29:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  30:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Just provide compatibility for mutex handling.  */
  31:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  32:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_key_t;
  33:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_once_t;
  34:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_mutex_t;
  35:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_recursive_mutex_t;
  36:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  37:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define __GTHREAD_ONCE_INIT 0
  38:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define __GTHREAD_MUTEX_INIT 0
  39:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  41:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define _GLIBCXX_UNUSED __attribute__((unused))
  42:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  43:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #ifdef _LIBOBJC
  44:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  45:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Thread local storage for a single thread */
  46:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static void *thread_local_storage = NULL;
  47:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  48:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend initialization functions */
  49:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  50:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Initialize the threads subsystem.  */
  51:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  52:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_init_thread_system (void)
  53:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  54:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  55:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
  56:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  57:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  58:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Close the threads subsystem.  */
  59:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  60:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_close_thread_system (void)
  61:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  62:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  63:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
  64:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  65:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  66:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend thread functions */
  67:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  68:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Create a new thread of execution.  */
  69:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline objc_thread_t
  70:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  72:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  73:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return NULL;
  74:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  75:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  76:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Set the current thread's priority.  */
  77:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  78:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  80:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  81:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
  82:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  83:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  84:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Return the current thread's priority.  */
  85:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  86:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_get_priority (void)
  87:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  88:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  90:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  91:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Yield our process time to another thread.  */
  92:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline void
  93:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_yield (void)
  94:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  95:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return;
  96:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  97:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  98:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Terminate the current thread.  */
  99:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 100:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_exit (void)
 101:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 102:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
 103:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* Should we really exit the program */
 104:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* exit (&__objc_thread_exit_status); */
 105:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
 106:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 107:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 108:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline objc_thread_t
 110:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_id (void)
 111:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 112:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support, use 1.  */
 113:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return (objc_thread_t) 1;
 114:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 115:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 116:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Sets the thread's local storage pointer.  */
 117:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 118:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_set_data (void *value)
 119:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 120:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   thread_local_storage = value;
 121:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 122:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 123:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 124:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Returns the thread's local storage pointer.  */
 125:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline void *
 126:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_get_data (void)
 127:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 128:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return thread_local_storage;
 129:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 130:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 131:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend mutex functions */
 132:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 133:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Allocate a mutex.  */
 134:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 135:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 137:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 138:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 139:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 140:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Deallocate a mutex.  */
 141:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 142:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 144:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 145:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 146:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 147:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Grab a lock on a mutex.  */
 148:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 149:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 151:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* There can only be one thread, so we always get the lock */
 152:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 153:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 154:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 155:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Try to grab a lock on a mutex.  */
 156:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 157:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 159:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* There can only be one thread, so we always get the lock */
 160:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 161:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 162:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 163:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Unlock the mutex */
 164:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 165:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 167:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 168:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 169:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 170:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend condition mutex functions */
 171:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 172:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Allocate a condition.  */
 173:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 174:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 176:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 177:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 178:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 179:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Deallocate a condition.  */
 180:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 181:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 183:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 184:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 185:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 186:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Wait on the condition */
 187:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 188:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 191:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 192:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 193:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 194:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Wake up all threads waiting on this condition.  */
 195:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 196:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 198:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 199:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 200:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 201:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Wake up one thread waiting on this condition.  */
 202:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 203:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 205:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 206:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 207:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 208:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #else /* _LIBOBJC */
 209:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 210:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 211:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_active_p (void)
 212:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 213:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 214:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 215:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 216:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 217:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 219:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 220:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 221:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 222:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int _GLIBCXX_UNUSED
 223:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 225:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 226:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 227:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 228:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static int _GLIBCXX_UNUSED
 229:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 19490              		.loc 111 230 0
 19491              		.cfi_startproc
 19492              		@ args = 0, pretend = 0, frame = 8
 19493              		@ frame_needed = 1, uses_anonymous_args = 0
 19494              		@ link register save eliminated.
 19495 0000 80B4     		push	{r7}
 19496              	.LCFI0:
 19497              		.cfi_def_cfa_offset 4
 19498 0002 83B0     		sub	sp, sp, #12
 19499              	.LCFI1:
 19500              		.cfi_def_cfa_offset 16
 19501 0004 00AF     		add	r7, sp, #0
 19502              		.cfi_offset 7, -4
 19503              	.LCFI2:
 19504              		.cfi_def_cfa_register 7
 19505 0006 7860     		str	r0, [r7, #4]
 231:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 19506              		.loc 111 231 0
 19507 0008 4FF00003 		mov	r3, #0
 232:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 19508              		.loc 111 232 0
 19509 000c 1846     		mov	r0, r3
 19510 000e 07F10C07 		add	r7, r7, #12
 19511 0012 BD46     		mov	sp, r7
 19512 0014 80BC     		pop	{r7}
 19513 0016 7047     		bx	lr
 19514              		.cfi_endproc
 19515              	.LFE858:
 19517              		.section	.text._ZN18IMonochromeDisplay5PointC2Eii,"axG",%progbits,_ZN18IMonochromeDisplay5PointC5E
 19518              		.align	2
 19519              		.weak	_ZN18IMonochromeDisplay5PointC2Eii
 19520              		.thumb
 19521              		.thumb_func
 19523              	_ZN18IMonochromeDisplay5PointC2Eii:
 19524              	.LFB1062:
   1:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** #pragma once
   2:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** #include <stdint.h>
   3:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** #include <cstddef>
   4:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** #include <string>
   5:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
   6:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** /**
   7:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h ****  * @ingroup interfaces
   8:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h ****  * @brief Abstracts a simple monochrome display, with either unaccelerated or accelerated drawing m
   9:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h ****  *
  10:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h ****  * Note that if you need a common way to paint into displays with different accelerated features, u
  11:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h ****  * MonochromeDisplayPainter class, the class uses for each drawing instruction the  most effective 
  12:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h ****  * draw into the display.
  13:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h ****  */
  14:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** class IMonochromeDisplay
  15:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** {
  16:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** public:
  17:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
  18:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief The definitions for the pixel colors. Quite a short list for monochrome displays...
  19:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
  20:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	enum PixelColor
  21:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	{
  22:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		Undefined 	=  0 ,	///< Undefined color, use if you want no stroke or no fill.
  23:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		White 		= -1 ,	///< White pixel value.
  24:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		Black 		=  1 	///< Black pixel value.
  25:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	};
  26:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  27:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
  28:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief A bit-mask defining the possible accelerated drawing operations a display can offer.
  29:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
  30:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * The MonochromeDisplayPainter class will use accelerated methods if available and will fall back
  31:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * to software based rendering methods if the display does not support the accelerated operations.
  32:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
  33:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	struct AcceleratedDrawingMethods
  34:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	{
  35:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned clearAccelerated : 1;					///< @brief The display supports to clear screen.
  36:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned memoryCopyAccelerated : 1;				///< @brief The display supports burst access to the displ
  37:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned drawLineAccelerated : 1;				///< @brief The display supports drawing simple lines.
  38:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned drawRectangleStrokeAccelerated : 1;	///< @brief The display supports drawing strokes of 
  39:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned drawRectangeFillAccelerated : 1;		///< @brief The display supports filling rectangles.
  40:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned drawEllipseStrokeAccelerated : 1;		///< @brief The display supports drawing ellipse stro
  41:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned drawEllipseFillAccelerated : 1;		///< @brief The display supports filling ellipses.
  42:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		unsigned drawTextAccelerated : 1;				///< @brief The display supports text drawing.
  43:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	};
  44:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  45:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
  46:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief This class represents a point in a two-dimensional space and is used to draw into the di
  47:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
  48:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	class Point
  49:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	{
  50:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	public:
  51:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		/**
  52:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 * @brief Constructor, initializes the x and y coordinates of the point.
  53:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 *
  54:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 * @param x The X coordinate.
  55:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 * @param y The Y coordinate.
  56:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 */
  57:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		inline explicit Point( int x = 0 , int y = 0 ) : x( x ) , y( y ) {}
 19525              		.loc 91 57 0
 19526              		.cfi_startproc
 19527              		@ args = 0, pretend = 0, frame = 16
 19528              		@ frame_needed = 1, uses_anonymous_args = 0
 19529              		@ link register save eliminated.
 19530 0000 80B4     		push	{r7}
 19531              	.LCFI3:
 19532              		.cfi_def_cfa_offset 4
 19533 0002 85B0     		sub	sp, sp, #20
 19534              	.LCFI4:
 19535              		.cfi_def_cfa_offset 24
 19536 0004 00AF     		add	r7, sp, #0
 19537              		.cfi_offset 7, -4
 19538              	.LCFI5:
 19539              		.cfi_def_cfa_register 7
 19540 0006 F860     		str	r0, [r7, #12]
 19541 0008 B960     		str	r1, [r7, #8]
 19542 000a 7A60     		str	r2, [r7, #4]
 19543              	.LBB2:
 19544              		.loc 91 57 0
 19545 000c FB68     		ldr	r3, [r7, #12]
 19546 000e BA68     		ldr	r2, [r7, #8]
 19547 0010 1A60     		str	r2, [r3, #0]
 19548 0012 FB68     		ldr	r3, [r7, #12]
 19549 0014 7A68     		ldr	r2, [r7, #4]
 19550 0016 5A60     		str	r2, [r3, #4]
 19551              	.LBE2:
 19552 0018 FB68     		ldr	r3, [r7, #12]
 19553 001a 1846     		mov	r0, r3
 19554 001c 07F11407 		add	r7, r7, #20
 19555 0020 BD46     		mov	sp, r7
 19556 0022 80BC     		pop	{r7}
 19557 0024 7047     		bx	lr
 19558              		.cfi_endproc
 19559              	.LFE1062:
 19561              		.weak	_ZN18IMonochromeDisplay5PointC1Eii
 19562              		.thumb_set _ZN18IMonochromeDisplay5PointC1Eii,_ZN18IMonochromeDisplay5PointC2Eii
 19563 0026 00BF     		.section	.text._ZN18IMonochromeDisplay4SizeC2Eii,"axG",%progbits,_ZN18IMonochromeDisplay4SizeC5Eii
 19564              		.align	2
 19565              		.weak	_ZN18IMonochromeDisplay4SizeC2Eii
 19566              		.thumb
 19567              		.thumb_func
 19569              	_ZN18IMonochromeDisplay4SizeC2Eii:
 19570              	.LFB1065:
  58:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  59:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		int x;		///< @brief The X coordinate.
  60:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		int y;		///< @brief The Y coordinate.
  61:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	};
  62:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  63:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
  64:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief This class represents a size in a two-dimensional space used to describe the size for al
  65:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
  66:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	class Size
  67:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	{
  68:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	public:
  69:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		/**
  70:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 * @brief Constructor, initializes the width and height of a size.
  71:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 *
  72:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 * @param width 	The width.
  73:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 * @param height 	The height.
  74:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		 */
  75:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		inline explicit Size( int width = 0 , int height = 0 ) : width( width ) , height( height ) {}
 19571              		.loc 91 75 0
 19572              		.cfi_startproc
 19573              		@ args = 0, pretend = 0, frame = 16
 19574              		@ frame_needed = 1, uses_anonymous_args = 0
 19575              		@ link register save eliminated.
 19576 0000 80B4     		push	{r7}
 19577              	.LCFI6:
 19578              		.cfi_def_cfa_offset 4
 19579 0002 85B0     		sub	sp, sp, #20
 19580              	.LCFI7:
 19581              		.cfi_def_cfa_offset 24
 19582 0004 00AF     		add	r7, sp, #0
 19583              		.cfi_offset 7, -4
 19584              	.LCFI8:
 19585              		.cfi_def_cfa_register 7
 19586 0006 F860     		str	r0, [r7, #12]
 19587 0008 B960     		str	r1, [r7, #8]
 19588 000a 7A60     		str	r2, [r7, #4]
 19589              	.LBB3:
 19590              		.loc 91 75 0
 19591 000c FB68     		ldr	r3, [r7, #12]
 19592 000e BA68     		ldr	r2, [r7, #8]
 19593 0010 1A60     		str	r2, [r3, #0]
 19594 0012 FB68     		ldr	r3, [r7, #12]
 19595 0014 7A68     		ldr	r2, [r7, #4]
 19596 0016 5A60     		str	r2, [r3, #4]
 19597              	.LBE3:
 19598 0018 FB68     		ldr	r3, [r7, #12]
 19599 001a 1846     		mov	r0, r3
 19600 001c 07F11407 		add	r7, r7, #20
 19601 0020 BD46     		mov	sp, r7
 19602 0022 80BC     		pop	{r7}
 19603 0024 7047     		bx	lr
 19604              		.cfi_endproc
 19605              	.LFE1065:
 19607              		.weak	_ZN18IMonochromeDisplay4SizeC1Eii
 19608              		.thumb_set _ZN18IMonochromeDisplay4SizeC1Eii,_ZN18IMonochromeDisplay4SizeC2Eii
 19609 0026 00BF     		.section	.text._ZN18IMonochromeDisplayC2Ev,"axG",%progbits,_ZN18IMonochromeDisplayC5Ev,comdat
 19610              		.align	2
 19611              		.weak	_ZN18IMonochromeDisplayC2Ev
 19612              		.thumb
 19613              		.thumb_func
 19615              	_ZN18IMonochromeDisplayC2Ev:
 19616              	.LFB1068:
  76:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  77:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		int width;		///< @brief The width.
  78:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 		int height;		///< @brief The height.
  79:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	};
  80:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  81:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** protected:
  82:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	// It is just an interface, so constructor and destructor should be not public.
  83:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	explicit IMonochromeDisplay() {}
 19617              		.loc 91 83 0
 19618              		.cfi_startproc
 19619              		@ args = 0, pretend = 0, frame = 8
 19620              		@ frame_needed = 1, uses_anonymous_args = 0
 19621              		@ link register save eliminated.
 19622 0000 80B4     		push	{r7}
 19623              	.LCFI9:
 19624              		.cfi_def_cfa_offset 4
 19625 0002 83B0     		sub	sp, sp, #12
 19626              	.LCFI10:
 19627              		.cfi_def_cfa_offset 16
 19628 0004 00AF     		add	r7, sp, #0
 19629              		.cfi_offset 7, -4
 19630              	.LCFI11:
 19631              		.cfi_def_cfa_register 7
 19632 0006 7860     		str	r0, [r7, #4]
 19633              	.LBB4:
 19634              		.loc 91 83 0
 19635 0008 7B68     		ldr	r3, [r7, #4]
 19636 000a 044A     		ldr	r2, .L8
 19637 000c 1A60     		str	r2, [r3, #0]
 19638              	.LBE4:
 19639 000e 7B68     		ldr	r3, [r7, #4]
 19640 0010 1846     		mov	r0, r3
 19641 0012 07F10C07 		add	r7, r7, #12
 19642 0016 BD46     		mov	sp, r7
 19643 0018 80BC     		pop	{r7}
 19644 001a 7047     		bx	lr
 19645              	.L9:
 19646              		.align	2
 19647              	.L8:
 19648 001c 08000000 		.word	_ZTV18IMonochromeDisplay+8
 19649              		.cfi_endproc
 19650              	.LFE1068:
 19652              		.weak	_ZN18IMonochromeDisplayC1Ev
 19653              		.thumb_set _ZN18IMonochromeDisplayC1Ev,_ZN18IMonochromeDisplayC2Ev
 19654              		.section	.text._ZN18IMonochromeDisplayD2Ev,"axG",%progbits,_ZN18IMonochromeDisplayD5Ev,comdat
 19655              		.align	2
 19656              		.weak	_ZN18IMonochromeDisplayD2Ev
 19657              		.thumb
 19658              		.thumb_func
 19660              	_ZN18IMonochromeDisplayD2Ev:
 19661              	.LFB1071:
  84:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual ~IMonochromeDisplay() {}
 19662              		.loc 91 84 0
 19663              		.cfi_startproc
 19664              		@ args = 0, pretend = 0, frame = 8
 19665              		@ frame_needed = 1, uses_anonymous_args = 0
 19666 0000 80B5     		push	{r7, lr}
 19667              	.LCFI12:
 19668              		.cfi_def_cfa_offset 8
 19669 0002 82B0     		sub	sp, sp, #8
 19670              	.LCFI13:
 19671              		.cfi_def_cfa_offset 16
 19672 0004 00AF     		add	r7, sp, #0
 19673              		.cfi_offset 14, -4
 19674              		.cfi_offset 7, -8
 19675              	.LCFI14:
 19676              		.cfi_def_cfa_register 7
 19677 0006 7860     		str	r0, [r7, #4]
 19678              	.LBB5:
 19679              		.loc 91 84 0
 19680 0008 7B68     		ldr	r3, [r7, #4]
 19681 000a 094A     		ldr	r2, .L13
 19682 000c 1A60     		str	r2, [r3, #0]
 19683              	.LBE5:
 19684 000e 4FF00003 		mov	r3, #0
 19685 0012 03F00103 		and	r3, r3, #1
 19686 0016 DBB2     		uxtb	r3, r3
 19687 0018 002B     		cmp	r3, #0
 19688 001a 02D0     		beq	.L12
 19689              		.loc 91 84 0 is_stmt 0 discriminator 1
 19690 001c 7868     		ldr	r0, [r7, #4]
 19691 001e FFF7FEFF 		bl	_ZdlPv
 19692              	.L12:
 19693              		.loc 91 84 0 discriminator 2
 19694 0022 7B68     		ldr	r3, [r7, #4]
 19695 0024 1846     		mov	r0, r3
 19696 0026 07F10807 		add	r7, r7, #8
 19697 002a BD46     		mov	sp, r7
 19698 002c 80BD     		pop	{r7, pc}
 19699              	.L14:
 19700 002e 00BF     		.align	2
 19701              	.L13:
 19702 0030 08000000 		.word	_ZTV18IMonochromeDisplay+8
 19703              		.cfi_endproc
 19704              	.LFE1071:
 19706              		.weak	_ZN18IMonochromeDisplayD1Ev
 19707              		.thumb_set _ZN18IMonochromeDisplayD1Ev,_ZN18IMonochromeDisplayD2Ev
 19708              		.section	.text._ZN18IMonochromeDisplayD0Ev,"axG",%progbits,_ZN18IMonochromeDisplayD5Ev,comdat
 19709              		.align	2
 19710              		.weak	_ZN18IMonochromeDisplayD0Ev
 19711              		.thumb
 19712              		.thumb_func
 19714              	_ZN18IMonochromeDisplayD0Ev:
 19715              	.LFB1073:
 19716              		.loc 91 84 0 is_stmt 1
 19717              		.cfi_startproc
 19718              		@ args = 0, pretend = 0, frame = 8
 19719              		@ frame_needed = 1, uses_anonymous_args = 0
 19720 0000 80B5     		push	{r7, lr}
 19721              	.LCFI15:
 19722              		.cfi_def_cfa_offset 8
 19723 0002 82B0     		sub	sp, sp, #8
 19724              	.LCFI16:
 19725              		.cfi_def_cfa_offset 16
 19726 0004 00AF     		add	r7, sp, #0
 19727              		.cfi_offset 14, -4
 19728              		.cfi_offset 7, -8
 19729              	.LCFI17:
 19730              		.cfi_def_cfa_register 7
 19731 0006 7860     		str	r0, [r7, #4]
 19732              		.loc 91 84 0
 19733 0008 7868     		ldr	r0, [r7, #4]
 19734 000a FFF7FEFF 		bl	_ZN18IMonochromeDisplayD1Ev
 19735 000e 7868     		ldr	r0, [r7, #4]
 19736 0010 FFF7FEFF 		bl	_ZdlPv
 19737 0014 7B68     		ldr	r3, [r7, #4]
 19738 0016 1846     		mov	r0, r3
 19739 0018 07F10807 		add	r7, r7, #8
 19740 001c BD46     		mov	sp, r7
 19741 001e 80BD     		pop	{r7, pc}
 19742              		.cfi_endproc
 19743              	.LFE1073:
 19745              		.section	.text._ZN18IMonochromeDisplay5clearENS_10PixelColorE,"axG",%progbits,_ZN18IMonochromeDisp
 19746              		.align	2
 19747              		.weak	_ZN18IMonochromeDisplay5clearENS_10PixelColorE
 19748              		.thumb
 19749              		.thumb_func
 19751              	_ZN18IMonochromeDisplay5clearENS_10PixelColorE:
 19752              	.LFB1074:
  85:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  86:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** public:
  87:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
  88:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Returns the resolution of the display in pixels.
  89:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
  90:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is REQUIRED.
  91:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
  92:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @return Resolution in pixels.
  93:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
  94:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual Size resolution() const = 0;
  95:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
  96:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
  97:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Returns a bit-mask of the operations that are accelerated.
  98:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
  99:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is REQUIRED.
 100:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 101:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @return Bitmask of supported hardware accelerated drawing methods.
 102:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 103:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual AcceleratedDrawingMethods acceleratedDrawingMethods() const = 0;
 104:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 105:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 106:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Initializes all subsystems and the display itself needed for proper operation.
 107:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 108:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method must be called before any other method can be called.
 109:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 110:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is REQUIRED.
 111:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 112:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @return True if the LCD display could be initialized and is ready to be used, false otherwise.
 113:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 114:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual bool initialize() = 0;
 115:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 116:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 117:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Enables the display operation if the display was deactivated before with the disable() m
 118:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 119:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is REQUIRED.
 120:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 121:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @return True if the display could be enabled (or already was enabled), otherwise false.
 122:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 123:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual bool enable() = 0;
 124:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 125:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 126:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Turns the display off to save energy.
 127:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 128:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * Returns true if the display could be turned off or false if either the device could not been tu
 129:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * by an error or the display does not support this operation at all.
 130:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 131:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is REQUIRED.
 132:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 133:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @return True on success, false on error or if disabling is not implemented.
 134:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 135:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual bool disable() = 0;
 136:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 137:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 138:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Returns the actual value of the pixel addressed by the point p.
 139:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 140:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is REQUIRED.
 141:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 142:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param point 	Point for which the pixel value should be returned.
 143:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @return 			The pixel color or Undefined if the point p is outside the display.
 144:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 145:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual PixelColor pixel( const Point & point ) = 0;
 146:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 147:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 148:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Changes the pixel color at the given position to the given pixel color.
 149:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 150:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is REQUIRED.
 151:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 152:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param point 	Point for which the pixel value should be changed.
 153:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param color 	The pixel color to set for that point.
 154:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 155:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void setPixel( const Point & point , PixelColor color ) = 0;
 156:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 157:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 158:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Clears the display if this accelerated method is supported.
 159:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 160:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 161:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 162:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param background Pixel color to use for background color.
 163:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 164:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void clear( PixelColor background = White ) {}
 19753              		.loc 91 164 0
 19754              		.cfi_startproc
 19755              		@ args = 0, pretend = 0, frame = 8
 19756              		@ frame_needed = 1, uses_anonymous_args = 0
 19757              		@ link register save eliminated.
 19758 0000 80B4     		push	{r7}
 19759              	.LCFI18:
 19760              		.cfi_def_cfa_offset 4
 19761 0002 83B0     		sub	sp, sp, #12
 19762              	.LCFI19:
 19763              		.cfi_def_cfa_offset 16
 19764 0004 00AF     		add	r7, sp, #0
 19765              		.cfi_offset 7, -4
 19766              	.LCFI20:
 19767              		.cfi_def_cfa_register 7
 19768 0006 7860     		str	r0, [r7, #4]
 19769 0008 0B46     		mov	r3, r1
 19770 000a FB70     		strb	r3, [r7, #3]
 19771              		.loc 91 164 0
 19772 000c 07F10C07 		add	r7, r7, #12
 19773 0010 BD46     		mov	sp, r7
 19774 0012 80BC     		pop	{r7}
 19775 0014 7047     		bx	lr
 19776              		.cfi_endproc
 19777              	.LFE1074:
 19779 0016 00BF     		.section	.text._ZN18IMonochromeDisplay18writeDisplayMemoryEjPKhj,"axG",%progbits,_ZN18IMonochromeD
 19780              		.align	2
 19781              		.weak	_ZN18IMonochromeDisplay18writeDisplayMemoryEjPKhj
 19782              		.thumb
 19783              		.thumb_func
 19785              	_ZN18IMonochromeDisplay18writeDisplayMemoryEjPKhj:
 19786              	.LFB1075:
 165:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 166:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 167:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Copies the buffer pointed by sourceBitmap into the screen display if the display support
 168:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  this acceleration method.
 169:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 170:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * Note that the buffer pointed by sourceBitmap must be at least have the size to hold all bits al
 171:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * by 1 byte.
 172:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 173:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 174:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 175:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param startAddress The start address inside the display memory.
 176:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param sourceBitmap Pointer to the data to be copied into the display buffer.
 177:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param numberOfBits The total number of bits to copy to the display.
 178:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 179:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void writeDisplayMemory( size_t startAddress , const uint8_t * const sourceBitmap ,
 19787              		.loc 91 179 0
 19788              		.cfi_startproc
 19789              		@ args = 0, pretend = 0, frame = 16
 19790              		@ frame_needed = 1, uses_anonymous_args = 0
 19791              		@ link register save eliminated.
 19792 0000 80B4     		push	{r7}
 19793              	.LCFI21:
 19794              		.cfi_def_cfa_offset 4
 19795 0002 85B0     		sub	sp, sp, #20
 19796              	.LCFI22:
 19797              		.cfi_def_cfa_offset 24
 19798 0004 00AF     		add	r7, sp, #0
 19799              		.cfi_offset 7, -4
 19800              	.LCFI23:
 19801              		.cfi_def_cfa_register 7
 19802 0006 F860     		str	r0, [r7, #12]
 19803 0008 B960     		str	r1, [r7, #8]
 19804 000a 7A60     		str	r2, [r7, #4]
 19805 000c 3B60     		str	r3, [r7, #0]
 180:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 									 size_t numberOfBits ) {}
 19806              		.loc 91 180 0
 19807 000e 07F11407 		add	r7, r7, #20
 19808 0012 BD46     		mov	sp, r7
 19809 0014 80BC     		pop	{r7}
 19810 0016 7047     		bx	lr
 19811              		.cfi_endproc
 19812              	.LFE1075:
 19814              		.section	.text._ZN18IMonochromeDisplay17readDisplayMemoryEjPhj,"axG",%progbits,_ZN18IMonochromeDis
 19815              		.align	2
 19816              		.weak	_ZN18IMonochromeDisplay17readDisplayMemoryEjPhj
 19817              		.thumb
 19818              		.thumb_func
 19820              	_ZN18IMonochromeDisplay17readDisplayMemoryEjPhj:
 19821              	.LFB1076:
 181:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 182:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 183:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Reads the buffer pointed by sourceBitmap into the screen display if the display supports
 184:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  this acceleration method.
 185:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 186:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * Note that the buffer pointed by sourceBitmap must be at least have the size to hold all bits al
 187:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * by 1 byte.
 188:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 189:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 190:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 191:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param startAddress 		The start address inside the display memory.
 192:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param destinationBitmap Pointer to the data to be copied into the display buffer.
 193:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param numberOfBits 		The total number of bits to copy to the display.
 194:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 195:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void readDisplayMemory( size_t startAddress , uint8_t * const destinationBitmap , size_t n
 19822              		.loc 91 195 0
 19823              		.cfi_startproc
 19824              		@ args = 0, pretend = 0, frame = 16
 19825              		@ frame_needed = 1, uses_anonymous_args = 0
 19826              		@ link register save eliminated.
 19827 0000 80B4     		push	{r7}
 19828              	.LCFI24:
 19829              		.cfi_def_cfa_offset 4
 19830 0002 85B0     		sub	sp, sp, #20
 19831              	.LCFI25:
 19832              		.cfi_def_cfa_offset 24
 19833 0004 00AF     		add	r7, sp, #0
 19834              		.cfi_offset 7, -4
 19835              	.LCFI26:
 19836              		.cfi_def_cfa_register 7
 19837 0006 F860     		str	r0, [r7, #12]
 19838 0008 B960     		str	r1, [r7, #8]
 19839 000a 7A60     		str	r2, [r7, #4]
 19840 000c 3B60     		str	r3, [r7, #0]
 19841              		.loc 91 195 0
 19842 000e 07F11407 		add	r7, r7, #20
 19843 0012 BD46     		mov	sp, r7
 19844 0014 80BC     		pop	{r7}
 19845 0016 7047     		bx	lr
 19846              		.cfi_endproc
 19847              	.LFE1076:
 19849              		.section	.text._ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE,"axG",%progbits,_Z
 19850              		.align	2
 19851              		.weak	_ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE
 19852              		.thumb
 19853              		.thumb_func
 19855              	_ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE:
 19856              	.LFB1077:
 196:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 197:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 198:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Draws a line on the display from begin to end with the given pixel color if this acceler
 199:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  is supported by the display.
 200:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 201:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 202:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 203:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param begin Start point of the line.
 204:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param end End point of the line.
 205:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param color The color the line should have.
 206:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 207:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void drawLine( const Point & begin , const Point & end , PixelColor color ) {}
 19857              		.loc 91 207 0
 19858              		.cfi_startproc
 19859              		@ args = 0, pretend = 0, frame = 16
 19860              		@ frame_needed = 1, uses_anonymous_args = 0
 19861              		@ link register save eliminated.
 19862 0000 80B4     		push	{r7}
 19863              	.LCFI27:
 19864              		.cfi_def_cfa_offset 4
 19865 0002 85B0     		sub	sp, sp, #20
 19866              	.LCFI28:
 19867              		.cfi_def_cfa_offset 24
 19868 0004 00AF     		add	r7, sp, #0
 19869              		.cfi_offset 7, -4
 19870              	.LCFI29:
 19871              		.cfi_def_cfa_register 7
 19872 0006 F860     		str	r0, [r7, #12]
 19873 0008 B960     		str	r1, [r7, #8]
 19874 000a 7A60     		str	r2, [r7, #4]
 19875 000c FB70     		strb	r3, [r7, #3]
 19876              		.loc 91 207 0
 19877 000e 07F11407 		add	r7, r7, #20
 19878 0012 BD46     		mov	sp, r7
 19879 0014 80BC     		pop	{r7}
 19880 0016 7047     		bx	lr
 19881              		.cfi_endproc
 19882              	.LFE1077:
 19884              		.section	.text._ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE,"axG
 19885              		.align	2
 19886              		.weak	_ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
 19887              		.thumb
 19888              		.thumb_func
 19890              	_ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE:
 19891              	.LFB1078:
 208:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 209:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 210:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Draws the stroke of a rectangle on the display from begin to end with the given pixel co
 211:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  this accelerated method is supported by the display.
 212:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 213:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 214:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 215:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param topLeft 	Start point of the rectangle.
 216:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param size 		The dimensions of the rectangle.
 217:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param color 	The color the rectangle stroke should have.
 218:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 219:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void drawRectangle( const Point & topLeft , const Size & size , PixelColor color ) {}
 19892              		.loc 91 219 0
 19893              		.cfi_startproc
 19894              		@ args = 0, pretend = 0, frame = 16
 19895              		@ frame_needed = 1, uses_anonymous_args = 0
 19896              		@ link register save eliminated.
 19897 0000 80B4     		push	{r7}
 19898              	.LCFI30:
 19899              		.cfi_def_cfa_offset 4
 19900 0002 85B0     		sub	sp, sp, #20
 19901              	.LCFI31:
 19902              		.cfi_def_cfa_offset 24
 19903 0004 00AF     		add	r7, sp, #0
 19904              		.cfi_offset 7, -4
 19905              	.LCFI32:
 19906              		.cfi_def_cfa_register 7
 19907 0006 F860     		str	r0, [r7, #12]
 19908 0008 B960     		str	r1, [r7, #8]
 19909 000a 7A60     		str	r2, [r7, #4]
 19910 000c FB70     		strb	r3, [r7, #3]
 19911              		.loc 91 219 0
 19912 000e 07F11407 		add	r7, r7, #20
 19913 0012 BD46     		mov	sp, r7
 19914 0014 80BC     		pop	{r7}
 19915 0016 7047     		bx	lr
 19916              		.cfi_endproc
 19917              	.LFE1078:
 19919              		.section	.text._ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE,"axG
 19920              		.align	2
 19921              		.weak	_ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
 19922              		.thumb
 19923              		.thumb_func
 19925              	_ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE:
 19926              	.LFB1079:
 220:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 221:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 222:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Draws the fill of a rectangle on the display from begin to end with the given pixel colo
 223:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  this accelerated method is supported by the display.
 224:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 225:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 226:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 227:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param topLeft 	Start point of the rectangle.
 228:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param size 		The dimensions of the rectangle.
 229:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param color 	The color the rectangle fill should have.
 230:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 231:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void fillRectangle( const Point & topLeft , const Size & size , PixelColor color ) {}
 19927              		.loc 91 231 0
 19928              		.cfi_startproc
 19929              		@ args = 0, pretend = 0, frame = 16
 19930              		@ frame_needed = 1, uses_anonymous_args = 0
 19931              		@ link register save eliminated.
 19932 0000 80B4     		push	{r7}
 19933              	.LCFI33:
 19934              		.cfi_def_cfa_offset 4
 19935 0002 85B0     		sub	sp, sp, #20
 19936              	.LCFI34:
 19937              		.cfi_def_cfa_offset 24
 19938 0004 00AF     		add	r7, sp, #0
 19939              		.cfi_offset 7, -4
 19940              	.LCFI35:
 19941              		.cfi_def_cfa_register 7
 19942 0006 F860     		str	r0, [r7, #12]
 19943 0008 B960     		str	r1, [r7, #8]
 19944 000a 7A60     		str	r2, [r7, #4]
 19945 000c FB70     		strb	r3, [r7, #3]
 19946              		.loc 91 231 0
 19947 000e 07F11407 		add	r7, r7, #20
 19948 0012 BD46     		mov	sp, r7
 19949 0014 80BC     		pop	{r7}
 19950 0016 7047     		bx	lr
 19951              		.cfi_endproc
 19952              	.LFE1079:
 19954              		.section	.text._ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE,"axG",
 19955              		.align	2
 19956              		.weak	_ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
 19957              		.thumb
 19958              		.thumb_func
 19960              	_ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE:
 19961              	.LFB1080:
 232:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 233:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 234:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Draws the stroke of an ellipse on the display from begin to end with the given pixel col
 235:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  this accelerated method is supported by the display.
 236:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 237:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 238:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 239:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param topLeft 	Start point of the ellipse.
 240:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param size 		The dimensions of the ellipse.
 241:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param color 	The color the ellipse stroke should have.
 242:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 243:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void drawEllipse( const Point & topLeft , const Size & size , PixelColor color  ) {}
 19962              		.loc 91 243 0
 19963              		.cfi_startproc
 19964              		@ args = 0, pretend = 0, frame = 16
 19965              		@ frame_needed = 1, uses_anonymous_args = 0
 19966              		@ link register save eliminated.
 19967 0000 80B4     		push	{r7}
 19968              	.LCFI36:
 19969              		.cfi_def_cfa_offset 4
 19970 0002 85B0     		sub	sp, sp, #20
 19971              	.LCFI37:
 19972              		.cfi_def_cfa_offset 24
 19973 0004 00AF     		add	r7, sp, #0
 19974              		.cfi_offset 7, -4
 19975              	.LCFI38:
 19976              		.cfi_def_cfa_register 7
 19977 0006 F860     		str	r0, [r7, #12]
 19978 0008 B960     		str	r1, [r7, #8]
 19979 000a 7A60     		str	r2, [r7, #4]
 19980 000c FB70     		strb	r3, [r7, #3]
 19981              		.loc 91 243 0
 19982 000e 07F11407 		add	r7, r7, #20
 19983 0012 BD46     		mov	sp, r7
 19984 0014 80BC     		pop	{r7}
 19985 0016 7047     		bx	lr
 19986              		.cfi_endproc
 19987              	.LFE1080:
 19989              		.section	.text._ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE,"axG",
 19990              		.align	2
 19991              		.weak	_ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
 19992              		.thumb
 19993              		.thumb_func
 19995              	_ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE:
 19996              	.LFB1081:
 244:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 245:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 246:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Draws the fill of an ellipse on the display from begin to end with the given pixel color
 247:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  this accelerated method is supported by the display.
 248:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 249:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 250:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 251:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param topLeft 	Start point of the ellipse.
 252:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param size 		The dimensions of the ellipse.
 253:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param color 	The color the ellipse fill should have.
 254:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 255:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void fillEllipse( const Point & topLeft , const Size & size , PixelColor color  ) {}
 19997              		.loc 91 255 0
 19998              		.cfi_startproc
 19999              		@ args = 0, pretend = 0, frame = 16
 20000              		@ frame_needed = 1, uses_anonymous_args = 0
 20001              		@ link register save eliminated.
 20002 0000 80B4     		push	{r7}
 20003              	.LCFI39:
 20004              		.cfi_def_cfa_offset 4
 20005 0002 85B0     		sub	sp, sp, #20
 20006              	.LCFI40:
 20007              		.cfi_def_cfa_offset 24
 20008 0004 00AF     		add	r7, sp, #0
 20009              		.cfi_offset 7, -4
 20010              	.LCFI41:
 20011              		.cfi_def_cfa_register 7
 20012 0006 F860     		str	r0, [r7, #12]
 20013 0008 B960     		str	r1, [r7, #8]
 20014 000a 7A60     		str	r2, [r7, #4]
 20015 000c FB70     		strb	r3, [r7, #3]
 20016              		.loc 91 255 0
 20017 000e 07F11407 		add	r7, r7, #20
 20018 0012 BD46     		mov	sp, r7
 20019 0014 80BC     		pop	{r7}
 20020 0016 7047     		bx	lr
 20021              		.cfi_endproc
 20022              	.LFE1081:
 20024              		.section	.text._ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE,"axG",%progbits,_
 20025              		.align	2
 20026              		.weak	_ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE
 20027              		.thumb
 20028              		.thumb_func
 20030              	_ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE:
 20031              	.LFB1082:
 256:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 
 257:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	/**
 258:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @brief Draws the text on the display at the given point with the given pixel color if this acce
 259:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * 		  supported by the display.
 260:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 261:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * The system depends on the size of the characters that have to be 5x7 pixels for all characters.
 262:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 263:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * This method is OPTIONAL.
 264:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 *
 265:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param topLeft 	Start point of the text to display.
 266:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param text 		The text to render to the display.
 267:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 * @param color 	The color the ellipse fill should have.
 268:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	 */
 269:/home/desem/workspace/desenet/interfaces/imonochromedisplay.h **** 	virtual void drawText( const Point & topLeft , const std::string & text , PixelColor color  ) {}
 20032              		.loc 91 269 0
 20033              		.cfi_startproc
 20034              		@ args = 0, pretend = 0, frame = 16
 20035              		@ frame_needed = 1, uses_anonymous_args = 0
 20036              		@ link register save eliminated.
 20037 0000 80B4     		push	{r7}
 20038              	.LCFI42:
 20039              		.cfi_def_cfa_offset 4
 20040 0002 85B0     		sub	sp, sp, #20
 20041              	.LCFI43:
 20042              		.cfi_def_cfa_offset 24
 20043 0004 00AF     		add	r7, sp, #0
 20044              		.cfi_offset 7, -4
 20045              	.LCFI44:
 20046              		.cfi_def_cfa_register 7
 20047 0006 F860     		str	r0, [r7, #12]
 20048 0008 B960     		str	r1, [r7, #8]
 20049 000a 7A60     		str	r2, [r7, #4]
 20050 000c FB70     		strb	r3, [r7, #3]
 20051              		.loc 91 269 0
 20052 000e 07F11407 		add	r7, r7, #20
 20053 0012 BD46     		mov	sp, r7
 20054 0014 80BC     		pop	{r7}
 20055 0016 7047     		bx	lr
 20056              		.cfi_endproc
 20057              	.LFE1082:
 20059              		.section	.text._ZNK17MonochromeDisplay23getPixelColorFromBitmapERKN18IMonochromeDisplay5PointEPKh,
 20060              		.align	2
 20061              		.weak	_ZNK17MonochromeDisplay23getPixelColorFromBitmapERKN18IMonochromeDisplay5PointEPKh
 20062              		.thumb
 20063              		.thumb_func
 20065              	_ZNK17MonochromeDisplay23getPixelColorFromBitmapERKN18IMonochromeDisplay5PointEPKh:
 20066              	.LFB1086:
   1:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** #pragma once
   2:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
   3:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
   4:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** #include <IMonochromeDisplay>
   5:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** #include <board/display/displayspi.h>
   6:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
   7:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
   8:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** class MonochromeDisplay : public IMonochromeDisplay,
   9:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 						  public DisplaySpi
  10:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** {
  11:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** public:
  12:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	MonochromeDisplay();
  13:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual ~MonochromeDisplay();
  14:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  15:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	typedef IMonochromeDisplay::Point Point;
  16:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  17:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	// Implementation of the IMonochromeDisplay interface
  18:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual Size resolution() const;
  19:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual AcceleratedDrawingMethods acceleratedDrawingMethods() const;
  20:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual bool initialize();
  21:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual bool enable();
  22:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual bool disable();
  23:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual PixelColor pixel(const Point & point);
  24:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual void setPixel(const Point & point , PixelColor color);
  25:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual void clear(PixelColor background = White);
  26:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual void writeDisplayMemory(size_t startAddress,
  27:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 									const uint8_t * const sourceBitmap,
  28:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 									size_t numberOfBits);
  29:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	virtual void readDisplayMemory(size_t startAddress,
  30:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 								   uint8_t * const destinationBitmap,
  31:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 								   size_t numberOfBits);
  32:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  33:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	void setContrast(unsigned char contrast);
  34:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  35:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** protected:
  36:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	void enableReset(bool enable);
  37:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	void enableDisplay(bool enable);
  38:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	void configDisplay();
  39:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  40:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	/**
  41:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * Returns the color for a given point. The sourceBitmap has the pixel
  42:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * arranged horizontally. This means sourceBitmap[0] contains pixel from P(0,0) to P(7,0) which is
  43:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * in contrast to the _lcdBuffer where _lcdBuffer[0] contains pixel from P(0,0) to P(0,7).
  44:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 *
  45:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * @point Point from which the color is wanted to be known
  46:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * @sourceBitmap Bitmap reflecting the source from which the color should be extracted
  47:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * @return Color of the point.
  48:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 */
  49:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	inline PixelColor getPixelColorFromBitmap(const Point & point, const uint8_t * const sourceBitmap)
 20067              		.loc 89 49 0
 20068              		.cfi_startproc
 20069              		@ args = 0, pretend = 0, frame = 24
 20070              		@ frame_needed = 1, uses_anonymous_args = 0
 20071              		@ link register save eliminated.
 20072 0000 80B4     		push	{r7}
 20073              	.LCFI45:
 20074              		.cfi_def_cfa_offset 4
 20075 0002 87B0     		sub	sp, sp, #28
 20076              	.LCFI46:
 20077              		.cfi_def_cfa_offset 32
 20078 0004 00AF     		add	r7, sp, #0
 20079              		.cfi_offset 7, -4
 20080              	.LCFI47:
 20081              		.cfi_def_cfa_register 7
 20082 0006 F860     		str	r0, [r7, #12]
 20083 0008 B960     		str	r1, [r7, #8]
 20084 000a 7A60     		str	r2, [r7, #4]
 20085              	.LBB6:
  50:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	{
  51:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		uint8_t pixel;
  52:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  53:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		pixel = sourceBitmap[(point.x + (Width * point.y)) / 8];
 20086              		.loc 89 53 0
 20087 000c BB68     		ldr	r3, [r7, #8]
 20088 000e 1A68     		ldr	r2, [r3, #0]
 20089 0010 BB68     		ldr	r3, [r7, #8]
 20090 0012 5B68     		ldr	r3, [r3, #4]
 20091 0014 4FF05401 		mov	r1, #84
 20092 0018 01FB03F3 		mul	r3, r1, r3
 20093 001c D318     		adds	r3, r2, r3
 20094 001e 03F10702 		add	r2, r3, #7
 20095 0022 002B     		cmp	r3, #0
 20096 0024 B8BF     		it	lt
 20097 0026 1346     		movlt	r3, r2
 20098 0028 4FEAE303 		asr	r3, r3, #3
 20099 002c 7A68     		ldr	r2, [r7, #4]
 20100 002e D318     		adds	r3, r2, r3
 20101 0030 1B78     		ldrb	r3, [r3, #0]
 20102 0032 FB75     		strb	r3, [r7, #23]
  54:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		pixel &= (0x01 << ((point.x + (Width * point.y)) % 8));
 20103              		.loc 89 54 0
 20104 0034 BB68     		ldr	r3, [r7, #8]
 20105 0036 1A68     		ldr	r2, [r3, #0]
 20106 0038 BB68     		ldr	r3, [r7, #8]
 20107 003a 5B68     		ldr	r3, [r3, #4]
 20108 003c 4FF05401 		mov	r1, #84
 20109 0040 01FB03F3 		mul	r3, r1, r3
 20110 0044 D218     		adds	r2, r2, r3
 20111 0046 4FEAE273 		asr	r3, r2, #31
 20112 004a 4FEA5373 		lsr	r3, r3, #29
 20113 004e D218     		adds	r2, r2, r3
 20114 0050 02F00702 		and	r2, r2, #7
 20115 0054 D31A     		subs	r3, r2, r3
 20116 0056 4FF00102 		mov	r2, #1
 20117 005a 02FA03F3 		lsl	r3, r2, r3
 20118 005e DAB2     		uxtb	r2, r3
 20119 0060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 20120 0062 02EA0303 		and	r3, r2, r3
 20121 0066 DBB2     		uxtb	r3, r3
 20122 0068 FB75     		strb	r3, [r7, #23]
  55:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  56:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		return (pixel) ? Black : White;
 20123              		.loc 89 56 0
 20124 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 20125 006c 002B     		cmp	r3, #0
 20126 006e 02D0     		beq	.L27
 20127              		.loc 89 56 0 is_stmt 0 discriminator 1
 20128 0070 4FF00103 		mov	r3, #1
 20129 0074 01E0     		b	.L28
 20130              	.L27:
 20131              		.loc 89 56 0 discriminator 2
 20132 0076 4FF0FF03 		mov	r3, #255
 20133              	.L28:
 20134              		.loc 89 56 0 discriminator 3
 20135 007a 5BB2     		sxtb	r3, r3
 20136              	.LBE6:
  57:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	}
 20137              		.loc 89 57 0 is_stmt 1 discriminator 3
 20138 007c 1846     		mov	r0, r3
 20139 007e 07F11C07 		add	r7, r7, #28
 20140 0082 BD46     		mov	sp, r7
 20141 0084 80BC     		pop	{r7}
 20142 0086 7047     		bx	lr
 20143              		.cfi_endproc
 20144              	.LFE1086:
 20146              		.section	.text._ZN17MonochromeDisplay21setPixelColorToBitmapEPhRKN18IMonochromeDisplay5PointENS1_1
 20147              		.align	2
 20148              		.weak	_ZN17MonochromeDisplay21setPixelColorToBitmapEPhRKN18IMonochromeDisplay5PointENS1_10PixelCol
 20149              		.thumb
 20150              		.thumb_func
 20152              	_ZN17MonochromeDisplay21setPixelColorToBitmapEPhRKN18IMonochromeDisplay5PointENS1_10PixelColorE:
 20153              	.LFB1087:
  58:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 
  59:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	/**
  60:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * Sets the color for a given point to the destinationBitmap
  61:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 *
  62:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * @destinationBitmap Location where to write the color
  63:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * @point Point for the given color
  64:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 * @color Color for the given point
  65:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	 */
  66:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	inline void setPixelColorToBitmap(uint8_t * const destinationBitmap, const Point & point, PixelCol
 20154              		.loc 89 66 0
 20155              		.cfi_startproc
 20156              		@ args = 0, pretend = 0, frame = 16
 20157              		@ frame_needed = 1, uses_anonymous_args = 0
 20158              		@ link register save eliminated.
 20159 0000 80B4     		push	{r7}
 20160              	.LCFI48:
 20161              		.cfi_def_cfa_offset 4
 20162 0002 85B0     		sub	sp, sp, #20
 20163              	.LCFI49:
 20164              		.cfi_def_cfa_offset 24
 20165 0004 00AF     		add	r7, sp, #0
 20166              		.cfi_offset 7, -4
 20167              	.LCFI50:
 20168              		.cfi_def_cfa_register 7
 20169 0006 F860     		str	r0, [r7, #12]
 20170 0008 B960     		str	r1, [r7, #8]
 20171 000a 7A60     		str	r2, [r7, #4]
 20172 000c FB70     		strb	r3, [r7, #3]
  67:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	{
  68:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		if (color == IMonochromeDisplay::Black)
 20173              		.loc 89 68 0
 20174 000e 97F90330 		ldrsb	r3, [r7, #3]
 20175 0012 012B     		cmp	r3, #1
 20176 0014 41D1     		bne	.L30
  69:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		{
  70:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 			*(destinationBitmap + (point.y * Width + point.x) / 8) |= (1 << ((point.y * Width + point.x) % 8
 20177              		.loc 89 70 0
 20178 0016 7B68     		ldr	r3, [r7, #4]
 20179 0018 5B68     		ldr	r3, [r3, #4]
 20180 001a 4FF05402 		mov	r2, #84
 20181 001e 02FB03F2 		mul	r2, r2, r3
 20182 0022 7B68     		ldr	r3, [r7, #4]
 20183 0024 1B68     		ldr	r3, [r3, #0]
 20184 0026 D318     		adds	r3, r2, r3
 20185 0028 03F10702 		add	r2, r3, #7
 20186 002c 002B     		cmp	r3, #0
 20187 002e B8BF     		it	lt
 20188 0030 1346     		movlt	r3, r2
 20189 0032 4FEAE303 		asr	r3, r3, #3
 20190 0036 BA68     		ldr	r2, [r7, #8]
 20191 0038 D118     		adds	r1, r2, r3
 20192 003a 7B68     		ldr	r3, [r7, #4]
 20193 003c 5B68     		ldr	r3, [r3, #4]
 20194 003e 4FF05402 		mov	r2, #84
 20195 0042 02FB03F2 		mul	r2, r2, r3
 20196 0046 7B68     		ldr	r3, [r7, #4]
 20197 0048 1B68     		ldr	r3, [r3, #0]
 20198 004a D318     		adds	r3, r2, r3
 20199 004c 03F10702 		add	r2, r3, #7
 20200 0050 002B     		cmp	r3, #0
 20201 0052 B8BF     		it	lt
 20202 0054 1346     		movlt	r3, r2
 20203 0056 4FEAE303 		asr	r3, r3, #3
 20204 005a BA68     		ldr	r2, [r7, #8]
 20205 005c D318     		adds	r3, r2, r3
 20206 005e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 20207 0060 D8B2     		uxtb	r0, r3
 20208 0062 7B68     		ldr	r3, [r7, #4]
 20209 0064 5B68     		ldr	r3, [r3, #4]
 20210 0066 4FF05402 		mov	r2, #84
 20211 006a 02FB03F2 		mul	r2, r2, r3
 20212 006e 7B68     		ldr	r3, [r7, #4]
 20213 0070 1B68     		ldr	r3, [r3, #0]
 20214 0072 D218     		adds	r2, r2, r3
 20215 0074 4FEAE273 		asr	r3, r2, #31
 20216 0078 4FEA5373 		lsr	r3, r3, #29
 20217 007c D218     		adds	r2, r2, r3
 20218 007e 02F00702 		and	r2, r2, #7
 20219 0082 D31A     		subs	r3, r2, r3
 20220 0084 4FF00102 		mov	r2, #1
 20221 0088 02FA03F3 		lsl	r3, r2, r3
 20222 008c DBB2     		uxtb	r3, r3
 20223 008e 0246     		mov	r2, r0
 20224 0090 42EA0303 		orr	r3, r2, r3
 20225 0094 DBB2     		uxtb	r3, r3
 20226 0096 DBB2     		uxtb	r3, r3
 20227 0098 0B70     		strb	r3, [r1, #0]
 20228              	.L30:
  71:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		}
  72:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		if (color == IMonochromeDisplay::White)
 20229              		.loc 89 72 0
 20230 009a 97F90330 		ldrsb	r3, [r7, #3]
 20231 009e B3F1FF3F 		cmp	r3, #-1
 20232 00a2 44D1     		bne	.L29
  73:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		{
  74:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 			*(destinationBitmap + (point.y * Width + point.x) / 8) &= ~( 1 << ((point.y * Width + point.x) %
 20233              		.loc 89 74 0
 20234 00a4 7B68     		ldr	r3, [r7, #4]
 20235 00a6 5B68     		ldr	r3, [r3, #4]
 20236 00a8 4FF05402 		mov	r2, #84
 20237 00ac 02FB03F2 		mul	r2, r2, r3
 20238 00b0 7B68     		ldr	r3, [r7, #4]
 20239 00b2 1B68     		ldr	r3, [r3, #0]
 20240 00b4 D318     		adds	r3, r2, r3
 20241 00b6 03F10702 		add	r2, r3, #7
 20242 00ba 002B     		cmp	r3, #0
 20243 00bc B8BF     		it	lt
 20244 00be 1346     		movlt	r3, r2
 20245 00c0 4FEAE303 		asr	r3, r3, #3
 20246 00c4 BA68     		ldr	r2, [r7, #8]
 20247 00c6 D118     		adds	r1, r2, r3
 20248 00c8 7B68     		ldr	r3, [r7, #4]
 20249 00ca 5B68     		ldr	r3, [r3, #4]
 20250 00cc 4FF05402 		mov	r2, #84
 20251 00d0 02FB03F2 		mul	r2, r2, r3
 20252 00d4 7B68     		ldr	r3, [r7, #4]
 20253 00d6 1B68     		ldr	r3, [r3, #0]
 20254 00d8 D318     		adds	r3, r2, r3
 20255 00da 03F10702 		add	r2, r3, #7
 20256 00de 002B     		cmp	r3, #0
 20257 00e0 B8BF     		it	lt
 20258 00e2 1346     		movlt	r3, r2
 20259 00e4 4FEAE303 		asr	r3, r3, #3
 20260 00e8 BA68     		ldr	r2, [r7, #8]
 20261 00ea D318     		adds	r3, r2, r3
 20262 00ec 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 20263 00ee D8B2     		uxtb	r0, r3
 20264 00f0 7B68     		ldr	r3, [r7, #4]
 20265 00f2 5B68     		ldr	r3, [r3, #4]
 20266 00f4 4FF05402 		mov	r2, #84
 20267 00f8 02FB03F2 		mul	r2, r2, r3
 20268 00fc 7B68     		ldr	r3, [r7, #4]
 20269 00fe 1B68     		ldr	r3, [r3, #0]
 20270 0100 D218     		adds	r2, r2, r3
 20271 0102 4FEAE273 		asr	r3, r2, #31
 20272 0106 4FEA5373 		lsr	r3, r3, #29
 20273 010a D218     		adds	r2, r2, r3
 20274 010c 02F00702 		and	r2, r2, #7
 20275 0110 D31A     		subs	r3, r2, r3
 20276 0112 4FF00102 		mov	r2, #1
 20277 0116 02FA03F3 		lsl	r3, r2, r3
 20278 011a DBB2     		uxtb	r3, r3
 20279 011c 6FEA0303 		mvn	r3, r3
 20280 0120 DBB2     		uxtb	r3, r3
 20281 0122 0246     		mov	r2, r0
 20282 0124 02EA0303 		and	r3, r2, r3
 20283 0128 DBB2     		uxtb	r3, r3
 20284 012a DBB2     		uxtb	r3, r3
 20285 012c 0B70     		strb	r3, [r1, #0]
 20286              	.L29:
  75:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 		}
  76:../board/olimex-stm32f103-stk/board/display/monochromedisplay.h **** 	}
 20287              		.loc 89 76 0
 20288 012e 07F11407 		add	r7, r7, #20
 20289 0132 BD46     		mov	sp, r7
 20290 0134 80BC     		pop	{r7}
 20291 0136 7047     		bx	lr
 20292              		.cfi_endproc
 20293              	.LFE1087:
 20295              		.section	.text._ZN17MonochromeDisplayC2Ev,"ax",%progbits
 20296              		.align	2
 20297              		.global	_ZN17MonochromeDisplayC2Ev
 20298              		.thumb
 20299              		.thumb_func
 20301              	_ZN17MonochromeDisplayC2Ev:
 20302              	.LFB1089:
   1:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** #include <target.h>
   2:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** #include <inc/factory.h>
   3:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** #include <math.h>
   4:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** #include <trace/trace.h>
   5:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** #include "monochromedisplay.h"
   6:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
   7:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** MonochromeDisplay::MonochromeDisplay()
 20303              		.loc 1 7 0
 20304              		.cfi_startproc
 20305              		@ args = 0, pretend = 0, frame = 8
 20306              		@ frame_needed = 1, uses_anonymous_args = 0
 20307 0000 90B5     		push	{r4, r7, lr}
 20308              	.LCFI51:
 20309              		.cfi_def_cfa_offset 12
 20310 0002 83B0     		sub	sp, sp, #12
 20311              	.LCFI52:
 20312              		.cfi_def_cfa_offset 24
 20313 0004 00AF     		add	r7, sp, #0
 20314              		.cfi_offset 14, -4
 20315              		.cfi_offset 7, -8
 20316              		.cfi_offset 4, -12
 20317              	.LCFI53:
 20318              		.cfi_def_cfa_register 7
 20319 0006 7860     		str	r0, [r7, #4]
 20320              	.LBB7:
   8:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  : DisplaySpi(Factory::instance().sharedSpi())
 20321              		.loc 1 8 0
 20322 0008 7B68     		ldr	r3, [r7, #4]
 20323 000a 1846     		mov	r0, r3
 20324 000c FFF7FEFF 		bl	_ZN18IMonochromeDisplayC2Ev
 20325 0010 7B68     		ldr	r3, [r7, #4]
 20326 0012 03F10404 		add	r4, r3, #4
 20327 0016 FFF7FEFF 		bl	_ZN7Factory8instanceEv
 20328 001a 0346     		mov	r3, r0
 20329 001c 1846     		mov	r0, r3
 20330 001e FFF7FEFF 		bl	_ZN7Factory9sharedSpiEv
 20331 0022 0346     		mov	r3, r0
 20332 0024 2046     		mov	r0, r4
 20333 0026 1946     		mov	r1, r3
 20334 0028 FFF7FEFF 		bl	_ZN10DisplaySpiC2ER19DisplayNrfSharedSpi
 20335 002c 7B68     		ldr	r3, [r7, #4]
 20336 002e 054A     		ldr	r2, .L34
 20337 0030 1A60     		str	r2, [r3, #0]
 20338 0032 7B68     		ldr	r3, [r7, #4]
 20339 0034 044A     		ldr	r2, .L34+4
 20340 0036 5A60     		str	r2, [r3, #4]
 20341              	.LBE7:
   9:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
  10:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  11:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20342              		.loc 1 11 0
 20343 0038 7B68     		ldr	r3, [r7, #4]
 20344 003a 1846     		mov	r0, r3
 20345 003c 07F10C07 		add	r7, r7, #12
 20346 0040 BD46     		mov	sp, r7
 20347 0042 90BD     		pop	{r4, r7, pc}
 20348              	.L35:
 20349              		.align	2
 20350              	.L34:
 20351 0044 08000000 		.word	_ZTV17MonochromeDisplay+8
 20352 0048 58000000 		.word	_ZTV17MonochromeDisplay+88
 20353              		.cfi_endproc
 20354              	.LFE1089:
 20356              		.global	_ZN17MonochromeDisplayC1Ev
 20357              		.thumb_set _ZN17MonochromeDisplayC1Ev,_ZN17MonochromeDisplayC2Ev
 20358              		.section	.text._ZN17MonochromeDisplayD2Ev,"ax",%progbits
 20359              		.align	2
 20360              		.global	_ZN17MonochromeDisplayD2Ev
 20361              		.thumb
 20362              		.thumb_func
 20364              	_ZN17MonochromeDisplayD2Ev:
 20365              	.LFB1092:
  12:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  13:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** MonochromeDisplay::~MonochromeDisplay()
 20366              		.loc 1 13 0
 20367              		.cfi_startproc
 20368              		@ args = 0, pretend = 0, frame = 8
 20369              		@ frame_needed = 1, uses_anonymous_args = 0
 20370 0000 80B5     		push	{r7, lr}
 20371              	.LCFI54:
 20372              		.cfi_def_cfa_offset 8
 20373 0002 82B0     		sub	sp, sp, #8
 20374              	.LCFI55:
 20375              		.cfi_def_cfa_offset 16
 20376 0004 00AF     		add	r7, sp, #0
 20377              		.cfi_offset 14, -4
 20378              		.cfi_offset 7, -8
 20379              	.LCFI56:
 20380              		.cfi_def_cfa_register 7
 20381 0006 7860     		str	r0, [r7, #4]
 20382              	.LBB8:
 20383              		.loc 1 13 0
 20384 0008 7B68     		ldr	r3, [r7, #4]
 20385 000a 0F4A     		ldr	r2, .L39
 20386 000c 1A60     		str	r2, [r3, #0]
 20387 000e 7B68     		ldr	r3, [r7, #4]
 20388 0010 0E4A     		ldr	r2, .L39+4
 20389 0012 5A60     		str	r2, [r3, #4]
 20390 0014 7B68     		ldr	r3, [r7, #4]
 20391 0016 03F10403 		add	r3, r3, #4
  14:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
  15:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  16:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20392              		.loc 1 16 0
 20393 001a 1846     		mov	r0, r3
 20394 001c FFF7FEFF 		bl	_ZN10DisplaySpiD2Ev
  13:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** MonochromeDisplay::~MonochromeDisplay()
 20395              		.loc 1 13 0
 20396 0020 7B68     		ldr	r3, [r7, #4]
 20397              		.loc 1 16 0
 20398 0022 1846     		mov	r0, r3
 20399 0024 FFF7FEFF 		bl	_ZN18IMonochromeDisplayD2Ev
 20400              	.LBE8:
 20401 0028 4FF00003 		mov	r3, #0
 20402 002c 03F00103 		and	r3, r3, #1
 20403 0030 DBB2     		uxtb	r3, r3
 20404 0032 002B     		cmp	r3, #0
 20405 0034 02D0     		beq	.L38
 20406              		.loc 1 16 0 is_stmt 0 discriminator 2
 20407 0036 7868     		ldr	r0, [r7, #4]
 20408 0038 FFF7FEFF 		bl	_ZdlPv
 20409              	.L38:
 20410              		.loc 1 16 0 discriminator 3
 20411 003c 7B68     		ldr	r3, [r7, #4]
 20412 003e 1846     		mov	r0, r3
 20413 0040 07F10807 		add	r7, r7, #8
 20414 0044 BD46     		mov	sp, r7
 20415 0046 80BD     		pop	{r7, pc}
 20416              	.L40:
 20417              		.align	2
 20418              	.L39:
 20419 0048 08000000 		.word	_ZTV17MonochromeDisplay+8
 20420 004c 58000000 		.word	_ZTV17MonochromeDisplay+88
 20421              		.cfi_endproc
 20422              	.LFE1092:
 20424              		.global	_ZN17MonochromeDisplayD1Ev
 20425              		.thumb_set _ZN17MonochromeDisplayD1Ev,_ZN17MonochromeDisplayD2Ev
 20426              		.thumb_set .LTHUNK0,_ZN17MonochromeDisplayD1Ev
 20427              		.section	.text._ZThn4_N17MonochromeDisplayD1Ev,"ax",%progbits
 20428              		.align	2
 20429              		.global	_ZThn4_N17MonochromeDisplayD1Ev
 20430              		.thumb
 20431              		.thumb_func
 20433              	_ZThn4_N17MonochromeDisplayD1Ev:
 20434 0000 A0F10400 		sub	r0, r0, #4
 20435 0004 FFF7FEBF 		b	.LTHUNK0
 20437              		.section	.text._ZN17MonochromeDisplayD0Ev,"ax",%progbits
 20438              		.align	2
 20439              		.global	_ZN17MonochromeDisplayD0Ev
 20440              		.thumb
 20441              		.thumb_func
 20443              	_ZN17MonochromeDisplayD0Ev:
 20444              	.LFB1094:
  13:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** MonochromeDisplay::~MonochromeDisplay()
 20445              		.loc 1 13 0 is_stmt 1
 20446              		.cfi_startproc
 20447              		@ args = 0, pretend = 0, frame = 8
 20448              		@ frame_needed = 1, uses_anonymous_args = 0
 20449 0000 80B5     		push	{r7, lr}
 20450              	.LCFI57:
 20451              		.cfi_def_cfa_offset 8
 20452 0002 82B0     		sub	sp, sp, #8
 20453              	.LCFI58:
 20454              		.cfi_def_cfa_offset 16
 20455 0004 00AF     		add	r7, sp, #0
 20456              		.cfi_offset 14, -4
 20457              		.cfi_offset 7, -8
 20458              	.LCFI59:
 20459              		.cfi_def_cfa_register 7
 20460 0006 7860     		str	r0, [r7, #4]
 20461              		.loc 1 16 0
 20462 0008 7868     		ldr	r0, [r7, #4]
 20463 000a FFF7FEFF 		bl	_ZN17MonochromeDisplayD1Ev
 20464 000e 7868     		ldr	r0, [r7, #4]
 20465 0010 FFF7FEFF 		bl	_ZdlPv
 20466 0014 7B68     		ldr	r3, [r7, #4]
 20467 0016 1846     		mov	r0, r3
 20468 0018 07F10807 		add	r7, r7, #8
 20469 001c BD46     		mov	sp, r7
 20470 001e 80BD     		pop	{r7, pc}
 20471              		.cfi_endproc
 20472              	.LFE1094:
 20474              		.thumb_set .LTHUNK1,_ZN17MonochromeDisplayD0Ev
 20475              		.section	.text._ZThn4_N17MonochromeDisplayD0Ev,"ax",%progbits
 20476              		.align	2
 20477              		.global	_ZThn4_N17MonochromeDisplayD0Ev
 20478              		.thumb
 20479              		.thumb_func
 20481              	_ZThn4_N17MonochromeDisplayD0Ev:
 20482 0000 A0F10400 		sub	r0, r0, #4
 20483 0004 FFF7FEBF 		b	.LTHUNK1
 20485              		.section	.text._ZNK17MonochromeDisplay10resolutionEv,"ax",%progbits
 20486              		.align	2
 20487              		.global	_ZNK17MonochromeDisplay10resolutionEv
 20488              		.thumb
 20489              		.thumb_func
 20491              	_ZNK17MonochromeDisplay10resolutionEv:
 20492              	.LFB1095:
  17:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  18:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** IMonochromeDisplay::Size MonochromeDisplay::resolution() const
  19:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 20493              		.loc 1 19 0
 20494              		.cfi_startproc
 20495              		@ args = 0, pretend = 0, frame = 8
 20496              		@ frame_needed = 1, uses_anonymous_args = 0
 20497 0000 90B5     		push	{r4, r7, lr}
 20498              	.LCFI60:
 20499              		.cfi_def_cfa_offset 12
 20500 0002 83B0     		sub	sp, sp, #12
 20501              	.LCFI61:
 20502              		.cfi_def_cfa_offset 24
 20503 0004 00AF     		add	r7, sp, #0
 20504              		.cfi_offset 14, -4
 20505              		.cfi_offset 7, -8
 20506              		.cfi_offset 4, -12
 20507              	.LCFI62:
 20508              		.cfi_def_cfa_register 7
 20509 0006 0446     		mov	r4, r0
 20510 0008 7960     		str	r1, [r7, #4]
  20:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	return Size(Width, Height);
 20511              		.loc 1 20 0
 20512 000a 2046     		mov	r0, r4
 20513 000c 4FF05401 		mov	r1, #84
 20514 0010 4FF03002 		mov	r2, #48
 20515 0014 FFF7FEFF 		bl	_ZN18IMonochromeDisplay4SizeC1Eii
  21:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20516              		.loc 1 21 0
 20517 0018 2046     		mov	r0, r4
 20518 001a 07F10C07 		add	r7, r7, #12
 20519 001e BD46     		mov	sp, r7
 20520 0020 90BD     		pop	{r4, r7, pc}
 20521              		.cfi_endproc
 20522              	.LFE1095:
 20524 0022 00BF     		.section	.text._ZNK17MonochromeDisplay25acceleratedDrawingMethodsEv,"ax",%progbits
 20525              		.align	2
 20526              		.global	_ZNK17MonochromeDisplay25acceleratedDrawingMethodsEv
 20527              		.thumb
 20528              		.thumb_func
 20530              	_ZNK17MonochromeDisplay25acceleratedDrawingMethodsEv:
 20531              	.LFB1096:
  22:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  23:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** IMonochromeDisplay::AcceleratedDrawingMethods MonochromeDisplay::acceleratedDrawingMethods() const
  24:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 20532              		.loc 1 24 0
 20533              		.cfi_startproc
 20534              		@ args = 0, pretend = 0, frame = 16
 20535              		@ frame_needed = 1, uses_anonymous_args = 0
 20536 0000 80B5     		push	{r7, lr}
 20537              	.LCFI63:
 20538              		.cfi_def_cfa_offset 8
 20539 0002 84B0     		sub	sp, sp, #16
 20540              	.LCFI64:
 20541              		.cfi_def_cfa_offset 24
 20542 0004 00AF     		add	r7, sp, #0
 20543              		.cfi_offset 14, -4
 20544              		.cfi_offset 7, -8
 20545              	.LCFI65:
 20546              		.cfi_def_cfa_register 7
 20547 0006 7860     		str	r0, [r7, #4]
 20548              	.LBB9:
  25:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	AcceleratedDrawingMethods accels;
  26:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  27:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	memset(&accels, 0, sizeof(AcceleratedDrawingMethods));
 20549              		.loc 1 27 0
 20550 0008 07F10C03 		add	r3, r7, #12
 20551 000c 1846     		mov	r0, r3
 20552 000e 4FF00001 		mov	r1, #0
 20553 0012 4FF00402 		mov	r2, #4
 20554 0016 FFF7FEFF 		bl	memset
  28:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  29:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	accels.memoryCopyAccelerated = 1;
 20555              		.loc 1 29 0
 20556 001a FB68     		ldr	r3, [r7, #12]
 20557 001c 43F00203 		orr	r3, r3, #2
 20558 0020 FB60     		str	r3, [r7, #12]
  30:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  31:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	return accels;
 20559              		.loc 1 31 0
 20560 0022 FB68     		ldr	r3, [r7, #12]
 20561              	.LBE9:
  32:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20562              		.loc 1 32 0
 20563 0024 1846     		mov	r0, r3
 20564 0026 07F11007 		add	r7, r7, #16
 20565 002a BD46     		mov	sp, r7
 20566 002c 80BD     		pop	{r7, pc}
 20567              		.cfi_endproc
 20568              	.LFE1096:
 20570 002e 00BF     		.section	.text._ZN17MonochromeDisplay10initializeEv,"ax",%progbits
 20571              		.align	2
 20572              		.global	_ZN17MonochromeDisplay10initializeEv
 20573              		.thumb
 20574              		.thumb_func
 20576              	_ZN17MonochromeDisplay10initializeEv:
 20577              	.LFB1097:
  33:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  34:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** bool MonochromeDisplay::initialize()
  35:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 20578              		.loc 1 35 0
 20579              		.cfi_startproc
 20580              		@ args = 0, pretend = 0, frame = 16
 20581              		@ frame_needed = 1, uses_anonymous_args = 0
 20582 0000 80B5     		push	{r7, lr}
 20583              	.LCFI66:
 20584              		.cfi_def_cfa_offset 8
 20585 0002 84B0     		sub	sp, sp, #16
 20586              	.LCFI67:
 20587              		.cfi_def_cfa_offset 24
 20588 0004 00AF     		add	r7, sp, #0
 20589              		.cfi_offset 14, -4
 20590              		.cfi_offset 7, -8
 20591              	.LCFI68:
 20592              		.cfi_def_cfa_register 7
 20593 0006 7860     		str	r0, [r7, #4]
 20594              	.LBB10:
  36:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_InitTypeDef gpioInitStructure;
  37:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  38:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Enable needed clocks
  39:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
 20595              		.loc 1 39 0
 20596 0008 4FF01000 		mov	r0, #16
 20597 000c 4FF00101 		mov	r1, #1
 20598 0010 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  40:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  41:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Initialize SPI (for general use)
  42:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::initialize();
 20599              		.loc 1 42 0
 20600 0014 7B68     		ldr	r3, [r7, #4]
 20601 0016 03F10403 		add	r3, r3, #4
 20602 001a 1846     		mov	r0, r3
 20603 001c FFF7FEFF 		bl	_ZN10DisplaySpi10initializeEv
  43:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  44:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Configure PB2 as Output push-pull, used as D/C
  45:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	gpioInitStructure.GPIO_Pin = GPIO_Pin_2;
 20604              		.loc 1 45 0
 20605 0020 4FF00403 		mov	r3, #4
 20606 0024 3B81     		strh	r3, [r7, #8]	@ movhi
  46:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	gpioInitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 20607              		.loc 1 46 0
 20608 0026 4FF00303 		mov	r3, #3
 20609 002a BB72     		strb	r3, [r7, #10]
  47:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	gpioInitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 20610              		.loc 1 47 0
 20611 002c 4FF01003 		mov	r3, #16
 20612 0030 FB72     		strb	r3, [r7, #11]
  48:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_Init(GPIOB, &gpioInitStructure);
 20613              		.loc 1 48 0
 20614 0032 07F10803 		add	r3, r7, #8
 20615 0036 4FF44060 		mov	r0, #3072
 20616 003a C4F20100 		movt	r0, 16385
 20617 003e 1946     		mov	r1, r3
 20618 0040 FFF7FEFF 		bl	GPIO_Init
  49:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// D/C high
  50:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_WriteBit(GPIOB, GPIO_Pin_2, Bit_SET);
 20619              		.loc 1 50 0
 20620 0044 4FF44060 		mov	r0, #3072
 20621 0048 C4F20100 		movt	r0, 16385
 20622 004c 4FF00401 		mov	r1, #4
 20623 0050 4FF00102 		mov	r2, #1
 20624 0054 FFF7FEFF 		bl	GPIO_WriteBit
  51:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  52:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Configure PC7 and PC10 as Output push-pull, used as LCD_RES and LCD_E
  53:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	gpioInitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_10;
 20625              		.loc 1 53 0
 20626 0058 4FF49063 		mov	r3, #1152
 20627 005c 3B81     		strh	r3, [r7, #8]	@ movhi
  54:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	gpioInitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 20628              		.loc 1 54 0
 20629 005e 4FF00303 		mov	r3, #3
 20630 0062 BB72     		strb	r3, [r7, #10]
  55:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	gpioInitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 20631              		.loc 1 55 0
 20632 0064 4FF01003 		mov	r3, #16
 20633 0068 FB72     		strb	r3, [r7, #11]
  56:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_Init(GPIOC, &gpioInitStructure);
 20634              		.loc 1 56 0
 20635 006a 07F10803 		add	r3, r7, #8
 20636 006e 4FF48050 		mov	r0, #4096
 20637 0072 C4F20100 		movt	r0, 16385
 20638 0076 1946     		mov	r1, r3
 20639 0078 FFF7FEFF 		bl	GPIO_Init
  57:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  58:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// LCD_E - disable
  59:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_WriteBit(GPIOC, GPIO_Pin_10, Bit_SET);
 20640              		.loc 1 59 0
 20641 007c 4FF48050 		mov	r0, #4096
 20642 0080 C4F20100 		movt	r0, 16385
 20643 0084 4FF48061 		mov	r1, #1024
 20644 0088 4FF00102 		mov	r2, #1
 20645 008c FFF7FEFF 		bl	GPIO_WriteBit
  60:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Set Reset pin (active low)
  61:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_WriteBit(GPIOC, GPIO_Pin_7, Bit_SET);
 20646              		.loc 1 61 0
 20647 0090 4FF48050 		mov	r0, #4096
 20648 0094 C4F20100 		movt	r0, 16385
 20649 0098 4FF08001 		mov	r1, #128
 20650 009c 4FF00102 		mov	r2, #1
 20651 00a0 FFF7FEFF 		bl	GPIO_WriteBit
  62:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  63:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Reset the display
  64:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableReset(true);
 20652              		.loc 1 64 0
 20653 00a4 7868     		ldr	r0, [r7, #4]
 20654 00a6 4FF00101 		mov	r1, #1
 20655 00aa FFF7FEFF 		bl	_ZN17MonochromeDisplay11enableResetEb
 20656              	.LBB11:
  65:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (unsigned int i = 2000; i--;) { continue; }
 20657              		.loc 1 65 0
 20658 00ae 4FF4FA63 		mov	r3, #2000
 20659 00b2 FB60     		str	r3, [r7, #12]
 20660 00b4 00E0     		b	.L46
 20661              	.L48:
 20662 00b6 00BF     		nop
 20663              	.L46:
 20664              		.loc 1 65 0 is_stmt 0 discriminator 1
 20665 00b8 FB68     		ldr	r3, [r7, #12]
 20666 00ba 002B     		cmp	r3, #0
 20667 00bc 0CBF     		ite	eq
 20668 00be 0023     		moveq	r3, #0
 20669 00c0 0123     		movne	r3, #1
 20670 00c2 DBB2     		uxtb	r3, r3
 20671 00c4 FA68     		ldr	r2, [r7, #12]
 20672 00c6 02F1FF32 		add	r2, r2, #-1
 20673 00ca FA60     		str	r2, [r7, #12]
 20674 00cc 002B     		cmp	r3, #0
 20675 00ce F2D1     		bne	.L48
 20676              	.LBE11:
  66:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableReset(false);
 20677              		.loc 1 66 0 is_stmt 1
 20678 00d0 7868     		ldr	r0, [r7, #4]
 20679 00d2 4FF00001 		mov	r1, #0
 20680 00d6 FFF7FEFF 		bl	_ZN17MonochromeDisplay11enableResetEb
  67:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  68:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Setup display
  69:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	configDisplay();
 20681              		.loc 1 69 0
 20682 00da 7868     		ldr	r0, [r7, #4]
 20683 00dc FFF7FEFF 		bl	_ZN17MonochromeDisplay13configDisplayEv
  70:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	setContrast(0x45);
 20684              		.loc 1 70 0
 20685 00e0 7868     		ldr	r0, [r7, #4]
 20686 00e2 4FF04501 		mov	r1, #69
 20687 00e6 FFF7FEFF 		bl	_ZN17MonochromeDisplay11setContrastEh
  71:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	clear();
 20688              		.loc 1 71 0
 20689 00ea 7B68     		ldr	r3, [r7, #4]
 20690 00ec 1B68     		ldr	r3, [r3, #0]
 20691 00ee 03F12403 		add	r3, r3, #36
 20692 00f2 1B68     		ldr	r3, [r3, #0]
 20693 00f4 7868     		ldr	r0, [r7, #4]
 20694 00f6 4FF0FF31 		mov	r1, #-1
 20695 00fa 9847     		blx	r3
  72:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	update();
 20696              		.loc 1 72 0
 20697 00fc 7868     		ldr	r0, [r7, #4]
 20698 00fe FFF7FEFF 		bl	_ZN17MonochromeDisplay6updateEv
  73:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  74:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	return true;
 20699              		.loc 1 74 0
 20700 0102 4FF00103 		mov	r3, #1
 20701              	.LBE10:
  75:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20702              		.loc 1 75 0
 20703 0106 1846     		mov	r0, r3
 20704 0108 07F11007 		add	r7, r7, #16
 20705 010c BD46     		mov	sp, r7
 20706 010e 80BD     		pop	{r7, pc}
 20707              		.cfi_endproc
 20708              	.LFE1097:
 20710              		.section	.text._ZN17MonochromeDisplay6enableEv,"ax",%progbits
 20711              		.align	2
 20712              		.global	_ZN17MonochromeDisplay6enableEv
 20713              		.thumb
 20714              		.thumb_func
 20716              	_ZN17MonochromeDisplay6enableEv:
 20717              	.LFB1098:
  76:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  77:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** bool MonochromeDisplay::enable()
  78:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 20718              		.loc 1 78 0
 20719              		.cfi_startproc
 20720              		@ args = 0, pretend = 0, frame = 8
 20721              		@ frame_needed = 1, uses_anonymous_args = 0
 20722              		@ link register save eliminated.
 20723 0000 80B4     		push	{r7}
 20724              	.LCFI69:
 20725              		.cfi_def_cfa_offset 4
 20726 0002 83B0     		sub	sp, sp, #12
 20727              	.LCFI70:
 20728              		.cfi_def_cfa_offset 16
 20729 0004 00AF     		add	r7, sp, #0
 20730              		.cfi_offset 7, -4
 20731              	.LCFI71:
 20732              		.cfi_def_cfa_register 7
 20733 0006 7860     		str	r0, [r7, #4]
  79:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// TODO
  80:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	return true;
 20734              		.loc 1 80 0
 20735 0008 4FF00103 		mov	r3, #1
  81:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20736              		.loc 1 81 0
 20737 000c 1846     		mov	r0, r3
 20738 000e 07F10C07 		add	r7, r7, #12
 20739 0012 BD46     		mov	sp, r7
 20740 0014 80BC     		pop	{r7}
 20741 0016 7047     		bx	lr
 20742              		.cfi_endproc
 20743              	.LFE1098:
 20745              		.section	.text._ZN17MonochromeDisplay7disableEv,"ax",%progbits
 20746              		.align	2
 20747              		.global	_ZN17MonochromeDisplay7disableEv
 20748              		.thumb
 20749              		.thumb_func
 20751              	_ZN17MonochromeDisplay7disableEv:
 20752              	.LFB1099:
  82:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  83:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** bool MonochromeDisplay::disable()
  84:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 20753              		.loc 1 84 0
 20754              		.cfi_startproc
 20755              		@ args = 0, pretend = 0, frame = 8
 20756              		@ frame_needed = 1, uses_anonymous_args = 0
 20757              		@ link register save eliminated.
 20758 0000 80B4     		push	{r7}
 20759              	.LCFI72:
 20760              		.cfi_def_cfa_offset 4
 20761 0002 83B0     		sub	sp, sp, #12
 20762              	.LCFI73:
 20763              		.cfi_def_cfa_offset 16
 20764 0004 00AF     		add	r7, sp, #0
 20765              		.cfi_offset 7, -4
 20766              	.LCFI74:
 20767              		.cfi_def_cfa_register 7
 20768 0006 7860     		str	r0, [r7, #4]
  85:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// TODO
  86:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	return true;
 20769              		.loc 1 86 0
 20770 0008 4FF00103 		mov	r3, #1
  87:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20771              		.loc 1 87 0
 20772 000c 1846     		mov	r0, r3
 20773 000e 07F10C07 		add	r7, r7, #12
 20774 0012 BD46     		mov	sp, r7
 20775 0014 80BC     		pop	{r7}
 20776 0016 7047     		bx	lr
 20777              		.cfi_endproc
 20778              	.LFE1099:
 20780              		.section	.rodata
 20781              		.align	2
 20782              	.LC0:
 20783 0000 2E2E2F62 		.ascii	"../board/olimex-stm32f103-stk/board/display/monochr"
 20783      6F617264 
 20783      2F6F6C69 
 20783      6D65782D 
 20783      73746D33 
 20784 0033 6F6D6564 		.ascii	"omedisplay.cpp\000"
 20784      6973706C 
 20784      61792E63 
 20784      707000
 20785 0042 0000     		.align	2
 20786              	.LC1:
 20787 0044 706F696E 		.ascii	"point.x < Width\000"
 20787      742E7820 
 20787      3C205769 
 20787      64746800 
 20788              		.align	2
 20789              	.LC2:
 20790 0054 706F696E 		.ascii	"point.y < Height\000"
 20790      742E7920 
 20790      3C204865 
 20790      69676874 
 20790      00
 20791              		.section	.text._ZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointE,"ax",%progbits
 20792              		.align	2
 20793              		.global	_ZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointE
 20794              		.thumb
 20795              		.thumb_func
 20797              	_ZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointE:
 20798              	.LFB1100:
  88:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  89:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** IMonochromeDisplay::PixelColor MonochromeDisplay::pixel(const Point & point)
  90:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 20799              		.loc 1 90 0
 20800              		.cfi_startproc
 20801              		@ args = 0, pretend = 0, frame = 16
 20802              		@ frame_needed = 1, uses_anonymous_args = 0
 20803 0000 80B5     		push	{r7, lr}
 20804              	.LCFI75:
 20805              		.cfi_def_cfa_offset 8
 20806 0002 84B0     		sub	sp, sp, #16
 20807              	.LCFI76:
 20808              		.cfi_def_cfa_offset 24
 20809 0004 00AF     		add	r7, sp, #0
 20810              		.cfi_offset 14, -4
 20811              		.cfi_offset 7, -8
 20812              	.LCFI77:
 20813              		.cfi_def_cfa_register 7
 20814 0006 7860     		str	r0, [r7, #4]
 20815 0008 3960     		str	r1, [r7, #0]
 20816              	.LBB12:
  91:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	unsigned int    index   = 0;
 20817              		.loc 1 91 0
 20818 000a 4FF00003 		mov	r3, #0
 20819 000e FB60     		str	r3, [r7, #12]
  92:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	unsigned char   offset  = 0;
 20820              		.loc 1 92 0
 20821 0010 4FF00003 		mov	r3, #0
 20822 0014 FB72     		strb	r3, [r7, #11]
  93:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	unsigned char   data    = 0;
 20823              		.loc 1 93 0
 20824 0016 4FF00003 		mov	r3, #0
 20825 001a BB72     		strb	r3, [r7, #10]
  94:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	unsigned char 	mask;
  95:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
  96:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// check for out off range
  97:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	assert(point.x < Width);
 20826              		.loc 1 97 0
 20827 001c 3B68     		ldr	r3, [r7, #0]
 20828 001e 1B68     		ldr	r3, [r3, #0]
 20829 0020 532B     		cmp	r3, #83
 20830 0022 0FDD     		ble	.L52
 20831              		.loc 1 97 0 is_stmt 0 discriminator 1
 20832 0024 40F20000 		movw	r0, #:lower16:.LC0
 20833 0028 C0F20000 		movt	r0, #:upper16:.LC0
 20834 002c 4FF06101 		mov	r1, #97
 20835 0030 40F20002 		movw	r2, #:lower16:_ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTIO
 20836 0034 C0F20002 		movt	r2, #:upper16:_ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTIO
 20837 0038 40F20003 		movw	r3, #:lower16:.LC1
 20838 003c C0F20003 		movt	r3, #:upper16:.LC1
 20839 0040 FFF7FEFF 		bl	__assert_func
 20840              	.L52:
  98:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	assert(point.y < Height);
 20841              		.loc 1 98 0 is_stmt 1
 20842 0044 3B68     		ldr	r3, [r7, #0]
 20843 0046 5B68     		ldr	r3, [r3, #4]
 20844 0048 2F2B     		cmp	r3, #47
 20845 004a 0FDD     		ble	.L53
 20846              		.loc 1 98 0 is_stmt 0 discriminator 1
 20847 004c 40F20000 		movw	r0, #:lower16:.LC0
 20848 0050 C0F20000 		movt	r0, #:upper16:.LC0
 20849 0054 4FF06201 		mov	r1, #98
 20850 0058 40F20002 		movw	r2, #:lower16:_ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTIO
 20851 005c C0F20002 		movt	r2, #:upper16:_ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTIO
 20852 0060 40F20003 		movw	r3, #:lower16:.LC2
 20853 0064 C0F20003 		movt	r3, #:upper16:.LC2
 20854 0068 FFF7FEFF 		bl	__assert_func
 20855              	.L53:
  99:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 100:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	index = ((point.y / 8) * Width) + point.x;
 20856              		.loc 1 100 0 is_stmt 1
 20857 006c 3B68     		ldr	r3, [r7, #0]
 20858 006e 5B68     		ldr	r3, [r3, #4]
 20859 0070 03F10702 		add	r2, r3, #7
 20860 0074 002B     		cmp	r3, #0
 20861 0076 B8BF     		it	lt
 20862 0078 1346     		movlt	r3, r2
 20863 007a 4FEAE303 		asr	r3, r3, #3
 20864 007e 4FF05402 		mov	r2, #84
 20865 0082 02FB03F2 		mul	r2, r2, r3
 20866 0086 3B68     		ldr	r3, [r7, #0]
 20867 0088 1B68     		ldr	r3, [r3, #0]
 20868 008a D318     		adds	r3, r2, r3
 20869 008c FB60     		str	r3, [r7, #12]
 101:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	offset  = point.y - ((point.y / 8) * 8);
 20870              		.loc 1 101 0
 20871 008e 3B68     		ldr	r3, [r7, #0]
 20872 0090 5A68     		ldr	r2, [r3, #4]
 20873 0092 4FEAE273 		asr	r3, r2, #31
 20874 0096 4FEA5373 		lsr	r3, r3, #29
 20875 009a D218     		adds	r2, r2, r3
 20876 009c 02F00702 		and	r2, r2, #7
 20877 00a0 D31A     		subs	r3, r2, r3
 20878 00a2 FB72     		strb	r3, [r7, #11]
 102:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	mask = 0x01 << offset;
 20879              		.loc 1 102 0
 20880 00a4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20881 00a6 4FF00102 		mov	r2, #1
 20882 00aa 02FA03F3 		lsl	r3, r2, r3
 20883 00ae 7B72     		strb	r3, [r7, #9]
 103:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 104:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	data = _lcdBuffer[index];
 20884              		.loc 1 104 0
 20885 00b0 7A68     		ldr	r2, [r7, #4]
 20886 00b2 FB68     		ldr	r3, [r7, #12]
 20887 00b4 D318     		adds	r3, r2, r3
 20888 00b6 03F11003 		add	r3, r3, #16
 20889 00ba 1B78     		ldrb	r3, [r3, #0]
 20890 00bc BB72     		strb	r3, [r7, #10]
 105:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 106:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	if ((data & mask) == mask)
 20891              		.loc 1 106 0
 20892 00be BA7A     		ldrb	r2, [r7, #10]
 20893 00c0 7B7A     		ldrb	r3, [r7, #9]
 20894 00c2 02EA0303 		and	r3, r2, r3
 20895 00c6 DBB2     		uxtb	r3, r3
 20896 00c8 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 20897 00ca 9A42     		cmp	r2, r3
 20898 00cc 02D1     		bne	.L54
 107:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	{
 108:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		return Black;
 20899              		.loc 1 108 0
 20900 00ce 4FF00103 		mov	r3, #1
 20901 00d2 01E0     		b	.L55
 20902              	.L54:
 109:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	}
 110:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	else
 111:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	{
 112:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		return White;
 20903              		.loc 1 112 0
 20904 00d4 4FF0FF03 		mov	r3, #255
 20905              	.L55:
 20906 00d8 5BB2     		sxtb	r3, r3
 20907              	.LBE12:
 113:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	}
 114:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 20908              		.loc 1 114 0
 20909 00da 1846     		mov	r0, r3
 20910 00dc 07F11007 		add	r7, r7, #16
 20911 00e0 BD46     		mov	sp, r7
 20912 00e2 80BD     		pop	{r7, pc}
 20913              		.cfi_endproc
 20914              	.LFE1100:
 20916              		.section	.text._ZN17MonochromeDisplay8setPixelERKN18IMonochromeDisplay5PointENS0_10PixelColorE,"ax
 20917              		.align	2
 20918              		.global	_ZN17MonochromeDisplay8setPixelERKN18IMonochromeDisplay5PointENS0_10PixelColorE
 20919              		.thumb
 20920              		.thumb_func
 20922              	_ZN17MonochromeDisplay8setPixelERKN18IMonochromeDisplay5PointENS0_10PixelColorE:
 20923              	.LFB1101:
 115:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 116:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::setPixel(const Point & point , PixelColor color)
 117:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 20924              		.loc 1 117 0
 20925              		.cfi_startproc
 20926              		@ args = 0, pretend = 0, frame = 32
 20927              		@ frame_needed = 1, uses_anonymous_args = 0
 20928              		@ link register save eliminated.
 20929 0000 80B4     		push	{r7}
 20930              	.LCFI78:
 20931              		.cfi_def_cfa_offset 4
 20932 0002 89B0     		sub	sp, sp, #36
 20933              	.LCFI79:
 20934              		.cfi_def_cfa_offset 40
 20935 0004 00AF     		add	r7, sp, #0
 20936              		.cfi_offset 7, -4
 20937              	.LCFI80:
 20938              		.cfi_def_cfa_register 7
 20939 0006 F860     		str	r0, [r7, #12]
 20940 0008 B960     		str	r1, [r7, #8]
 20941 000a 1346     		mov	r3, r2
 20942 000c FB71     		strb	r3, [r7, #7]
 20943              	.LBB13:
 118:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	unsigned int    index   = 0;
 20944              		.loc 1 118 0
 20945 000e 4FF00003 		mov	r3, #0
 20946 0012 BB61     		str	r3, [r7, #24]
 119:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	unsigned char   offset  = 0;
 20947              		.loc 1 119 0
 20948 0014 4FF00003 		mov	r3, #0
 20949 0018 FB75     		strb	r3, [r7, #23]
 120:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	unsigned char   data    = 0;
 20950              		.loc 1 120 0
 20951 001a 4FF00003 		mov	r3, #0
 20952 001e FB77     		strb	r3, [r7, #31]
 121:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 122:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// check for out off range
 123:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	if (point.x > Width) return;
 20953              		.loc 1 123 0
 20954 0020 BB68     		ldr	r3, [r7, #8]
 20955 0022 1B68     		ldr	r3, [r3, #0]
 20956 0024 542B     		cmp	r3, #84
 20957 0026 51DC     		bgt	.L62
 20958              	.L57:
 124:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	if (point.y > Height) return;
 20959              		.loc 1 124 0
 20960 0028 BB68     		ldr	r3, [r7, #8]
 20961 002a 5B68     		ldr	r3, [r3, #4]
 20962 002c 302B     		cmp	r3, #48
 20963 002e 4FDC     		bgt	.L63
 20964              	.L59:
 125:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 126:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	index = ((point.y / 8) * Width) + point.x;
 20965              		.loc 1 126 0
 20966 0030 BB68     		ldr	r3, [r7, #8]
 20967 0032 5B68     		ldr	r3, [r3, #4]
 20968 0034 03F10702 		add	r2, r3, #7
 20969 0038 002B     		cmp	r3, #0
 20970 003a B8BF     		it	lt
 20971 003c 1346     		movlt	r3, r2
 20972 003e 4FEAE303 		asr	r3, r3, #3
 20973 0042 4FF05402 		mov	r2, #84
 20974 0046 02FB03F2 		mul	r2, r2, r3
 20975 004a BB68     		ldr	r3, [r7, #8]
 20976 004c 1B68     		ldr	r3, [r3, #0]
 20977 004e D318     		adds	r3, r2, r3
 20978 0050 BB61     		str	r3, [r7, #24]
 127:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	offset  = point.y - ((point.y / 8) * 8);
 20979              		.loc 1 127 0
 20980 0052 BB68     		ldr	r3, [r7, #8]
 20981 0054 5A68     		ldr	r2, [r3, #4]
 20982 0056 4FEAE273 		asr	r3, r2, #31
 20983 005a 4FEA5373 		lsr	r3, r3, #29
 20984 005e D218     		adds	r2, r2, r3
 20985 0060 02F00702 		and	r2, r2, #7
 20986 0064 D31A     		subs	r3, r2, r3
 20987 0066 FB75     		strb	r3, [r7, #23]
 128:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 129:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	data = _lcdBuffer[index];
 20988              		.loc 1 129 0
 20989 0068 FA68     		ldr	r2, [r7, #12]
 20990 006a BB69     		ldr	r3, [r7, #24]
 20991 006c D318     		adds	r3, r2, r3
 20992 006e 03F11003 		add	r3, r3, #16
 20993 0072 1B78     		ldrb	r3, [r3, #0]
 20994 0074 FB77     		strb	r3, [r7, #31]
 130:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 131:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	if (color == White)
 20995              		.loc 1 131 0
 20996 0076 97F90730 		ldrsb	r3, [r7, #7]
 20997 007a B3F1FF3F 		cmp	r3, #-1
 20998 007e 0ED1     		bne	.L60
 132:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	{
 133:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		data &= (~(0x01 << offset));
 20999              		.loc 1 133 0
 21000 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 21001 0082 4FF00102 		mov	r2, #1
 21002 0086 02FA03F3 		lsl	r3, r2, r3
 21003 008a DBB2     		uxtb	r3, r3
 21004 008c 6FEA0303 		mvn	r3, r3
 21005 0090 DAB2     		uxtb	r2, r3
 21006 0092 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 21007 0094 02EA0303 		and	r3, r2, r3
 21008 0098 DBB2     		uxtb	r3, r3
 21009 009a FB77     		strb	r3, [r7, #31]
 21010 009c 0EE0     		b	.L61
 21011              	.L60:
 134:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	}
 135:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	else if (color == Black)
 21012              		.loc 1 135 0
 21013 009e 97F90730 		ldrsb	r3, [r7, #7]
 21014 00a2 012B     		cmp	r3, #1
 21015 00a4 0AD1     		bne	.L61
 136:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	{
 137:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		data |= (0x01 << offset);
 21016              		.loc 1 137 0
 21017 00a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 21018 00a8 4FF00102 		mov	r2, #1
 21019 00ac 02FA03F3 		lsl	r3, r2, r3
 21020 00b0 DAB2     		uxtb	r2, r3
 21021 00b2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 21022 00b4 42EA0303 		orr	r3, r2, r3
 21023 00b8 DBB2     		uxtb	r3, r3
 21024 00ba FB77     		strb	r3, [r7, #31]
 21025              	.L61:
 138:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	}
 139:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 140:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	_lcdBuffer[index] = data;
 21026              		.loc 1 140 0
 21027 00bc FA68     		ldr	r2, [r7, #12]
 21028 00be BB69     		ldr	r3, [r7, #24]
 21029 00c0 D318     		adds	r3, r2, r3
 21030 00c2 03F11003 		add	r3, r3, #16
 21031 00c6 FA7F     		ldrb	r2, [r7, #31]
 21032 00c8 1A70     		strb	r2, [r3, #0]
 21033 00ca 02E0     		b	.L56
 21034              	.L62:
 123:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	if (point.x > Width) return;
 21035              		.loc 1 123 0
 21036 00cc 00BF     		nop
 21037 00ce 00E0     		b	.L56
 21038              	.L63:
 124:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	if (point.y > Height) return;
 21039              		.loc 1 124 0
 21040 00d0 00BF     		nop
 21041              	.L56:
 21042              	.LBE13:
 141:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21043              		.loc 1 141 0
 21044 00d2 07F12407 		add	r7, r7, #36
 21045 00d6 BD46     		mov	sp, r7
 21046 00d8 80BC     		pop	{r7}
 21047 00da 7047     		bx	lr
 21048              		.cfi_endproc
 21049              	.LFE1101:
 21051              		.section	.text._ZN17MonochromeDisplay5clearEN18IMonochromeDisplay10PixelColorE,"ax",%progbits
 21052              		.align	2
 21053              		.global	_ZN17MonochromeDisplay5clearEN18IMonochromeDisplay10PixelColorE
 21054              		.thumb
 21055              		.thumb_func
 21057              	_ZN17MonochromeDisplay5clearEN18IMonochromeDisplay10PixelColorE:
 21058              	.LFB1102:
 142:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 143:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::clear(PixelColor background /* = White */)
 144:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21059              		.loc 1 144 0
 21060              		.cfi_startproc
 21061              		@ args = 0, pretend = 0, frame = 8
 21062              		@ frame_needed = 1, uses_anonymous_args = 0
 21063 0000 80B5     		push	{r7, lr}
 21064              	.LCFI81:
 21065              		.cfi_def_cfa_offset 8
 21066 0002 82B0     		sub	sp, sp, #8
 21067              	.LCFI82:
 21068              		.cfi_def_cfa_offset 16
 21069 0004 00AF     		add	r7, sp, #0
 21070              		.cfi_offset 14, -4
 21071              		.cfi_offset 7, -8
 21072              	.LCFI83:
 21073              		.cfi_def_cfa_register 7
 21074 0006 7860     		str	r0, [r7, #4]
 21075 0008 0B46     		mov	r3, r1
 21076 000a FB70     		strb	r3, [r7, #3]
 145:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	memset(_lcdBuffer, 0x00, sizeof(_lcdBuffer));
 21077              		.loc 1 145 0
 21078 000c 7B68     		ldr	r3, [r7, #4]
 21079 000e 03F11003 		add	r3, r3, #16
 21080 0012 1846     		mov	r0, r3
 21081 0014 4FF00001 		mov	r1, #0
 21082 0018 4FF4FC72 		mov	r2, #504
 21083 001c FFF7FEFF 		bl	memset
 146:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21084              		.loc 1 146 0
 21085 0020 07F10807 		add	r7, r7, #8
 21086 0024 BD46     		mov	sp, r7
 21087 0026 80BD     		pop	{r7, pc}
 21088              		.cfi_endproc
 21089              	.LFE1102:
 21091              		.section	.text._ZN17MonochromeDisplay18writeDisplayMemoryEjPKhj,"ax",%progbits
 21092              		.align	2
 21093              		.global	_ZN17MonochromeDisplay18writeDisplayMemoryEjPKhj
 21094              		.thumb
 21095              		.thumb_func
 21097              	_ZN17MonochromeDisplay18writeDisplayMemoryEjPKhj:
 21098              	.LFB1103:
 147:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 148:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::writeDisplayMemory(size_t startAddress,
 149:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 										   const uint8_t * const sourceBitmap,
 150:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 										   size_t numberOfBits)
 151:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21099              		.loc 1 151 0
 21100              		.cfi_startproc
 21101              		@ args = 0, pretend = 0, frame = 32
 21102              		@ frame_needed = 1, uses_anonymous_args = 0
 21103 0000 90B5     		push	{r4, r7, lr}
 21104              	.LCFI84:
 21105              		.cfi_def_cfa_offset 12
 21106 0002 89B0     		sub	sp, sp, #36
 21107              	.LCFI85:
 21108              		.cfi_def_cfa_offset 48
 21109 0004 00AF     		add	r7, sp, #0
 21110              		.cfi_offset 14, -4
 21111              		.cfi_offset 7, -8
 21112              		.cfi_offset 4, -12
 21113              	.LCFI86:
 21114              		.cfi_def_cfa_register 7
 21115 0006 F860     		str	r0, [r7, #12]
 21116 0008 B960     		str	r1, [r7, #8]
 21117 000a 7A60     		str	r2, [r7, #4]
 21118 000c 3B60     		str	r3, [r7, #0]
 21119              	.LBB14:
 21120              	.LBB15:
 152:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (size_t i = (startAddress * 8); i < (numberOfBits + (startAddress * 8)); i++)
 21121              		.loc 1 152 0
 21122 000e BB68     		ldr	r3, [r7, #8]
 21123 0010 4FEAC303 		lsl	r3, r3, #3
 21124 0014 FB61     		str	r3, [r7, #28]
 21125 0016 3EE0     		b	.L66
 21126              	.L67:
 21127              	.LBB16:
 153:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	{
 154:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		Point point((i % Width), (i / Width));
 21128              		.loc 1 154 0 discriminator 2
 21129 0018 FA69     		ldr	r2, [r7, #28]
 21130 001a 4FEA9201 		lsr	r1, r2, #2
 21131 001e 40F63143 		movw	r3, #3121
 21132 0022 C3F2C303 		movt	r3, 12483
 21133 0026 A3FB0103 		umull	r0, r3, r3, r1
 21134 002a 4FEA9303 		lsr	r3, r3, #2
 21135 002e 4FF05401 		mov	r1, #84
 21136 0032 01FB03F3 		mul	r3, r1, r3
 21137 0036 D31A     		subs	r3, r2, r3
 21138 0038 1A46     		mov	r2, r3
 21139 003a FB69     		ldr	r3, [r7, #28]
 21140 003c 4FEA9301 		lsr	r1, r3, #2
 21141 0040 40F63143 		movw	r3, #3121
 21142 0044 C3F2C303 		movt	r3, 12483
 21143 0048 A3FB0103 		umull	r0, r3, r3, r1
 21144 004c 4FEA9303 		lsr	r3, r3, #2
 21145 0050 07F11401 		add	r1, r7, #20
 21146 0054 0846     		mov	r0, r1
 21147 0056 1146     		mov	r1, r2
 21148 0058 1A46     		mov	r2, r3
 21149 005a FFF7FEFF 		bl	_ZN18IMonochromeDisplay5PointC1Eii
 155:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 156:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		setPixel(point, getPixelColorFromBitmap(point, sourceBitmap - startAddress));
 21150              		.loc 1 156 0 discriminator 2
 21151 005e FB68     		ldr	r3, [r7, #12]
 21152 0060 1B68     		ldr	r3, [r3, #0]
 21153 0062 03F12003 		add	r3, r3, #32
 21154 0066 1C68     		ldr	r4, [r3, #0]
 21155 0068 BB68     		ldr	r3, [r7, #8]
 21156 006a C3F10003 		rsb	r3, r3, #0
 21157 006e 7A68     		ldr	r2, [r7, #4]
 21158 0070 D318     		adds	r3, r2, r3
 21159 0072 07F11402 		add	r2, r7, #20
 21160 0076 F868     		ldr	r0, [r7, #12]
 21161 0078 1146     		mov	r1, r2
 21162 007a 1A46     		mov	r2, r3
 21163 007c FFF7FEFF 		bl	_ZNK17MonochromeDisplay23getPixelColorFromBitmapERKN18IMonochromeDisplay5PointEPKh
 21164 0080 0346     		mov	r3, r0
 21165 0082 07F11402 		add	r2, r7, #20
 21166 0086 F868     		ldr	r0, [r7, #12]
 21167 0088 1146     		mov	r1, r2
 21168 008a 1A46     		mov	r2, r3
 21169 008c A047     		blx	r4
 21170              	.LBE16:
 152:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (size_t i = (startAddress * 8); i < (numberOfBits + (startAddress * 8)); i++)
 21171              		.loc 1 152 0 discriminator 2
 21172 008e FB69     		ldr	r3, [r7, #28]
 21173 0090 03F10103 		add	r3, r3, #1
 21174 0094 FB61     		str	r3, [r7, #28]
 21175              	.L66:
 152:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (size_t i = (startAddress * 8); i < (numberOfBits + (startAddress * 8)); i++)
 21176              		.loc 1 152 0 is_stmt 0 discriminator 1
 21177 0096 BB68     		ldr	r3, [r7, #8]
 21178 0098 4FEAC302 		lsl	r2, r3, #3
 21179 009c 3B68     		ldr	r3, [r7, #0]
 21180 009e D218     		adds	r2, r2, r3
 21181 00a0 FB69     		ldr	r3, [r7, #28]
 21182 00a2 9A42     		cmp	r2, r3
 21183 00a4 94BF     		ite	ls
 21184 00a6 0023     		movls	r3, #0
 21185 00a8 0123     		movhi	r3, #1
 21186 00aa DBB2     		uxtb	r3, r3
 21187 00ac 002B     		cmp	r3, #0
 21188 00ae B3D1     		bne	.L67
 21189              	.LBE15:
 157:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	}
 158:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 159:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	update();
 21190              		.loc 1 159 0 is_stmt 1
 21191 00b0 F868     		ldr	r0, [r7, #12]
 21192 00b2 FFF7FEFF 		bl	_ZN17MonochromeDisplay6updateEv
 21193              	.LBE14:
 160:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21194              		.loc 1 160 0
 21195 00b6 07F12407 		add	r7, r7, #36
 21196 00ba BD46     		mov	sp, r7
 21197 00bc 90BD     		pop	{r4, r7, pc}
 21198              		.cfi_endproc
 21199              	.LFE1103:
 21201 00be 00BF     		.section	.rodata
 21202 0065 000000   		.align	2
 21203              	.LC3:
 21204 0068 73746172 		.ascii	"startAddress == 0\000"
 21204      74416464 
 21204      72657373 
 21204      203D3D20 
 21204      3000
 21205 007a 0000     		.section	.text._ZN17MonochromeDisplay17readDisplayMemoryEjPhj,"ax",%progbits
 21206              		.align	2
 21207              		.global	_ZN17MonochromeDisplay17readDisplayMemoryEjPhj
 21208              		.thumb
 21209              		.thumb_func
 21211              	_ZN17MonochromeDisplay17readDisplayMemoryEjPhj:
 21212              	.LFB1104:
 161:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 162:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::readDisplayMemory(size_t startAddress,
 163:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 										  uint8_t * const destinationBitmap,
 164:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 										  size_t numberOfBits)
 165:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21213              		.loc 1 165 0
 21214              		.cfi_startproc
 21215              		@ args = 0, pretend = 0, frame = 32
 21216              		@ frame_needed = 1, uses_anonymous_args = 0
 21217 0000 80B5     		push	{r7, lr}
 21218              	.LCFI87:
 21219              		.cfi_def_cfa_offset 8
 21220 0002 88B0     		sub	sp, sp, #32
 21221              	.LCFI88:
 21222              		.cfi_def_cfa_offset 40
 21223 0004 00AF     		add	r7, sp, #0
 21224              		.cfi_offset 14, -4
 21225              		.cfi_offset 7, -8
 21226              	.LCFI89:
 21227              		.cfi_def_cfa_register 7
 21228 0006 F860     		str	r0, [r7, #12]
 21229 0008 B960     		str	r1, [r7, #8]
 21230 000a 7A60     		str	r2, [r7, #4]
 21231 000c 3B60     		str	r3, [r7, #0]
 21232              	.LBB17:
 166:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	assert(startAddress == 0);	// Not tested with values other then zero
 21233              		.loc 1 166 0
 21234 000e BB68     		ldr	r3, [r7, #8]
 21235 0010 002B     		cmp	r3, #0
 21236 0012 0FD0     		beq	.L69
 21237              		.loc 1 166 0 is_stmt 0 discriminator 1
 21238 0014 40F20000 		movw	r0, #:lower16:.LC0
 21239 0018 C0F20000 		movt	r0, #:upper16:.LC0
 21240 001c 4FF0A601 		mov	r1, #166
 21241 0020 40F20002 		movw	r2, #:lower16:_ZZN17MonochromeDisplay17readDisplayMemoryEjPhjE19__PRETTY_FUNCTION__
 21242 0024 C0F20002 		movt	r2, #:upper16:_ZZN17MonochromeDisplay17readDisplayMemoryEjPhjE19__PRETTY_FUNCTION__
 21243 0028 40F20003 		movw	r3, #:lower16:.LC3
 21244 002c C0F20003 		movt	r3, #:upper16:.LC3
 21245 0030 FFF7FEFF 		bl	__assert_func
 21246              	.L69:
 21247              	.LBB18:
 167:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 168:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (size_t i = startAddress; i < numberOfBits; i++)
 21248              		.loc 1 168 0 is_stmt 1
 21249 0034 BB68     		ldr	r3, [r7, #8]
 21250 0036 FB61     		str	r3, [r7, #28]
 21251 0038 37E0     		b	.L70
 21252              	.L71:
 21253              	.LBB19:
 169:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	{
 170:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		Point point((i % Width), (i / Width));
 21254              		.loc 1 170 0 discriminator 2
 21255 003a FA69     		ldr	r2, [r7, #28]
 21256 003c 4FEA9201 		lsr	r1, r2, #2
 21257 0040 40F63143 		movw	r3, #3121
 21258 0044 C3F2C303 		movt	r3, 12483
 21259 0048 A3FB0103 		umull	r0, r3, r3, r1
 21260 004c 4FEA9303 		lsr	r3, r3, #2
 21261 0050 4FF05401 		mov	r1, #84
 21262 0054 01FB03F3 		mul	r3, r1, r3
 21263 0058 D31A     		subs	r3, r2, r3
 21264 005a 1A46     		mov	r2, r3
 21265 005c FB69     		ldr	r3, [r7, #28]
 21266 005e 4FEA9301 		lsr	r1, r3, #2
 21267 0062 40F63143 		movw	r3, #3121
 21268 0066 C3F2C303 		movt	r3, 12483
 21269 006a A3FB0103 		umull	r0, r3, r3, r1
 21270 006e 4FEA9303 		lsr	r3, r3, #2
 21271 0072 07F11401 		add	r1, r7, #20
 21272 0076 0846     		mov	r0, r1
 21273 0078 1146     		mov	r1, r2
 21274 007a 1A46     		mov	r2, r3
 21275 007c FFF7FEFF 		bl	_ZN18IMonochromeDisplay5PointC1Eii
 171:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 172:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		setPixelColorToBitmap(destinationBitmap, point, pixel(point));
 21276              		.loc 1 172 0 discriminator 2
 21277 0080 FB68     		ldr	r3, [r7, #12]
 21278 0082 1B68     		ldr	r3, [r3, #0]
 21279 0084 03F11C03 		add	r3, r3, #28
 21280 0088 1B68     		ldr	r3, [r3, #0]
 21281 008a 07F11402 		add	r2, r7, #20
 21282 008e F868     		ldr	r0, [r7, #12]
 21283 0090 1146     		mov	r1, r2
 21284 0092 9847     		blx	r3
 21285 0094 0346     		mov	r3, r0
 21286 0096 07F11402 		add	r2, r7, #20
 21287 009a F868     		ldr	r0, [r7, #12]
 21288 009c 7968     		ldr	r1, [r7, #4]
 21289 009e FFF7FEFF 		bl	_ZN17MonochromeDisplay21setPixelColorToBitmapEPhRKN18IMonochromeDisplay5PointENS1_10PixelColorE
 21290              	.LBE19:
 168:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (size_t i = startAddress; i < numberOfBits; i++)
 21291              		.loc 1 168 0 discriminator 2
 21292 00a2 FB69     		ldr	r3, [r7, #28]
 21293 00a4 03F10103 		add	r3, r3, #1
 21294 00a8 FB61     		str	r3, [r7, #28]
 21295              	.L70:
 168:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (size_t i = startAddress; i < numberOfBits; i++)
 21296              		.loc 1 168 0 is_stmt 0 discriminator 1
 21297 00aa FA69     		ldr	r2, [r7, #28]
 21298 00ac 3B68     		ldr	r3, [r7, #0]
 21299 00ae 9A42     		cmp	r2, r3
 21300 00b0 2CBF     		ite	cs
 21301 00b2 0023     		movcs	r3, #0
 21302 00b4 0123     		movcc	r3, #1
 21303 00b6 DBB2     		uxtb	r3, r3
 21304 00b8 002B     		cmp	r3, #0
 21305 00ba BED1     		bne	.L71
 21306              	.LBE18:
 21307              	.LBE17:
 173:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	}
 174:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21308              		.loc 1 174 0 is_stmt 1
 21309 00bc 07F12007 		add	r7, r7, #32
 21310 00c0 BD46     		mov	sp, r7
 21311 00c2 80BD     		pop	{r7, pc}
 21312              		.cfi_endproc
 21313              	.LFE1104:
 21315              		.section	.text._ZN17MonochromeDisplay11sendCommandEh,"ax",%progbits
 21316              		.align	2
 21317              		.global	_ZN17MonochromeDisplay11sendCommandEh
 21318              		.thumb
 21319              		.thumb_func
 21321              	_ZN17MonochromeDisplay11sendCommandEh:
 21322              	.LFB1105:
 175:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 176:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::sendCommand(unsigned char cmd)
 177:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21323              		.loc 1 177 0
 21324              		.cfi_startproc
 21325              		@ args = 0, pretend = 0, frame = 8
 21326              		@ frame_needed = 1, uses_anonymous_args = 0
 21327 0000 80B5     		push	{r7, lr}
 21328              	.LCFI90:
 21329              		.cfi_def_cfa_offset 8
 21330 0002 82B0     		sub	sp, sp, #8
 21331              	.LCFI91:
 21332              		.cfi_def_cfa_offset 16
 21333 0004 00AF     		add	r7, sp, #0
 21334              		.cfi_offset 14, -4
 21335              		.cfi_offset 7, -8
 21336              	.LCFI92:
 21337              		.cfi_def_cfa_register 7
 21338 0006 7860     		str	r0, [r7, #4]
 21339 0008 0B46     		mov	r3, r1
 21340 000a FB70     		strb	r3, [r7, #3]
 178:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(true);
 21341              		.loc 1 178 0
 21342 000c 7868     		ldr	r0, [r7, #4]
 21343 000e 4FF00101 		mov	r1, #1
 21344 0012 FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 179:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 180:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(cmd);
 21345              		.loc 1 180 0
 21346 0016 7B68     		ldr	r3, [r7, #4]
 21347 0018 03F10402 		add	r2, r3, #4
 21348 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21349 001e 1046     		mov	r0, r2
 21350 0020 1946     		mov	r1, r3
 21351 0022 FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 181:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 182:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(false);
 21352              		.loc 1 182 0
 21353 0026 7868     		ldr	r0, [r7, #4]
 21354 0028 4FF00001 		mov	r1, #0
 21355 002c FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 183:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21356              		.loc 1 183 0
 21357 0030 07F10807 		add	r7, r7, #8
 21358 0034 BD46     		mov	sp, r7
 21359 0036 80BD     		pop	{r7, pc}
 21360              		.cfi_endproc
 21361              	.LFE1105:
 21363              		.section	.text._ZN17MonochromeDisplay8sendDataEh,"ax",%progbits
 21364              		.align	2
 21365              		.global	_ZN17MonochromeDisplay8sendDataEh
 21366              		.thumb
 21367              		.thumb_func
 21369              	_ZN17MonochromeDisplay8sendDataEh:
 21370              	.LFB1106:
 184:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 185:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::sendData(unsigned char data)
 186:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21371              		.loc 1 186 0
 21372              		.cfi_startproc
 21373              		@ args = 0, pretend = 0, frame = 8
 21374              		@ frame_needed = 1, uses_anonymous_args = 0
 21375 0000 80B5     		push	{r7, lr}
 21376              	.LCFI93:
 21377              		.cfi_def_cfa_offset 8
 21378 0002 82B0     		sub	sp, sp, #8
 21379              	.LCFI94:
 21380              		.cfi_def_cfa_offset 16
 21381 0004 00AF     		add	r7, sp, #0
 21382              		.cfi_offset 14, -4
 21383              		.cfi_offset 7, -8
 21384              	.LCFI95:
 21385              		.cfi_def_cfa_register 7
 21386 0006 7860     		str	r0, [r7, #4]
 21387 0008 0B46     		mov	r3, r1
 21388 000a FB70     		strb	r3, [r7, #3]
 187:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(true);
 21389              		.loc 1 187 0
 21390 000c 7868     		ldr	r0, [r7, #4]
 21391 000e 4FF00101 		mov	r1, #1
 21392 0012 FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 188:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 189:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendData(data);
 21393              		.loc 1 189 0
 21394 0016 7B68     		ldr	r3, [r7, #4]
 21395 0018 03F10402 		add	r2, r3, #4
 21396 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21397 001e 1046     		mov	r0, r2
 21398 0020 1946     		mov	r1, r3
 21399 0022 FFF7FEFF 		bl	_ZN10DisplaySpi8sendDataEh
 190:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 191:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(false);
 21400              		.loc 1 191 0
 21401 0026 7868     		ldr	r0, [r7, #4]
 21402 0028 4FF00001 		mov	r1, #0
 21403 002c FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 192:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21404              		.loc 1 192 0
 21405 0030 07F10807 		add	r7, r7, #8
 21406 0034 BD46     		mov	sp, r7
 21407 0036 80BD     		pop	{r7, pc}
 21408              		.cfi_endproc
 21409              	.LFE1106:
 21411              		.section	.text._ZN17MonochromeDisplay11enableResetEb,"ax",%progbits
 21412              		.align	2
 21413              		.global	_ZN17MonochromeDisplay11enableResetEb
 21414              		.thumb
 21415              		.thumb_func
 21417              	_ZN17MonochromeDisplay11enableResetEb:
 21418              	.LFB1107:
 193:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 194:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** /**
 195:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * Sets or clears the reset line. The method is responsible to check if the
 196:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * reset line is active high or active low.
 197:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * Comment: The state machine does automatically a reset after calling the
 198:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * initialization method. Use the method isDisplayReady() to check if the
 199:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * display is ready for usage.
 200:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * \param enable Set to true to set the display in reset state, false to leave reset state
 201:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  */
 202:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::enableReset(bool enable)
 203:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21419              		.loc 1 203 0
 21420              		.cfi_startproc
 21421              		@ args = 0, pretend = 0, frame = 8
 21422              		@ frame_needed = 1, uses_anonymous_args = 0
 21423 0000 80B5     		push	{r7, lr}
 21424              	.LCFI96:
 21425              		.cfi_def_cfa_offset 8
 21426 0002 82B0     		sub	sp, sp, #8
 21427              	.LCFI97:
 21428              		.cfi_def_cfa_offset 16
 21429 0004 00AF     		add	r7, sp, #0
 21430              		.cfi_offset 14, -4
 21431              		.cfi_offset 7, -8
 21432              	.LCFI98:
 21433              		.cfi_def_cfa_register 7
 21434 0006 7860     		str	r0, [r7, #4]
 21435 0008 0B46     		mov	r3, r1
 21436 000a FB70     		strb	r3, [r7, #3]
 204:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_WriteBit(GPIOC, GPIO_Pin_7, (enable) ? Bit_RESET : Bit_SET);
 21437              		.loc 1 204 0
 21438 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21439 000e 002B     		cmp	r3, #0
 21440 0010 02D0     		beq	.L75
 21441              		.loc 1 204 0 is_stmt 0 discriminator 1
 21442 0012 4FF00003 		mov	r3, #0
 21443 0016 01E0     		b	.L76
 21444              	.L75:
 21445              		.loc 1 204 0 discriminator 2
 21446 0018 4FF00103 		mov	r3, #1
 21447              	.L76:
 21448              		.loc 1 204 0 discriminator 3
 21449 001c 4FF48050 		mov	r0, #4096
 21450 0020 C4F20100 		movt	r0, 16385
 21451 0024 4FF08001 		mov	r1, #128
 21452 0028 1A46     		mov	r2, r3
 21453 002a FFF7FEFF 		bl	GPIO_WriteBit
 205:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21454              		.loc 1 205 0 is_stmt 1 discriminator 3
 21455 002e 07F10807 		add	r7, r7, #8
 21456 0032 BD46     		mov	sp, r7
 21457 0034 80BD     		pop	{r7, pc}
 21458              		.cfi_endproc
 21459              	.LFE1107:
 21461 0036 00BF     		.section	.text._ZN17MonochromeDisplay13enableDisplayEb,"ax",%progbits
 21462              		.align	2
 21463              		.global	_ZN17MonochromeDisplay13enableDisplayEb
 21464              		.thumb
 21465              		.thumb_func
 21467              	_ZN17MonochromeDisplay13enableDisplayEb:
 21468              	.LFB1108:
 206:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 207:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** /**
 208:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * Enables/disables the display controller.
 209:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  * \param enable Set to true to enable the display controller, false to disable it.
 210:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp ****  */
 211:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::enableDisplay(bool enable)
 212:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21469              		.loc 1 212 0
 21470              		.cfi_startproc
 21471              		@ args = 0, pretend = 0, frame = 8
 21472              		@ frame_needed = 1, uses_anonymous_args = 0
 21473 0000 80B5     		push	{r7, lr}
 21474              	.LCFI99:
 21475              		.cfi_def_cfa_offset 8
 21476 0002 82B0     		sub	sp, sp, #8
 21477              	.LCFI100:
 21478              		.cfi_def_cfa_offset 16
 21479 0004 00AF     		add	r7, sp, #0
 21480              		.cfi_offset 14, -4
 21481              		.cfi_offset 7, -8
 21482              	.LCFI101:
 21483              		.cfi_def_cfa_register 7
 21484 0006 7860     		str	r0, [r7, #4]
 21485 0008 0B46     		mov	r3, r1
 21486 000a FB70     		strb	r3, [r7, #3]
 213:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Enable display controller (active low) -> LCD_E low
 214:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	GPIO_WriteBit(GPIOC, GPIO_Pin_10, (enable) ? Bit_RESET : Bit_SET);
 21487              		.loc 1 214 0
 21488 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21489 000e 002B     		cmp	r3, #0
 21490 0010 02D0     		beq	.L78
 21491              		.loc 1 214 0 is_stmt 0 discriminator 1
 21492 0012 4FF00003 		mov	r3, #0
 21493 0016 01E0     		b	.L79
 21494              	.L78:
 21495              		.loc 1 214 0 discriminator 2
 21496 0018 4FF00103 		mov	r3, #1
 21497              	.L79:
 21498              		.loc 1 214 0 discriminator 3
 21499 001c 4FF48050 		mov	r0, #4096
 21500 0020 C4F20100 		movt	r0, 16385
 21501 0024 4FF48061 		mov	r1, #1024
 21502 0028 1A46     		mov	r2, r3
 21503 002a FFF7FEFF 		bl	GPIO_WriteBit
 215:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21504              		.loc 1 215 0 is_stmt 1 discriminator 3
 21505 002e 07F10807 		add	r7, r7, #8
 21506 0032 BD46     		mov	sp, r7
 21507 0034 80BD     		pop	{r7, pc}
 21508              		.cfi_endproc
 21509              	.LFE1108:
 21511 0036 00BF     		.section	.text._ZN17MonochromeDisplay11setContrastEh,"ax",%progbits
 21512              		.align	2
 21513              		.global	_ZN17MonochromeDisplay11setContrastEh
 21514              		.thumb
 21515              		.thumb_func
 21517              	_ZN17MonochromeDisplay11setContrastEh:
 21518              	.LFB1109:
 216:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 217:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::setContrast(unsigned char contrast)
 218:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21519              		.loc 1 218 0
 21520              		.cfi_startproc
 21521              		@ args = 0, pretend = 0, frame = 8
 21522              		@ frame_needed = 1, uses_anonymous_args = 0
 21523 0000 80B5     		push	{r7, lr}
 21524              	.LCFI102:
 21525              		.cfi_def_cfa_offset 8
 21526 0002 82B0     		sub	sp, sp, #8
 21527              	.LCFI103:
 21528              		.cfi_def_cfa_offset 16
 21529 0004 00AF     		add	r7, sp, #0
 21530              		.cfi_offset 14, -4
 21531              		.cfi_offset 7, -8
 21532              	.LCFI104:
 21533              		.cfi_def_cfa_register 7
 21534 0006 7860     		str	r0, [r7, #4]
 21535 0008 0B46     		mov	r3, r1
 21536 000a FB70     		strb	r3, [r7, #3]
 219:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::enable();		// Setup SPI for display
 21537              		.loc 1 219 0
 21538 000c 7B68     		ldr	r3, [r7, #4]
 21539 000e 03F10403 		add	r3, r3, #4
 21540 0012 1846     		mov	r0, r3
 21541 0014 FFF7FEFF 		bl	_ZN10DisplaySpi6enableEv
 220:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(true);		// Enable display
 21542              		.loc 1 220 0
 21543 0018 7868     		ldr	r0, [r7, #4]
 21544 001a 4FF00101 		mov	r1, #1
 21545 001e FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 221:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 222:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// LCD Extended Commands
 223:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x21);
 21546              		.loc 1 223 0
 21547 0022 7B68     		ldr	r3, [r7, #4]
 21548 0024 03F10403 		add	r3, r3, #4
 21549 0028 1846     		mov	r0, r3
 21550 002a 4FF02101 		mov	r1, #33
 21551 002e FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 224:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 225:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Set LCD Vop (Contrast)
 226:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x80 | contrast);
 21552              		.loc 1 226 0
 21553 0032 7B68     		ldr	r3, [r7, #4]
 21554 0034 03F10402 		add	r2, r3, #4
 21555 0038 FB78     		ldrb	r3, [r7, #3]
 21556 003a 63F07F03 		orn	r3, r3, #127
 21557 003e DBB2     		uxtb	r3, r3
 21558 0040 1046     		mov	r0, r2
 21559 0042 1946     		mov	r1, r3
 21560 0044 FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 227:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 228:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	//  LCD Standard Commands, horizontal addressing mode
 229:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x20);
 21561              		.loc 1 229 0
 21562 0048 7B68     		ldr	r3, [r7, #4]
 21563 004a 03F10403 		add	r3, r3, #4
 21564 004e 1846     		mov	r0, r3
 21565 0050 4FF02001 		mov	r1, #32
 21566 0054 FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 230:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 231:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(false);
 21567              		.loc 1 231 0
 21568 0058 7868     		ldr	r0, [r7, #4]
 21569 005a 4FF00001 		mov	r1, #0
 21570 005e FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 232:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::disable();
 21571              		.loc 1 232 0
 21572 0062 7B68     		ldr	r3, [r7, #4]
 21573 0064 03F10403 		add	r3, r3, #4
 21574 0068 1846     		mov	r0, r3
 21575 006a FFF7FEFF 		bl	_ZN10DisplaySpi7disableEv
 233:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21576              		.loc 1 233 0
 21577 006e 07F10807 		add	r7, r7, #8
 21578 0072 BD46     		mov	sp, r7
 21579 0074 80BD     		pop	{r7, pc}
 21580              		.cfi_endproc
 21581              	.LFE1109:
 21583 0076 00BF     		.section	.text._ZN17MonochromeDisplay13configDisplayEv,"ax",%progbits
 21584              		.align	2
 21585              		.global	_ZN17MonochromeDisplay13configDisplayEv
 21586              		.thumb
 21587              		.thumb_func
 21589              	_ZN17MonochromeDisplay13configDisplayEv:
 21590              	.LFB1110:
 234:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 235:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::configDisplay()
 236:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21591              		.loc 1 236 0
 21592              		.cfi_startproc
 21593              		@ args = 0, pretend = 0, frame = 8
 21594              		@ frame_needed = 1, uses_anonymous_args = 0
 21595 0000 80B5     		push	{r7, lr}
 21596              	.LCFI105:
 21597              		.cfi_def_cfa_offset 8
 21598 0002 82B0     		sub	sp, sp, #8
 21599              	.LCFI106:
 21600              		.cfi_def_cfa_offset 16
 21601 0004 00AF     		add	r7, sp, #0
 21602              		.cfi_offset 14, -4
 21603              		.cfi_offset 7, -8
 21604              	.LCFI107:
 21605              		.cfi_def_cfa_register 7
 21606 0006 7860     		str	r0, [r7, #4]
 237:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::enable();		// Setup SPI for display
 21607              		.loc 1 237 0
 21608 0008 7B68     		ldr	r3, [r7, #4]
 21609 000a 03F10403 		add	r3, r3, #4
 21610 000e 1846     		mov	r0, r3
 21611 0010 FFF7FEFF 		bl	_ZN10DisplaySpi6enableEv
 238:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(true);		// Enable display
 21612              		.loc 1 238 0
 21613 0014 7868     		ldr	r0, [r7, #4]
 21614 0016 4FF00101 		mov	r1, #1
 21615 001a FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 239:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 240:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	// Send sequence of command
 241:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x21);		// LCD Extended Commands.
 21616              		.loc 1 241 0
 21617 001e 7B68     		ldr	r3, [r7, #4]
 21618 0020 03F10403 		add	r3, r3, #4
 21619 0024 1846     		mov	r0, r3
 21620 0026 4FF02101 		mov	r1, #33
 21621 002a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 242:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0xC8);		// Set LCD Vop (Contrast).
 21622              		.loc 1 242 0
 21623 002e 7B68     		ldr	r3, [r7, #4]
 21624 0030 03F10403 		add	r3, r3, #4
 21625 0034 1846     		mov	r0, r3
 21626 0036 4FF0C801 		mov	r1, #200
 21627 003a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 243:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x06);		// Set Temp coefficent.
 21628              		.loc 1 243 0
 21629 003e 7B68     		ldr	r3, [r7, #4]
 21630 0040 03F10403 		add	r3, r3, #4
 21631 0044 1846     		mov	r0, r3
 21632 0046 4FF00601 		mov	r1, #6
 21633 004a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 244:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x13);		// LCD bias mode 1:48.
 21634              		.loc 1 244 0
 21635 004e 7B68     		ldr	r3, [r7, #4]
 21636 0050 03F10403 		add	r3, r3, #4
 21637 0054 1846     		mov	r0, r3
 21638 0056 4FF01301 		mov	r1, #19
 21639 005a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 245:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x20);		// LCD Standard Commands, Horizontal addressing mode.
 21640              		.loc 1 245 0
 21641 005e 7B68     		ldr	r3, [r7, #4]
 21642 0060 03F10403 		add	r3, r3, #4
 21643 0064 1846     		mov	r0, r3
 21644 0066 4FF02001 		mov	r1, #32
 21645 006a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 246:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x08);		// LCD blank
 21646              		.loc 1 246 0
 21647 006e 7B68     		ldr	r3, [r7, #4]
 21648 0070 03F10403 		add	r3, r3, #4
 21649 0074 1846     		mov	r0, r3
 21650 0076 4FF00801 		mov	r1, #8
 21651 007a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 247:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x0C);		// LCD in normal mode.
 21652              		.loc 1 247 0
 21653 007e 7B68     		ldr	r3, [r7, #4]
 21654 0080 03F10403 		add	r3, r3, #4
 21655 0084 1846     		mov	r0, r3
 21656 0086 4FF00C01 		mov	r1, #12
 21657 008a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 248:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 249:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(false);
 21658              		.loc 1 249 0
 21659 008e 7868     		ldr	r0, [r7, #4]
 21660 0090 4FF00001 		mov	r1, #0
 21661 0094 FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 250:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::disable();
 21662              		.loc 1 250 0
 21663 0098 7B68     		ldr	r3, [r7, #4]
 21664 009a 03F10403 		add	r3, r3, #4
 21665 009e 1846     		mov	r0, r3
 21666 00a0 FFF7FEFF 		bl	_ZN10DisplaySpi7disableEv
 251:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21667              		.loc 1 251 0
 21668 00a4 07F10807 		add	r7, r7, #8
 21669 00a8 BD46     		mov	sp, r7
 21670 00aa 80BD     		pop	{r7, pc}
 21671              		.cfi_endproc
 21672              	.LFE1110:
 21674              		.section	.text._ZN17MonochromeDisplay6updateEv,"ax",%progbits
 21675              		.align	2
 21676              		.global	_ZN17MonochromeDisplay6updateEv
 21677              		.thumb
 21678              		.thumb_func
 21680              	_ZN17MonochromeDisplay6updateEv:
 21681              	.LFB1111:
 252:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 253:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** void MonochromeDisplay::update()
 254:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** {
 21682              		.loc 1 254 0
 21683              		.cfi_startproc
 21684              		@ args = 0, pretend = 0, frame = 16
 21685              		@ frame_needed = 1, uses_anonymous_args = 0
 21686 0000 80B5     		push	{r7, lr}
 21687              	.LCFI108:
 21688              		.cfi_def_cfa_offset 8
 21689 0002 84B0     		sub	sp, sp, #16
 21690              	.LCFI109:
 21691              		.cfi_def_cfa_offset 24
 21692 0004 00AF     		add	r7, sp, #0
 21693              		.cfi_offset 14, -4
 21694              		.cfi_offset 7, -8
 21695              	.LCFI110:
 21696              		.cfi_def_cfa_register 7
 21697 0006 7860     		str	r0, [r7, #4]
 21698              	.LBB20:
 255:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::enable();		// Setup SPI for display
 21699              		.loc 1 255 0
 21700 0008 7B68     		ldr	r3, [r7, #4]
 21701 000a 03F10403 		add	r3, r3, #4
 21702 000e 1846     		mov	r0, r3
 21703 0010 FFF7FEFF 		bl	_ZN10DisplaySpi6enableEv
 256:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(true);		// Enable display
 21704              		.loc 1 256 0
 21705 0014 7868     		ldr	r0, [r7, #4]
 21706 0016 4FF00101 		mov	r1, #1
 21707 001a FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 257:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 258:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	//  Set base address X=0 Y=0
 259:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x80);
 21708              		.loc 1 259 0
 21709 001e 7B68     		ldr	r3, [r7, #4]
 21710 0020 03F10403 		add	r3, r3, #4
 21711 0024 1846     		mov	r0, r3
 21712 0026 4FF08001 		mov	r1, #128
 21713 002a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 260:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::sendCommand(0x40);
 21714              		.loc 1 260 0
 21715 002e 7B68     		ldr	r3, [r7, #4]
 21716 0030 03F10403 		add	r3, r3, #4
 21717 0034 1846     		mov	r0, r3
 21718 0036 4FF04001 		mov	r1, #64
 21719 003a FFF7FEFF 		bl	_ZN10DisplaySpi11sendCommandEh
 21720              	.LBB21:
 261:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 262:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	//  Serialize the video buffer.
 263:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (int i = 0; i < BUFFER_SIZE; i++)
 21721              		.loc 1 263 0
 21722 003e 4FF00003 		mov	r3, #0
 21723 0042 FB60     		str	r3, [r7, #12]
 21724 0044 10E0     		b	.L83
 21725              	.L84:
 264:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	{
 265:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 		DisplaySpi::sendData(_lcdBuffer[i]);
 21726              		.loc 1 265 0 discriminator 2
 21727 0046 7B68     		ldr	r3, [r7, #4]
 21728 0048 03F10402 		add	r2, r3, #4
 21729 004c 7968     		ldr	r1, [r7, #4]
 21730 004e FB68     		ldr	r3, [r7, #12]
 21731 0050 CB18     		adds	r3, r1, r3
 21732 0052 03F11003 		add	r3, r3, #16
 21733 0056 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21734 0058 1046     		mov	r0, r2
 21735 005a 1946     		mov	r1, r3
 21736 005c FFF7FEFF 		bl	_ZN10DisplaySpi8sendDataEh
 263:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (int i = 0; i < BUFFER_SIZE; i++)
 21737              		.loc 1 263 0 discriminator 2
 21738 0060 FB68     		ldr	r3, [r7, #12]
 21739 0062 03F10103 		add	r3, r3, #1
 21740 0066 FB60     		str	r3, [r7, #12]
 21741              	.L83:
 263:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	for (int i = 0; i < BUFFER_SIZE; i++)
 21742              		.loc 1 263 0 is_stmt 0 discriminator 1
 21743 0068 FA68     		ldr	r2, [r7, #12]
 21744 006a 40F2F713 		movw	r3, #503
 21745 006e 9A42     		cmp	r2, r3
 21746 0070 CCBF     		ite	gt
 21747 0072 0023     		movgt	r3, #0
 21748 0074 0123     		movle	r3, #1
 21749 0076 DBB2     		uxtb	r3, r3
 21750 0078 002B     		cmp	r3, #0
 21751 007a E4D1     		bne	.L84
 21752              	.LBE21:
 266:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	}
 267:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 
 268:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	enableDisplay(false);
 21753              		.loc 1 268 0 is_stmt 1
 21754 007c 7868     		ldr	r0, [r7, #4]
 21755 007e 4FF00001 		mov	r1, #0
 21756 0082 FFF7FEFF 		bl	_ZN17MonochromeDisplay13enableDisplayEb
 269:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** 	DisplaySpi::disable();
 21757              		.loc 1 269 0
 21758 0086 7B68     		ldr	r3, [r7, #4]
 21759 0088 03F10403 		add	r3, r3, #4
 21760 008c 1846     		mov	r0, r3
 21761 008e FFF7FEFF 		bl	_ZN10DisplaySpi7disableEv
 21762              	.LBE20:
 270:../board/olimex-stm32f103-stk/board/display/monochromedisplay.cpp **** }
 21763              		.loc 1 270 0
 21764 0092 07F11007 		add	r7, r7, #16
 21765 0096 BD46     		mov	sp, r7
 21766 0098 80BD     		pop	{r7, pc}
 21767              		.cfi_endproc
 21768              	.LFE1111:
 21770              		.global	_ZTV17MonochromeDisplay
 21771 009a 00BF     		.section	.rodata._ZTV17MonochromeDisplay,"a",%progbits
 21772              		.align	3
 21775              	_ZTV17MonochromeDisplay:
 21776 0000 00000000 		.word	0
 21777 0004 00000000 		.word	0
 21778 0008 00000000 		.word	_ZN17MonochromeDisplayD1Ev
 21779 000c 00000000 		.word	_ZN17MonochromeDisplayD0Ev
 21780 0010 00000000 		.word	_ZNK17MonochromeDisplay10resolutionEv
 21781 0014 00000000 		.word	_ZNK17MonochromeDisplay25acceleratedDrawingMethodsEv
 21782 0018 00000000 		.word	_ZN17MonochromeDisplay10initializeEv
 21783 001c 00000000 		.word	_ZN17MonochromeDisplay6enableEv
 21784 0020 00000000 		.word	_ZN17MonochromeDisplay7disableEv
 21785 0024 00000000 		.word	_ZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointE
 21786 0028 00000000 		.word	_ZN17MonochromeDisplay8setPixelERKN18IMonochromeDisplay5PointENS0_10PixelColorE
 21787 002c 00000000 		.word	_ZN17MonochromeDisplay5clearEN18IMonochromeDisplay10PixelColorE
 21788 0030 00000000 		.word	_ZN17MonochromeDisplay18writeDisplayMemoryEjPKhj
 21789 0034 00000000 		.word	_ZN17MonochromeDisplay17readDisplayMemoryEjPhj
 21790 0038 00000000 		.word	_ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE
 21791 003c 00000000 		.word	_ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21792 0040 00000000 		.word	_ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21793 0044 00000000 		.word	_ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21794 0048 00000000 		.word	_ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21795 004c 00000000 		.word	_ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE
 21796 0050 FCFFFFFF 		.word	-4
 21797 0054 00000000 		.word	0
 21798 0058 00000000 		.word	_ZThn4_N17MonochromeDisplayD1Ev
 21799 005c 00000000 		.word	_ZThn4_N17MonochromeDisplayD0Ev
 21800              		.weak	_ZTV18IMonochromeDisplay
 21801              		.section	.rodata._ZTV18IMonochromeDisplay,"aG",%progbits,_ZTV18IMonochromeDisplay,comdat
 21802              		.align	3
 21805              	_ZTV18IMonochromeDisplay:
 21806 0000 00000000 		.word	0
 21807 0004 00000000 		.word	0
 21808 0008 00000000 		.word	_ZN18IMonochromeDisplayD1Ev
 21809 000c 00000000 		.word	_ZN18IMonochromeDisplayD0Ev
 21810 0010 00000000 		.word	__cxa_pure_virtual
 21811 0014 00000000 		.word	__cxa_pure_virtual
 21812 0018 00000000 		.word	__cxa_pure_virtual
 21813 001c 00000000 		.word	__cxa_pure_virtual
 21814 0020 00000000 		.word	__cxa_pure_virtual
 21815 0024 00000000 		.word	__cxa_pure_virtual
 21816 0028 00000000 		.word	__cxa_pure_virtual
 21817 002c 00000000 		.word	_ZN18IMonochromeDisplay5clearENS_10PixelColorE
 21818 0030 00000000 		.word	_ZN18IMonochromeDisplay18writeDisplayMemoryEjPKhj
 21819 0034 00000000 		.word	_ZN18IMonochromeDisplay17readDisplayMemoryEjPhj
 21820 0038 00000000 		.word	_ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE
 21821 003c 00000000 		.word	_ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21822 0040 00000000 		.word	_ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21823 0044 00000000 		.word	_ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21824 0048 00000000 		.word	_ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
 21825 004c 00000000 		.word	_ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE
 21826              		.section	.rodata._ZZN17MonochromeDisplay17readDisplayMemoryEjPhjE19__PRETTY_FUNCTION__,"a",%progbi
 21827              		.align	2
 21830              	_ZZN17MonochromeDisplay17readDisplayMemoryEjPhjE19__PRETTY_FUNCTION__:
 21831 0000 76697274 		.ascii	"virtual void MonochromeDisplay::readDisplayMemory(s"
 21831      75616C20 
 21831      766F6964 
 21831      204D6F6E 
 21831      6F636872 
 21832 0033 697A655F 		.ascii	"ize_t, uint8_t*, size_t)\000"
 21832      742C2075 
 21832      696E7438 
 21832      5F742A2C 
 21832      2073697A 
 21833              		.section	.rodata._ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTION_
 21834              		.align	2
 21837              	_ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTION__:
 21838 0000 76697274 		.ascii	"virtual IMonochromeDisplay::PixelColor MonochromeDi"
 21838      75616C20 
 21838      494D6F6E 
 21838      6F636872 
 21838      6F6D6544 
 21839 0033 73706C61 		.ascii	"splay::pixel(const MonochromeDisplay::Point&)\000"
 21839      793A3A70 
 21839      6978656C 
 21839      28636F6E 
 21839      7374204D 
 21840 0061 000000   		.text
 21841              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 monochromedisplay.cpp
     /tmp/cczDNz3F.s:19484  .text._ZL20__gthread_key_deletei:00000000 $t
     /tmp/cczDNz3F.s:19488  .text._ZL20__gthread_key_deletei:00000000 _ZL20__gthread_key_deletei
     /tmp/cczDNz3F.s:19518  .text._ZN18IMonochromeDisplay5PointC2Eii:00000000 $t
     /tmp/cczDNz3F.s:19523  .text._ZN18IMonochromeDisplay5PointC2Eii:00000000 _ZN18IMonochromeDisplay5PointC2Eii
     /tmp/cczDNz3F.s:19523  .text._ZN18IMonochromeDisplay5PointC2Eii:00000000 _ZN18IMonochromeDisplay5PointC1Eii
     /tmp/cczDNz3F.s:19564  .text._ZN18IMonochromeDisplay4SizeC2Eii:00000000 $t
     /tmp/cczDNz3F.s:19569  .text._ZN18IMonochromeDisplay4SizeC2Eii:00000000 _ZN18IMonochromeDisplay4SizeC2Eii
     /tmp/cczDNz3F.s:19569  .text._ZN18IMonochromeDisplay4SizeC2Eii:00000000 _ZN18IMonochromeDisplay4SizeC1Eii
     /tmp/cczDNz3F.s:19610  .text._ZN18IMonochromeDisplayC2Ev:00000000 $t
     /tmp/cczDNz3F.s:19615  .text._ZN18IMonochromeDisplayC2Ev:00000000 _ZN18IMonochromeDisplayC2Ev
     /tmp/cczDNz3F.s:19648  .text._ZN18IMonochromeDisplayC2Ev:0000001c $d
     /tmp/cczDNz3F.s:21805  .rodata._ZTV18IMonochromeDisplay:00000000 _ZTV18IMonochromeDisplay
     /tmp/cczDNz3F.s:19615  .text._ZN18IMonochromeDisplayC2Ev:00000000 _ZN18IMonochromeDisplayC1Ev
     /tmp/cczDNz3F.s:19655  .text._ZN18IMonochromeDisplayD2Ev:00000000 $t
     /tmp/cczDNz3F.s:19660  .text._ZN18IMonochromeDisplayD2Ev:00000000 _ZN18IMonochromeDisplayD2Ev
     /tmp/cczDNz3F.s:19702  .text._ZN18IMonochromeDisplayD2Ev:00000030 $d
     /tmp/cczDNz3F.s:19660  .text._ZN18IMonochromeDisplayD2Ev:00000000 _ZN18IMonochromeDisplayD1Ev
     /tmp/cczDNz3F.s:19709  .text._ZN18IMonochromeDisplayD0Ev:00000000 $t
     /tmp/cczDNz3F.s:19714  .text._ZN18IMonochromeDisplayD0Ev:00000000 _ZN18IMonochromeDisplayD0Ev
     /tmp/cczDNz3F.s:19746  .text._ZN18IMonochromeDisplay5clearENS_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:19751  .text._ZN18IMonochromeDisplay5clearENS_10PixelColorE:00000000 _ZN18IMonochromeDisplay5clearENS_10PixelColorE
     /tmp/cczDNz3F.s:19780  .text._ZN18IMonochromeDisplay18writeDisplayMemoryEjPKhj:00000000 $t
     /tmp/cczDNz3F.s:19785  .text._ZN18IMonochromeDisplay18writeDisplayMemoryEjPKhj:00000000 _ZN18IMonochromeDisplay18writeDisplayMemoryEjPKhj
     /tmp/cczDNz3F.s:19815  .text._ZN18IMonochromeDisplay17readDisplayMemoryEjPhj:00000000 $t
     /tmp/cczDNz3F.s:19820  .text._ZN18IMonochromeDisplay17readDisplayMemoryEjPhj:00000000 _ZN18IMonochromeDisplay17readDisplayMemoryEjPhj
     /tmp/cczDNz3F.s:19850  .text._ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:19855  .text._ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE:00000000 _ZN18IMonochromeDisplay8drawLineERKNS_5PointES2_NS_10PixelColorE
     /tmp/cczDNz3F.s:19885  .text._ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:19890  .text._ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 _ZN18IMonochromeDisplay13drawRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
     /tmp/cczDNz3F.s:19920  .text._ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:19925  .text._ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 _ZN18IMonochromeDisplay13fillRectangleERKNS_5PointERKNS_4SizeENS_10PixelColorE
     /tmp/cczDNz3F.s:19955  .text._ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:19960  .text._ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 _ZN18IMonochromeDisplay11drawEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
     /tmp/cczDNz3F.s:19990  .text._ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:19995  .text._ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE:00000000 _ZN18IMonochromeDisplay11fillEllipseERKNS_5PointERKNS_4SizeENS_10PixelColorE
     /tmp/cczDNz3F.s:20025  .text._ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:20030  .text._ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE:00000000 _ZN18IMonochromeDisplay8drawTextERKNS_5PointERKSsNS_10PixelColorE
     /tmp/cczDNz3F.s:20060  .text._ZNK17MonochromeDisplay23getPixelColorFromBitmapERKN18IMonochromeDisplay5PointEPKh:00000000 $t
     /tmp/cczDNz3F.s:20065  .text._ZNK17MonochromeDisplay23getPixelColorFromBitmapERKN18IMonochromeDisplay5PointEPKh:00000000 _ZNK17MonochromeDisplay23getPixelColorFromBitmapERKN18IMonochromeDisplay5PointEPKh
     /tmp/cczDNz3F.s:20147  .text._ZN17MonochromeDisplay21setPixelColorToBitmapEPhRKN18IMonochromeDisplay5PointENS1_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:20152  .text._ZN17MonochromeDisplay21setPixelColorToBitmapEPhRKN18IMonochromeDisplay5PointENS1_10PixelColorE:00000000 _ZN17MonochromeDisplay21setPixelColorToBitmapEPhRKN18IMonochromeDisplay5PointENS1_10PixelColorE
     /tmp/cczDNz3F.s:20296  .text._ZN17MonochromeDisplayC2Ev:00000000 $t
     /tmp/cczDNz3F.s:20301  .text._ZN17MonochromeDisplayC2Ev:00000000 _ZN17MonochromeDisplayC2Ev
     /tmp/cczDNz3F.s:20351  .text._ZN17MonochromeDisplayC2Ev:00000044 $d
     /tmp/cczDNz3F.s:21775  .rodata._ZTV17MonochromeDisplay:00000000 _ZTV17MonochromeDisplay
     /tmp/cczDNz3F.s:20301  .text._ZN17MonochromeDisplayC2Ev:00000000 _ZN17MonochromeDisplayC1Ev
     /tmp/cczDNz3F.s:20359  .text._ZN17MonochromeDisplayD2Ev:00000000 $t
     /tmp/cczDNz3F.s:20364  .text._ZN17MonochromeDisplayD2Ev:00000000 _ZN17MonochromeDisplayD2Ev
     /tmp/cczDNz3F.s:20419  .text._ZN17MonochromeDisplayD2Ev:00000048 $d
     /tmp/cczDNz3F.s:20364  .text._ZN17MonochromeDisplayD2Ev:00000000 _ZN17MonochromeDisplayD1Ev
     /tmp/cczDNz3F.s:20364  .text._ZN17MonochromeDisplayD2Ev:00000000 .LTHUNK0
     /tmp/cczDNz3F.s:20428  .text._ZThn4_N17MonochromeDisplayD1Ev:00000000 $t
     /tmp/cczDNz3F.s:20433  .text._ZThn4_N17MonochromeDisplayD1Ev:00000000 _ZThn4_N17MonochromeDisplayD1Ev
     /tmp/cczDNz3F.s:20438  .text._ZN17MonochromeDisplayD0Ev:00000000 $t
     /tmp/cczDNz3F.s:20443  .text._ZN17MonochromeDisplayD0Ev:00000000 _ZN17MonochromeDisplayD0Ev
     /tmp/cczDNz3F.s:20443  .text._ZN17MonochromeDisplayD0Ev:00000000 .LTHUNK1
     /tmp/cczDNz3F.s:20476  .text._ZThn4_N17MonochromeDisplayD0Ev:00000000 $t
     /tmp/cczDNz3F.s:20481  .text._ZThn4_N17MonochromeDisplayD0Ev:00000000 _ZThn4_N17MonochromeDisplayD0Ev
     /tmp/cczDNz3F.s:20486  .text._ZNK17MonochromeDisplay10resolutionEv:00000000 $t
     /tmp/cczDNz3F.s:20491  .text._ZNK17MonochromeDisplay10resolutionEv:00000000 _ZNK17MonochromeDisplay10resolutionEv
     /tmp/cczDNz3F.s:20525  .text._ZNK17MonochromeDisplay25acceleratedDrawingMethodsEv:00000000 $t
     /tmp/cczDNz3F.s:20530  .text._ZNK17MonochromeDisplay25acceleratedDrawingMethodsEv:00000000 _ZNK17MonochromeDisplay25acceleratedDrawingMethodsEv
     /tmp/cczDNz3F.s:20571  .text._ZN17MonochromeDisplay10initializeEv:00000000 $t
     /tmp/cczDNz3F.s:20576  .text._ZN17MonochromeDisplay10initializeEv:00000000 _ZN17MonochromeDisplay10initializeEv
     /tmp/cczDNz3F.s:21417  .text._ZN17MonochromeDisplay11enableResetEb:00000000 _ZN17MonochromeDisplay11enableResetEb
     /tmp/cczDNz3F.s:21589  .text._ZN17MonochromeDisplay13configDisplayEv:00000000 _ZN17MonochromeDisplay13configDisplayEv
     /tmp/cczDNz3F.s:21517  .text._ZN17MonochromeDisplay11setContrastEh:00000000 _ZN17MonochromeDisplay11setContrastEh
     /tmp/cczDNz3F.s:21680  .text._ZN17MonochromeDisplay6updateEv:00000000 _ZN17MonochromeDisplay6updateEv
     /tmp/cczDNz3F.s:20711  .text._ZN17MonochromeDisplay6enableEv:00000000 $t
     /tmp/cczDNz3F.s:20716  .text._ZN17MonochromeDisplay6enableEv:00000000 _ZN17MonochromeDisplay6enableEv
     /tmp/cczDNz3F.s:20746  .text._ZN17MonochromeDisplay7disableEv:00000000 $t
     /tmp/cczDNz3F.s:20751  .text._ZN17MonochromeDisplay7disableEv:00000000 _ZN17MonochromeDisplay7disableEv
     /tmp/cczDNz3F.s:20781  .rodata:00000000 $d
     /tmp/cczDNz3F.s:20782  .rodata:00000000 .LC0
     /tmp/cczDNz3F.s:20786  .rodata:00000044 .LC1
     /tmp/cczDNz3F.s:20789  .rodata:00000054 .LC2
     /tmp/cczDNz3F.s:20792  .text._ZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointE:00000000 $t
     /tmp/cczDNz3F.s:20797  .text._ZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointE:00000000 _ZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointE
     /tmp/cczDNz3F.s:21837  .rodata._ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTION__:00000000 _ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTION__
     /tmp/cczDNz3F.s:20917  .text._ZN17MonochromeDisplay8setPixelERKN18IMonochromeDisplay5PointENS0_10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:20922  .text._ZN17MonochromeDisplay8setPixelERKN18IMonochromeDisplay5PointENS0_10PixelColorE:00000000 _ZN17MonochromeDisplay8setPixelERKN18IMonochromeDisplay5PointENS0_10PixelColorE
     /tmp/cczDNz3F.s:21052  .text._ZN17MonochromeDisplay5clearEN18IMonochromeDisplay10PixelColorE:00000000 $t
     /tmp/cczDNz3F.s:21057  .text._ZN17MonochromeDisplay5clearEN18IMonochromeDisplay10PixelColorE:00000000 _ZN17MonochromeDisplay5clearEN18IMonochromeDisplay10PixelColorE
     /tmp/cczDNz3F.s:21092  .text._ZN17MonochromeDisplay18writeDisplayMemoryEjPKhj:00000000 $t
     /tmp/cczDNz3F.s:21097  .text._ZN17MonochromeDisplay18writeDisplayMemoryEjPKhj:00000000 _ZN17MonochromeDisplay18writeDisplayMemoryEjPKhj
     /tmp/cczDNz3F.s:21203  .rodata:00000068 .LC3
     /tmp/cczDNz3F.s:21206  .text._ZN17MonochromeDisplay17readDisplayMemoryEjPhj:00000000 $t
     /tmp/cczDNz3F.s:21211  .text._ZN17MonochromeDisplay17readDisplayMemoryEjPhj:00000000 _ZN17MonochromeDisplay17readDisplayMemoryEjPhj
     /tmp/cczDNz3F.s:21830  .rodata._ZZN17MonochromeDisplay17readDisplayMemoryEjPhjE19__PRETTY_FUNCTION__:00000000 _ZZN17MonochromeDisplay17readDisplayMemoryEjPhjE19__PRETTY_FUNCTION__
     /tmp/cczDNz3F.s:21316  .text._ZN17MonochromeDisplay11sendCommandEh:00000000 $t
     /tmp/cczDNz3F.s:21321  .text._ZN17MonochromeDisplay11sendCommandEh:00000000 _ZN17MonochromeDisplay11sendCommandEh
     /tmp/cczDNz3F.s:21467  .text._ZN17MonochromeDisplay13enableDisplayEb:00000000 _ZN17MonochromeDisplay13enableDisplayEb
     /tmp/cczDNz3F.s:21364  .text._ZN17MonochromeDisplay8sendDataEh:00000000 $t
     /tmp/cczDNz3F.s:21369  .text._ZN17MonochromeDisplay8sendDataEh:00000000 _ZN17MonochromeDisplay8sendDataEh
     /tmp/cczDNz3F.s:21412  .text._ZN17MonochromeDisplay11enableResetEb:00000000 $t
     /tmp/cczDNz3F.s:21462  .text._ZN17MonochromeDisplay13enableDisplayEb:00000000 $t
     /tmp/cczDNz3F.s:21512  .text._ZN17MonochromeDisplay11setContrastEh:00000000 $t
     /tmp/cczDNz3F.s:21584  .text._ZN17MonochromeDisplay13configDisplayEv:00000000 $t
     /tmp/cczDNz3F.s:21675  .text._ZN17MonochromeDisplay6updateEv:00000000 $t
     /tmp/cczDNz3F.s:21772  .rodata._ZTV17MonochromeDisplay:00000000 $d
     /tmp/cczDNz3F.s:21802  .rodata._ZTV18IMonochromeDisplay:00000000 $d
     /tmp/cczDNz3F.s:21827  .rodata._ZZN17MonochromeDisplay17readDisplayMemoryEjPhjE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/cczDNz3F.s:21834  .rodata._ZZN17MonochromeDisplay5pixelERKN18IMonochromeDisplay5PointEE19__PRETTY_FUNCTION__:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 _ZN18IMonochromeDisplay5PointC5Eii
                           .group:00000000 _ZN18IMonochromeDisplay4SizeC5Eii
                           .group:00000000 _ZN18IMonochromeDisplayC5Ev
                           .group:00000000 _ZN18IMonochromeDisplayD5Ev

UNDEFINED SYMBOLS
_ZdlPv
_ZN7Factory8instanceEv
_ZN7Factory9sharedSpiEv
_ZN10DisplaySpiC2ER19DisplayNrfSharedSpi
_ZN10DisplaySpiD2Ev
memset
RCC_APB2PeriphClockCmd
_ZN10DisplaySpi10initializeEv
GPIO_Init
GPIO_WriteBit
__assert_func
_ZN10DisplaySpi11sendCommandEh
_ZN10DisplaySpi8sendDataEh
_ZN10DisplaySpi6enableEv
_ZN10DisplaySpi7disableEv
__cxa_pure_virtual
