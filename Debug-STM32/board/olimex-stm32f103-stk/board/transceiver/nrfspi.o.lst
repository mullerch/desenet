   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"nrfspi.cpp"
  23              	.Ltext0:
  24              		.file 1 "../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp"
 19837              		.align	2
 19838              		.thumb
 19839              		.thumb_func
 19841              	_ZL20__gthread_key_deletei:
 19842              	.LFB540:
   1:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Compile this one with gcc.  */
   3:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Copyright (C) 1997, 1999, 2000, 2004, 2008, 2009
   4:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****    Free Software Foundation, Inc.
   5:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
   6:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** This file is part of GCC.
   7:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
   8:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** GCC is free software; you can redistribute it and/or modify it under
   9:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** the terms of the GNU General Public License as published by the Free
  10:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** Software Foundation; either version 3, or (at your option) any later
  11:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** version.
  12:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  13:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  14:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  15:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  16:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** for more details.
  17:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  18:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** Under Section 7 of GPL version 3, you are granted additional
  19:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** permissions described in the GCC Runtime Library Exception, version
  20:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 3.1, as published by the Free Software Foundation.
  21:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  22:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** You should have received a copy of the GNU General Public License and
  23:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** a copy of the GCC Runtime Library Exception along with this program;
  24:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  25:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** <http://www.gnu.org/licenses/>.  */
  26:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  27:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  28:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  29:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  30:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Just provide compatibility for mutex handling.  */
  31:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  32:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_key_t;
  33:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_once_t;
  34:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_mutex_t;
  35:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** typedef int __gthread_recursive_mutex_t;
  36:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  37:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define __GTHREAD_ONCE_INIT 0
  38:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define __GTHREAD_MUTEX_INIT 0
  39:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  41:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #define _GLIBCXX_UNUSED __attribute__((unused))
  42:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  43:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #ifdef _LIBOBJC
  44:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  45:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Thread local storage for a single thread */
  46:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static void *thread_local_storage = NULL;
  47:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  48:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend initialization functions */
  49:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  50:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Initialize the threads subsystem.  */
  51:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  52:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_init_thread_system (void)
  53:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  54:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  55:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
  56:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  57:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  58:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Close the threads subsystem.  */
  59:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  60:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_close_thread_system (void)
  61:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  62:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  63:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
  64:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  65:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  66:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend thread functions */
  67:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  68:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Create a new thread of execution.  */
  69:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline objc_thread_t
  70:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  72:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  73:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return NULL;
  74:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  75:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  76:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Set the current thread's priority.  */
  77:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  78:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  80:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
  81:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
  82:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  83:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  84:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Return the current thread's priority.  */
  85:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
  86:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_get_priority (void)
  87:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  88:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  90:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  91:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Yield our process time to another thread.  */
  92:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline void
  93:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_yield (void)
  94:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
  95:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return;
  96:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
  97:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
  98:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Terminate the current thread.  */
  99:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 100:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_exit (void)
 101:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 102:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support available */
 103:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* Should we really exit the program */
 104:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* exit (&__objc_thread_exit_status); */
 105:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return -1;
 106:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 107:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 108:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline objc_thread_t
 110:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_id (void)
 111:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 112:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* No thread support, use 1.  */
 113:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return (objc_thread_t) 1;
 114:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 115:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 116:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Sets the thread's local storage pointer.  */
 117:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 118:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_set_data (void *value)
 119:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 120:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   thread_local_storage = value;
 121:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 122:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 123:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 124:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Returns the thread's local storage pointer.  */
 125:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline void *
 126:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_thread_get_data (void)
 127:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 128:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return thread_local_storage;
 129:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 130:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 131:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend mutex functions */
 132:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 133:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Allocate a mutex.  */
 134:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 135:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 137:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 138:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 139:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 140:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Deallocate a mutex.  */
 141:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 142:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 144:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 145:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 146:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 147:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Grab a lock on a mutex.  */
 148:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 149:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 151:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* There can only be one thread, so we always get the lock */
 152:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 153:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 154:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 155:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Try to grab a lock on a mutex.  */
 156:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 157:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 159:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   /* There can only be one thread, so we always get the lock */
 160:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 161:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 162:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 163:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Unlock the mutex */
 164:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 165:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 167:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 168:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 169:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 170:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Backend condition mutex functions */
 171:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 172:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Allocate a condition.  */
 173:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 174:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 176:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 177:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 178:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 179:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Deallocate a condition.  */
 180:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 181:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 183:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 184:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 185:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 186:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Wait on the condition */
 187:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 188:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 191:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 192:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 193:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 194:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Wake up all threads waiting on this condition.  */
 195:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 196:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 198:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 199:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 200:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 201:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** /* Wake up one thread waiting on this condition.  */
 202:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 203:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 205:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 206:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 207:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 208:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** #else /* _LIBOBJC */
 209:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 210:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 211:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_active_p (void)
 212:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 213:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 214:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 215:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 216:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int
 217:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 219:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 220:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 221:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 222:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static inline int _GLIBCXX_UNUSED
 223:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 225:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 226:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 227:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** 
 228:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** static int _GLIBCXX_UNUSED
 229:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** {
 19843              		.loc 81 230 0
 19844              		.cfi_startproc
 19845              		@ args = 0, pretend = 0, frame = 8
 19846              		@ frame_needed = 1, uses_anonymous_args = 0
 19847              		@ link register save eliminated.
 19848 0000 80B4     		push	{r7}
 19849              	.LCFI0:
 19850              		.cfi_def_cfa_offset 4
 19851 0002 83B0     		sub	sp, sp, #12
 19852              	.LCFI1:
 19853              		.cfi_def_cfa_offset 16
 19854 0004 00AF     		add	r7, sp, #0
 19855              		.cfi_offset 7, -4
 19856              	.LCFI2:
 19857              		.cfi_def_cfa_register 7
 19858 0006 7860     		str	r0, [r7, #4]
 231:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h ****   return 0;
 19859              		.loc 81 231 0
 19860 0008 4FF00003 		mov	r3, #0
 232:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/arm-none-eabi/thumb/bits/gthr-single.h **** }
 19861              		.loc 81 232 0
 19862 000c 1846     		mov	r0, r3
 19863 000e 07F10C07 		add	r7, r7, #12
 19864 0012 BD46     		mov	sp, r7
 19865 0014 80BC     		pop	{r7}
 19866 0016 7047     		bx	lr
 19867              		.cfi_endproc
 19868              	.LFE540:
 19870              		.section	.text._ZN19DisplayNrfSharedSpi3spiEv,"axG",%progbits,_ZN19DisplayNrfSharedSpi3spiEv,comda
 19871              		.align	2
 19872              		.weak	_ZN19DisplayNrfSharedSpi3spiEv
 19873              		.thumb
 19874              		.thumb_func
 19876              	_ZN19DisplayNrfSharedSpi3spiEv:
 19877              	.LFB1016:
   1:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** #pragma once
   2:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
   3:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
   4:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** #include <hal/spi.h>
   5:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
   6:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
   7:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** /**
   8:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  * Shared part of the SPI used by the MonochromeDisplay and the
   9:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  * nRF chip.
  10:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  * The nRF chip has priority to use the SPI. Therefore, the
  11:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  * MonochomDisplay needs to reset the SPI to a state
  12:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  * that the nRF chip can use it directly.
  13:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  *
  14:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  * This class should not be accessed directly. Use the classes
  15:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  * NrfSpi and DisplaySpi to access this class.
  16:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h ****  */
  17:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** class DisplayNrfSharedSpi
  18:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** {
  19:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	friend class NrfSpi;
  20:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	friend class DisplaySpi;
  21:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
  22:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** public:
  23:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
  24:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	typedef SPI::tStatus tStatus;
  25:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
  26:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	DisplayNrfSharedSpi();
  27:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	virtual ~DisplayNrfSharedSpi();
  28:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
  29:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	bool initialize();
  30:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
  31:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** protected:
  32:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	inline SPI & spi() { return _SPI; }
 19878              		.loc 108 32 0
 19879              		.cfi_startproc
 19880              		@ args = 0, pretend = 0, frame = 8
 19881              		@ frame_needed = 1, uses_anonymous_args = 0
 19882              		@ link register save eliminated.
 19883 0000 80B4     		push	{r7}
 19884              	.LCFI3:
 19885              		.cfi_def_cfa_offset 4
 19886 0002 83B0     		sub	sp, sp, #12
 19887              	.LCFI4:
 19888              		.cfi_def_cfa_offset 16
 19889 0004 00AF     		add	r7, sp, #0
 19890              		.cfi_offset 7, -4
 19891              	.LCFI5:
 19892              		.cfi_def_cfa_register 7
 19893 0006 7860     		str	r0, [r7, #4]
 19894              		.loc 108 32 0
 19895 0008 7B68     		ldr	r3, [r7, #4]
 19896 000a 9B68     		ldr	r3, [r3, #8]
 19897 000c 1846     		mov	r0, r3
 19898 000e 07F10C07 		add	r7, r7, #12
 19899 0012 BD46     		mov	sp, r7
 19900 0014 80BC     		pop	{r7}
 19901 0016 7047     		bx	lr
 19902              		.cfi_endproc
 19903              	.LFE1016:
 19905              		.section	.text._ZN19DisplayNrfSharedSpi8sendByteEh,"axG",%progbits,_ZN19DisplayNrfSharedSpi8sendBy
 19906              		.align	2
 19907              		.weak	_ZN19DisplayNrfSharedSpi8sendByteEh
 19908              		.thumb
 19909              		.thumb_func
 19911              	_ZN19DisplayNrfSharedSpi8sendByteEh:
 19912              	.LFB1017:
  33:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 
  34:/home/desem/workspace/desenet/board/olimex-stm32f103-stk/board/shared-spi/displaynrfsharedspi.h **** 	inline tStatus sendByte(unsigned char data) { return spi().sendByte(data); }
 19913              		.loc 108 34 0
 19914              		.cfi_startproc
 19915              		@ args = 0, pretend = 0, frame = 8
 19916              		@ frame_needed = 1, uses_anonymous_args = 0
 19917 0000 80B5     		push	{r7, lr}
 19918              	.LCFI6:
 19919              		.cfi_def_cfa_offset 8
 19920 0002 82B0     		sub	sp, sp, #8
 19921              	.LCFI7:
 19922              		.cfi_def_cfa_offset 16
 19923 0004 00AF     		add	r7, sp, #0
 19924              		.cfi_offset 14, -4
 19925              		.cfi_offset 7, -8
 19926              	.LCFI8:
 19927              		.cfi_def_cfa_register 7
 19928 0006 7860     		str	r0, [r7, #4]
 19929 0008 0B46     		mov	r3, r1
 19930 000a FB70     		strb	r3, [r7, #3]
 19931              		.loc 108 34 0
 19932 000c 7868     		ldr	r0, [r7, #4]
 19933 000e FFF7FEFF 		bl	_ZN19DisplayNrfSharedSpi3spiEv
 19934 0012 0246     		mov	r2, r0
 19935 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 19936 0016 1046     		mov	r0, r2
 19937 0018 1946     		mov	r1, r3
 19938 001a FFF7FEFF 		bl	_ZN3SPI8sendByteEh
 19939 001e 0346     		mov	r3, r0
 19940 0020 1846     		mov	r0, r3
 19941 0022 07F10807 		add	r7, r7, #8
 19942 0026 BD46     		mov	sp, r7
 19943 0028 80BD     		pop	{r7, pc}
 19944              		.cfi_endproc
 19945              	.LFE1017:
 19947 002a 00BF     		.section	.text._ZNK6NrfSpi13isInitializedEv,"axG",%progbits,_ZNK6NrfSpi13isInitializedEv,comdat
 19948              		.align	2
 19949              		.weak	_ZNK6NrfSpi13isInitializedEv
 19950              		.thumb
 19951              		.thumb_func
 19953              	_ZNK6NrfSpi13isInitializedEv:
 19954              	.LFB1018:
   1:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** #pragma once
   2:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
   3:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** #include <target.h>
   4:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** #include <utils/Address>
   5:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** #include <board/shared-spi/displaynrfsharedspi.h>
   6:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
   7:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
   8:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** class Frame;
   9:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  10:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  11:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** class NrfSpi
  12:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** {
  13:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** public:
  14:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	NrfSpi(DisplayNrfSharedSpi & sharedSpi);
  15:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	virtual ~NrfSpi();
  16:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  17:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	bool initialize();													///< Initializes the NrfSpi. Should be called after construction.
  18:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline bool isInitialized() const { return _bInitialized; }			///< Returns true if the #initialize
 19955              		.loc 96 18 0
 19956              		.cfi_startproc
 19957              		@ args = 0, pretend = 0, frame = 8
 19958              		@ frame_needed = 1, uses_anonymous_args = 0
 19959              		@ link register save eliminated.
 19960 0000 80B4     		push	{r7}
 19961              	.LCFI9:
 19962              		.cfi_def_cfa_offset 4
 19963 0002 83B0     		sub	sp, sp, #12
 19964              	.LCFI10:
 19965              		.cfi_def_cfa_offset 16
 19966 0004 00AF     		add	r7, sp, #0
 19967              		.cfi_offset 7, -4
 19968              	.LCFI11:
 19969              		.cfi_def_cfa_register 7
 19970 0006 7860     		str	r0, [r7, #4]
 19971              		.loc 96 18 0
 19972 0008 7B68     		ldr	r3, [r7, #4]
 19973 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19974 000c 1846     		mov	r0, r3
 19975 000e 07F10C07 		add	r7, r7, #12
 19976 0012 BD46     		mov	sp, r7
 19977 0014 80BC     		pop	{r7}
 19978 0016 7047     		bx	lr
 19979              		.cfi_endproc
 19980              	.LFE1018:
 19982              		.section	.text._ZNK6NrfSpi15featuresEnabledEv,"axG",%progbits,_ZNK6NrfSpi15featuresEnabledEv,comda
 19983              		.align	2
 19984              		.weak	_ZNK6NrfSpi15featuresEnabledEv
 19985              		.thumb
 19986              		.thumb_func
 19988              	_ZNK6NrfSpi15featuresEnabledEv:
 19989              	.LFB1019:
  19:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  20:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	typedef unsigned char tStatus;
  21:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	typedef unsigned char tRegister;
  22:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	typedef Address<4>	tAddress;		///< Type used for source and destination address
  23:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	typedef enum
  24:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	{
  25:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		R_REGISTER			= 0x00,
  26:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		W_REGISTER			= 0x01,
  27:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		R_RX_PAYLOAD		= 0x61,
  28:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		W_TX_PAYLOAD		= 0xA0,
  29:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		FLUSH_TX 			= 0xE1,
  30:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		FLUSH_RX			= 0xE2,
  31:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		REUSE_TX_PL			= 0xE3,
  32:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		ACTIVATE			= 0x50,
  33:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		R_RX_PL_WID			= 0x60,
  34:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		W_ACK_PAYLOAD		= 0xA1,		// Not complete. Use it as mask.
  35:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		W_TX_PAYLOAD_NO_ACK	= 0xB0,
  36:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		NOP					= 0xFF
  37:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	} eNrfSpiCmd;
  38:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  39:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	typedef enum
  40:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	{
  41:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		CONFIG			= 0x00,
  42:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		EN_AA			= 0x01,
  43:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		EN_RXADDR		= 0x02,
  44:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		SETUP_AW		= 0x03,
  45:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		SETUP_RETR		= 0x04,
  46:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		RF_CH			= 0x05,
  47:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		RF_SETUP		= 0x06,
  48:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		STATUS			= 0x07,
  49:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		OBSERVE_TX		= 0x08,
  50:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		CD				= 0x09,
  51:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		RX_ADDR_P0		= 0x0A,
  52:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		RX_ADDR_P1		= 0x0B,
  53:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		TX_ADDR			= 0x10,
  54:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		RX_PW_P0		= 0x11,
  55:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		RX_PW_P1		= 0x12,
  56:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		FIFO_STATUS		= 0x17,
  57:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		DYNPD			= 0x1C,
  58:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 		FEATURE			= 0x1D
  59:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	} eNrfRegister;
  60:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  61:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char CONFIG_REG_PRIM_RX	= 0x01;
  62:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char CONFIG_REG_PWR_UP	= 0x02;
  63:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char CONFIG_REG_CRCO		= 0x04;
  64:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char CONFIG_REG_EN_CRC	= 0x08;
  65:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  66:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char STATUS_REG_TX_FULL	= 0x01;
  67:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char STATUS_REG_MAX_RT	= 0x10;
  68:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char STATUS_REG_RX_DR		= 0x40;
  69:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char STATUS_REG_TX_DS		= 0x20;
  70:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  71:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char FEATURE_REG_EN_DPL	= 0x04;
  72:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	static const unsigned char ACTIVATE_DATA		= 0x73;
  73:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  74:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus status();														///< Returns the status byte from the transceiver.
  75:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  76:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus sendCmd(eNrfSpiCmd cmd);										///< Sends a command to the transceiver. See eNrfSpiCmd 
  77:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus sendFrame(const Frame & frame);									///< Sends a frame to the transceiver.
  78:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus readFrame(Frame & frame);										///< Reads n-bytes from RX FIFO according to the payloa
  79:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  80:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tRegister readRegister(eNrfRegister reg);								///< Used to read the transceivers registers (one
  81:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus readRegister(eNrfRegister reg, tAddress & address);				///< Used to read the transceivers 
  82:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  83:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus writeRegister(eNrfRegister reg, tRegister value);				///< Writes a value to the transceive
  84:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus writeRegister(eNrfRegister reg, const tAddress & address);		///< Writes an address to the 
  85:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  86:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	bool activateFeatures(bool enable);										///< Activates some features of the transceiver chip
  87:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline bool featuresEnabled() const { return _bNrfFeaturesEnabled; }	///< Returns true if the feat
 19990              		.loc 96 87 0
 19991              		.cfi_startproc
 19992              		@ args = 0, pretend = 0, frame = 8
 19993              		@ frame_needed = 1, uses_anonymous_args = 0
 19994              		@ link register save eliminated.
 19995 0000 80B4     		push	{r7}
 19996              	.LCFI12:
 19997              		.cfi_def_cfa_offset 4
 19998 0002 83B0     		sub	sp, sp, #12
 19999              	.LCFI13:
 20000              		.cfi_def_cfa_offset 16
 20001 0004 00AF     		add	r7, sp, #0
 20002              		.cfi_offset 7, -4
 20003              	.LCFI14:
 20004              		.cfi_def_cfa_register 7
 20005 0006 7860     		str	r0, [r7, #4]
 20006              		.loc 96 87 0
 20007 0008 7B68     		ldr	r3, [r7, #4]
 20008 000a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 20009 000c 1846     		mov	r0, r3
 20010 000e 07F10C07 		add	r7, r7, #12
 20011 0012 BD46     		mov	sp, r7
 20012 0014 80BC     		pop	{r7}
 20013 0016 7047     		bx	lr
 20014              		.cfi_endproc
 20015              	.LFE1019:
 20017              		.section	.text._ZNK6NrfSpi6sDelayEm,"axG",%progbits,_ZNK6NrfSpi6sDelayEm,comdat
 20018              		.align	2
 20019              		.weak	_ZNK6NrfSpi6sDelayEm
 20020              		.thumb
 20021              		.thumb_func
 20023              	_ZNK6NrfSpi6sDelayEm:
 20024              	.LFB1020:
  88:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  89:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	unsigned char getRXFramePipeNumber();									///< Returns the pipe number for the next waiting RX
  90:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	size_t getRXFramePaylpoadSize(unsigned char pipeNumber);				///< Returns the size of the next wait
  91:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  92:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** protected:
  93:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	#define CSN_TIME      2
  94:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	#define CE_HIGH_TIME  10000
  95:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
  96:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline void sDelay(unsigned long a) const { while (--a!=0); }
 20025              		.loc 96 96 0
 20026              		.cfi_startproc
 20027              		@ args = 0, pretend = 0, frame = 8
 20028              		@ frame_needed = 1, uses_anonymous_args = 0
 20029              		@ link register save eliminated.
 20030 0000 80B4     		push	{r7}
 20031              	.LCFI15:
 20032              		.cfi_def_cfa_offset 4
 20033 0002 83B0     		sub	sp, sp, #12
 20034              	.LCFI16:
 20035              		.cfi_def_cfa_offset 16
 20036 0004 00AF     		add	r7, sp, #0
 20037              		.cfi_offset 7, -4
 20038              	.LCFI17:
 20039              		.cfi_def_cfa_register 7
 20040 0006 7860     		str	r0, [r7, #4]
 20041 0008 3960     		str	r1, [r7, #0]
 20042              	.L7:
 20043              		.loc 96 96 0 discriminator 1
 20044 000a 3B68     		ldr	r3, [r7, #0]
 20045 000c 03F1FF33 		add	r3, r3, #-1
 20046 0010 3B60     		str	r3, [r7, #0]
 20047 0012 3B68     		ldr	r3, [r7, #0]
 20048 0014 002B     		cmp	r3, #0
 20049 0016 0CBF     		ite	eq
 20050 0018 0023     		moveq	r3, #0
 20051 001a 0123     		movne	r3, #1
 20052 001c DBB2     		uxtb	r3, r3
 20053 001e 002B     		cmp	r3, #0
 20054 0020 F3D1     		bne	.L7
 20055              		.loc 96 96 0 is_stmt 0
 20056 0022 07F10C07 		add	r7, r7, #12
 20057 0026 BD46     		mov	sp, r7
 20058 0028 80BC     		pop	{r7}
 20059 002a 7047     		bx	lr
 20060              		.cfi_endproc
 20061              	.LFE1020:
 20063              		.section	.text._ZNK6NrfSpi8enableCSEv,"axG",%progbits,_ZNK6NrfSpi8enableCSEv,comdat
 20064              		.align	2
 20065              		.weak	_ZNK6NrfSpi8enableCSEv
 20066              		.thumb
 20067              		.thumb_func
 20069              	_ZNK6NrfSpi8enableCSEv:
 20070              	.LFB1021:
  97:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline void enableCS() const { sDelay(CSN_TIME); GPIO_WriteBit(GPIOA, GPIO_Pin_4, Bit_RESET); }		/
 20071              		.loc 96 97 0 is_stmt 1
 20072              		.cfi_startproc
 20073              		@ args = 0, pretend = 0, frame = 8
 20074              		@ frame_needed = 1, uses_anonymous_args = 0
 20075 0000 80B5     		push	{r7, lr}
 20076              	.LCFI18:
 20077              		.cfi_def_cfa_offset 8
 20078 0002 82B0     		sub	sp, sp, #8
 20079              	.LCFI19:
 20080              		.cfi_def_cfa_offset 16
 20081 0004 00AF     		add	r7, sp, #0
 20082              		.cfi_offset 14, -4
 20083              		.cfi_offset 7, -8
 20084              	.LCFI20:
 20085              		.cfi_def_cfa_register 7
 20086 0006 7860     		str	r0, [r7, #4]
 20087              		.loc 96 97 0
 20088 0008 7868     		ldr	r0, [r7, #4]
 20089 000a 4FF00201 		mov	r1, #2
 20090 000e FFF7FEFF 		bl	_ZNK6NrfSpi6sDelayEm
 20091 0012 4FF40060 		mov	r0, #2048
 20092 0016 C4F20100 		movt	r0, 16385
 20093 001a 4FF01001 		mov	r1, #16
 20094 001e 4FF00002 		mov	r2, #0
 20095 0022 FFF7FEFF 		bl	GPIO_WriteBit
 20096 0026 07F10807 		add	r7, r7, #8
 20097 002a BD46     		mov	sp, r7
 20098 002c 80BD     		pop	{r7, pc}
 20099              		.cfi_endproc
 20100              	.LFE1021:
 20102 002e 00BF     		.section	.text._ZNK6NrfSpi9disableCSEv,"axG",%progbits,_ZNK6NrfSpi9disableCSEv,comdat
 20103              		.align	2
 20104              		.weak	_ZNK6NrfSpi9disableCSEv
 20105              		.thumb
 20106              		.thumb_func
 20108              	_ZNK6NrfSpi9disableCSEv:
 20109              	.LFB1022:
  98:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline void disableCS() const { GPIO_WriteBit(GPIOA, GPIO_Pin_4, Bit_SET); }						///< Releases tr
 20110              		.loc 96 98 0
 20111              		.cfi_startproc
 20112              		@ args = 0, pretend = 0, frame = 8
 20113              		@ frame_needed = 1, uses_anonymous_args = 0
 20114 0000 80B5     		push	{r7, lr}
 20115              	.LCFI21:
 20116              		.cfi_def_cfa_offset 8
 20117 0002 82B0     		sub	sp, sp, #8
 20118              	.LCFI22:
 20119              		.cfi_def_cfa_offset 16
 20120 0004 00AF     		add	r7, sp, #0
 20121              		.cfi_offset 14, -4
 20122              		.cfi_offset 7, -8
 20123              	.LCFI23:
 20124              		.cfi_def_cfa_register 7
 20125 0006 7860     		str	r0, [r7, #4]
 20126              		.loc 96 98 0
 20127 0008 4FF40060 		mov	r0, #2048
 20128 000c C4F20100 		movt	r0, 16385
 20129 0010 4FF01001 		mov	r1, #16
 20130 0014 4FF00102 		mov	r2, #1
 20131 0018 FFF7FEFF 		bl	GPIO_WriteBit
 20132 001c 07F10807 		add	r7, r7, #8
 20133 0020 BD46     		mov	sp, r7
 20134 0022 80BD     		pop	{r7, pc}
 20135              		.cfi_endproc
 20136              	.LFE1022:
 20138              		.section	.text._ZN6NrfSpi9sharedSpiEv,"axG",%progbits,_ZN6NrfSpi9sharedSpiEv,comdat
 20139              		.align	2
 20140              		.weak	_ZN6NrfSpi9sharedSpiEv
 20141              		.thumb
 20142              		.thumb_func
 20144              	_ZN6NrfSpi9sharedSpiEv:
 20145              	.LFB1025:
  99:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline void enableCE() const { GPIO_WriteBit(GPIOC, GPIO_Pin_8, Bit_SET);  sDelay(CE_HIGH_TIME); }
 100:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline void disableCE() const { GPIO_WriteBit(GPIOC, GPIO_Pin_8, Bit_RESET); }
 101:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
 102:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	tStatus sendByte(unsigned char data);
 103:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 
 104:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** private:
 105:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.h **** 	inline DisplayNrfSharedSpi & sharedSpi() { return _sharedSpi; }
 20146              		.loc 96 105 0
 20147              		.cfi_startproc
 20148              		@ args = 0, pretend = 0, frame = 8
 20149              		@ frame_needed = 1, uses_anonymous_args = 0
 20150              		@ link register save eliminated.
 20151 0000 80B4     		push	{r7}
 20152              	.LCFI24:
 20153              		.cfi_def_cfa_offset 4
 20154 0002 83B0     		sub	sp, sp, #12
 20155              	.LCFI25:
 20156              		.cfi_def_cfa_offset 16
 20157 0004 00AF     		add	r7, sp, #0
 20158              		.cfi_offset 7, -4
 20159              	.LCFI26:
 20160              		.cfi_def_cfa_register 7
 20161 0006 7860     		str	r0, [r7, #4]
 20162              		.loc 96 105 0
 20163 0008 7B68     		ldr	r3, [r7, #4]
 20164 000a 9B68     		ldr	r3, [r3, #8]
 20165 000c 1846     		mov	r0, r3
 20166 000e 07F10C07 		add	r7, r7, #12
 20167 0012 BD46     		mov	sp, r7
 20168 0014 80BC     		pop	{r7}
 20169 0016 7047     		bx	lr
 20170              		.cfi_endproc
 20171              	.LFE1025:
 20173              		.section	.text._ZN6NrfSpiC2ER19DisplayNrfSharedSpi,"ax",%progbits
 20174              		.align	2
 20175              		.global	_ZN6NrfSpiC2ER19DisplayNrfSharedSpi
 20176              		.thumb
 20177              		.thumb_func
 20179              	_ZN6NrfSpiC2ER19DisplayNrfSharedSpi:
 20180              	.LFB1027:
   1:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** #include <phy/Frame>
   2:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** #include "nrfspi.h"
   3:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
   4:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
   5:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::NrfSpi(DisplayNrfSharedSpi & sharedSpi)
 20181              		.loc 1 5 0
 20182              		.cfi_startproc
 20183              		@ args = 0, pretend = 0, frame = 8
 20184              		@ frame_needed = 1, uses_anonymous_args = 0
 20185              		@ link register save eliminated.
 20186 0000 80B4     		push	{r7}
 20187              	.LCFI27:
 20188              		.cfi_def_cfa_offset 4
 20189 0002 83B0     		sub	sp, sp, #12
 20190              	.LCFI28:
 20191              		.cfi_def_cfa_offset 16
 20192 0004 00AF     		add	r7, sp, #0
 20193              		.cfi_offset 7, -4
 20194              	.LCFI29:
 20195              		.cfi_def_cfa_register 7
 20196 0006 7860     		str	r0, [r7, #4]
 20197 0008 3960     		str	r1, [r7, #0]
 20198              	.LBB2:
   6:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp ****  : _bInitialized(false),
   7:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp ****    _sharedSpi(sharedSpi),
   8:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp ****    _bNrfFeaturesEnabled(false)
 20199              		.loc 1 8 0
 20200 000a 7B68     		ldr	r3, [r7, #4]
 20201 000c 094A     		ldr	r2, .L13
 20202 000e 1A60     		str	r2, [r3, #0]
 20203 0010 7B68     		ldr	r3, [r7, #4]
 20204 0012 4FF00002 		mov	r2, #0
 20205 0016 1A71     		strb	r2, [r3, #4]
 20206 0018 7B68     		ldr	r3, [r7, #4]
 20207 001a 3A68     		ldr	r2, [r7, #0]
 20208 001c 9A60     		str	r2, [r3, #8]
 20209 001e 7B68     		ldr	r3, [r7, #4]
 20210 0020 4FF00002 		mov	r2, #0
 20211 0024 1A73     		strb	r2, [r3, #12]
 20212              	.LBE2:
   9:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
  10:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  11:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20213              		.loc 1 11 0
 20214 0026 7B68     		ldr	r3, [r7, #4]
 20215 0028 1846     		mov	r0, r3
 20216 002a 07F10C07 		add	r7, r7, #12
 20217 002e BD46     		mov	sp, r7
 20218 0030 80BC     		pop	{r7}
 20219 0032 7047     		bx	lr
 20220              	.L14:
 20221              		.align	2
 20222              	.L13:
 20223 0034 08000000 		.word	_ZTV6NrfSpi+8
 20224              		.cfi_endproc
 20225              	.LFE1027:
 20227              		.global	_ZN6NrfSpiC1ER19DisplayNrfSharedSpi
 20228              		.thumb_set _ZN6NrfSpiC1ER19DisplayNrfSharedSpi,_ZN6NrfSpiC2ER19DisplayNrfSharedSpi
 20229              		.section	.text._ZN6NrfSpiD2Ev,"ax",%progbits
 20230              		.align	2
 20231              		.global	_ZN6NrfSpiD2Ev
 20232              		.thumb
 20233              		.thumb_func
 20235              	_ZN6NrfSpiD2Ev:
 20236              	.LFB1030:
  12:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  13:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::~NrfSpi()
 20237              		.loc 1 13 0
 20238              		.cfi_startproc
 20239              		@ args = 0, pretend = 0, frame = 8
 20240              		@ frame_needed = 1, uses_anonymous_args = 0
 20241 0000 80B5     		push	{r7, lr}
 20242              	.LCFI30:
 20243              		.cfi_def_cfa_offset 8
 20244 0002 82B0     		sub	sp, sp, #8
 20245              	.LCFI31:
 20246              		.cfi_def_cfa_offset 16
 20247 0004 00AF     		add	r7, sp, #0
 20248              		.cfi_offset 14, -4
 20249              		.cfi_offset 7, -8
 20250              	.LCFI32:
 20251              		.cfi_def_cfa_register 7
 20252 0006 7860     		str	r0, [r7, #4]
 20253              	.LBB3:
 20254              		.loc 1 13 0
 20255 0008 7B68     		ldr	r3, [r7, #4]
 20256 000a 094A     		ldr	r2, .L18
 20257 000c 1A60     		str	r2, [r3, #0]
 20258              	.LBE3:
  14:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
  15:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  16:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20259              		.loc 1 16 0
 20260 000e 4FF00003 		mov	r3, #0
 20261 0012 03F00103 		and	r3, r3, #1
 20262 0016 DBB2     		uxtb	r3, r3
 20263 0018 002B     		cmp	r3, #0
 20264 001a 02D0     		beq	.L17
 20265              		.loc 1 16 0 is_stmt 0 discriminator 1
 20266 001c 7868     		ldr	r0, [r7, #4]
 20267 001e FFF7FEFF 		bl	_ZdlPv
 20268              	.L17:
 20269              		.loc 1 16 0 discriminator 2
 20270 0022 7B68     		ldr	r3, [r7, #4]
 20271 0024 1846     		mov	r0, r3
 20272 0026 07F10807 		add	r7, r7, #8
 20273 002a BD46     		mov	sp, r7
 20274 002c 80BD     		pop	{r7, pc}
 20275              	.L19:
 20276 002e 00BF     		.align	2
 20277              	.L18:
 20278 0030 08000000 		.word	_ZTV6NrfSpi+8
 20279              		.cfi_endproc
 20280              	.LFE1030:
 20282              		.global	_ZN6NrfSpiD1Ev
 20283              		.thumb_set _ZN6NrfSpiD1Ev,_ZN6NrfSpiD2Ev
 20284              		.section	.text._ZN6NrfSpiD0Ev,"ax",%progbits
 20285              		.align	2
 20286              		.global	_ZN6NrfSpiD0Ev
 20287              		.thumb
 20288              		.thumb_func
 20290              	_ZN6NrfSpiD0Ev:
 20291              	.LFB1032:
  13:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::~NrfSpi()
 20292              		.loc 1 13 0 is_stmt 1
 20293              		.cfi_startproc
 20294              		@ args = 0, pretend = 0, frame = 8
 20295              		@ frame_needed = 1, uses_anonymous_args = 0
 20296 0000 80B5     		push	{r7, lr}
 20297              	.LCFI33:
 20298              		.cfi_def_cfa_offset 8
 20299 0002 82B0     		sub	sp, sp, #8
 20300              	.LCFI34:
 20301              		.cfi_def_cfa_offset 16
 20302 0004 00AF     		add	r7, sp, #0
 20303              		.cfi_offset 14, -4
 20304              		.cfi_offset 7, -8
 20305              	.LCFI35:
 20306              		.cfi_def_cfa_register 7
 20307 0006 7860     		str	r0, [r7, #4]
 20308              		.loc 1 16 0
 20309 0008 7868     		ldr	r0, [r7, #4]
 20310 000a FFF7FEFF 		bl	_ZN6NrfSpiD1Ev
 20311 000e 7868     		ldr	r0, [r7, #4]
 20312 0010 FFF7FEFF 		bl	_ZdlPv
 20313 0014 7B68     		ldr	r3, [r7, #4]
 20314 0016 1846     		mov	r0, r3
 20315 0018 07F10807 		add	r7, r7, #8
 20316 001c BD46     		mov	sp, r7
 20317 001e 80BD     		pop	{r7, pc}
 20318              		.cfi_endproc
 20319              	.LFE1032:
 20321              		.section	.text._ZN6NrfSpi10initializeEv,"ax",%progbits
 20322              		.align	2
 20323              		.global	_ZN6NrfSpi10initializeEv
 20324              		.thumb
 20325              		.thumb_func
 20327              	_ZN6NrfSpi10initializeEv:
 20328              	.LFB1033:
  17:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  18:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** bool NrfSpi::initialize()
  19:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 20329              		.loc 1 19 0
 20330              		.cfi_startproc
 20331              		@ args = 0, pretend = 0, frame = 8
 20332              		@ frame_needed = 1, uses_anonymous_args = 0
 20333 0000 80B5     		push	{r7, lr}
 20334              	.LCFI36:
 20335              		.cfi_def_cfa_offset 8
 20336 0002 82B0     		sub	sp, sp, #8
 20337              	.LCFI37:
 20338              		.cfi_def_cfa_offset 16
 20339 0004 00AF     		add	r7, sp, #0
 20340              		.cfi_offset 14, -4
 20341              		.cfi_offset 7, -8
 20342              	.LCFI38:
 20343              		.cfi_def_cfa_register 7
 20344 0006 7860     		str	r0, [r7, #4]
  20:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	if (!isInitialized())
 20345              		.loc 1 20 0
 20346 0008 7868     		ldr	r0, [r7, #4]
 20347 000a FFF7FEFF 		bl	_ZNK6NrfSpi13isInitializedEv
 20348 000e 0346     		mov	r3, r0
 20349 0010 83F00103 		eor	r3, r3, #1
 20350 0014 DBB2     		uxtb	r3, r3
 20351 0016 002B     		cmp	r3, #0
 20352 0018 0DD0     		beq	.L23
  21:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
  22:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		_bInitialized = true;
 20353              		.loc 1 22 0
 20354 001a 7B68     		ldr	r3, [r7, #4]
 20355 001c 4FF00102 		mov	r2, #1
 20356 0020 1A71     		strb	r2, [r3, #4]
  23:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  24:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		sharedSpi().initialize();
 20357              		.loc 1 24 0
 20358 0022 7868     		ldr	r0, [r7, #4]
 20359 0024 FFF7FEFF 		bl	_ZN6NrfSpi9sharedSpiEv
 20360 0028 0346     		mov	r3, r0
 20361 002a 1846     		mov	r0, r3
 20362 002c FFF7FEFF 		bl	_ZN19DisplayNrfSharedSpi10initializeEv
  25:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  26:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		return true;
 20363              		.loc 1 26 0
 20364 0030 4FF00103 		mov	r3, #1
 20365 0034 01E0     		b	.L24
 20366              	.L23:
  27:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
  28:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return false;
 20367              		.loc 1 28 0
 20368 0036 4FF00003 		mov	r3, #0
 20369              	.L24:
  29:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20370              		.loc 1 29 0
 20371 003a 1846     		mov	r0, r3
 20372 003c 07F10807 		add	r7, r7, #8
 20373 0040 BD46     		mov	sp, r7
 20374 0042 80BD     		pop	{r7, pc}
 20375              		.cfi_endproc
 20376              	.LFE1033:
 20378              		.section	.text._ZN6NrfSpi6statusEv,"ax",%progbits
 20379              		.align	2
 20380              		.global	_ZN6NrfSpi6statusEv
 20381              		.thumb
 20382              		.thumb_func
 20384              	_ZN6NrfSpi6statusEv:
 20385              	.LFB1034:
  30:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  31:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::status()
  32:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 20386              		.loc 1 32 0
 20387              		.cfi_startproc
 20388              		@ args = 0, pretend = 0, frame = 8
 20389              		@ frame_needed = 1, uses_anonymous_args = 0
 20390 0000 80B5     		push	{r7, lr}
 20391              	.LCFI39:
 20392              		.cfi_def_cfa_offset 8
 20393 0002 82B0     		sub	sp, sp, #8
 20394              	.LCFI40:
 20395              		.cfi_def_cfa_offset 16
 20396 0004 00AF     		add	r7, sp, #0
 20397              		.cfi_offset 14, -4
 20398              		.cfi_offset 7, -8
 20399              	.LCFI41:
 20400              		.cfi_def_cfa_register 7
 20401 0006 7860     		str	r0, [r7, #4]
  33:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return sendCmd(NrfSpi::NOP);
 20402              		.loc 1 33 0
 20403 0008 7868     		ldr	r0, [r7, #4]
 20404 000a 4FF0FF01 		mov	r1, #255
 20405 000e FFF7FEFF 		bl	_ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE
 20406 0012 0346     		mov	r3, r0
  34:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** //	return readRegister(STATUS);
  35:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20407              		.loc 1 35 0
 20408 0014 1846     		mov	r0, r3
 20409 0016 07F10807 		add	r7, r7, #8
 20410 001a BD46     		mov	sp, r7
 20411 001c 80BD     		pop	{r7, pc}
 20412              		.cfi_endproc
 20413              	.LFE1034:
 20415 001e 00BF     		.section	.rodata
 20416              		.align	2
 20417              	.LC0:
 20418 0000 2E2E2F62 		.ascii	"../board/olimex-stm32f103-stk/board/transceiver/nrf"
 20418      6F617264 
 20418      2F6F6C69 
 20418      6D65782D 
 20418      73746D33 
 20419 0033 7370692E 		.ascii	"spi.cpp\000"
 20419      63707000 
 20420 003b 00       		.align	2
 20421              	.LC1:
 20422 003c 636D6420 		.ascii	"cmd != R_RX_PAYLOAD\000"
 20422      213D2052 
 20422      5F52585F 
 20422      5041594C 
 20422      4F414400 
 20423              		.align	2
 20424              	.LC2:
 20425 0050 636D6420 		.ascii	"cmd != W_TX_PAYLOAD\000"
 20425      213D2057 
 20425      5F54585F 
 20425      5041594C 
 20425      4F414400 
 20426              		.align	2
 20427              	.LC3:
 20428 0064 636D6420 		.ascii	"cmd != W_REGISTER\000"
 20428      213D2057 
 20428      5F524547 
 20428      49535445 
 20428      5200
 20429 0076 0000     		.align	2
 20430              	.LC4:
 20431 0078 636D6420 		.ascii	"cmd != R_REGISTER\000"
 20431      213D2052 
 20431      5F524547 
 20431      49535445 
 20431      5200
 20432 008a 0000     		.align	2
 20433              	.LC5:
 20434 008c 636D6420 		.ascii	"cmd != W_ACK_PAYLOAD\000"
 20434      213D2057 
 20434      5F41434B 
 20434      5F504159 
 20434      4C4F4144 
 20435 00a1 000000   		.align	2
 20436              	.LC6:
 20437 00a4 636D6420 		.ascii	"cmd != W_TX_PAYLOAD_NO_ACK\000"
 20437      213D2057 
 20437      5F54585F 
 20437      5041594C 
 20437      4F41445F 
 20438              		.section	.text._ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE,"ax",%progbits
 20439              		.align	2
 20440              		.global	_ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE
 20441              		.thumb
 20442              		.thumb_func
 20444              	_ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE:
 20445              	.LFB1035:
  36:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  37:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::sendCmd(eNrfSpiCmd cmd)
  38:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 20446              		.loc 1 38 0
 20447              		.cfi_startproc
 20448              		@ args = 0, pretend = 0, frame = 16
 20449              		@ frame_needed = 1, uses_anonymous_args = 0
 20450 0000 80B5     		push	{r7, lr}
 20451              	.LCFI42:
 20452              		.cfi_def_cfa_offset 8
 20453 0002 84B0     		sub	sp, sp, #16
 20454              	.LCFI43:
 20455              		.cfi_def_cfa_offset 24
 20456 0004 00AF     		add	r7, sp, #0
 20457              		.cfi_offset 14, -4
 20458              		.cfi_offset 7, -8
 20459              	.LCFI44:
 20460              		.cfi_def_cfa_register 7
 20461 0006 7860     		str	r0, [r7, #4]
 20462 0008 0B46     		mov	r3, r1
 20463 000a FB70     		strb	r3, [r7, #3]
 20464              	.LBB4:
  39:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tStatus status = 0x00;
 20465              		.loc 1 39 0
 20466 000c 4FF00003 		mov	r3, #0
 20467 0010 FB73     		strb	r3, [r7, #15]
  40:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  41:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(cmd != R_RX_PAYLOAD);			// Use readFrame() instead
 20468              		.loc 1 41 0
 20469 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20470 0014 612B     		cmp	r3, #97
 20471 0016 0FD1     		bne	.L27
 20472              		.loc 1 41 0 is_stmt 0 discriminator 1
 20473 0018 40F20000 		movw	r0, #:lower16:.LC0
 20474 001c C0F20000 		movt	r0, #:upper16:.LC0
 20475 0020 4FF02901 		mov	r1, #41
 20476 0024 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20477 0028 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20478 002c 40F20003 		movw	r3, #:lower16:.LC1
 20479 0030 C0F20003 		movt	r3, #:upper16:.LC1
 20480 0034 FFF7FEFF 		bl	__assert_func
 20481              	.L27:
  42:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(cmd != W_TX_PAYLOAD);			// Use sendFrame() instead
 20482              		.loc 1 42 0 is_stmt 1
 20483 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20484 003a A02B     		cmp	r3, #160
 20485 003c 0FD1     		bne	.L28
 20486              		.loc 1 42 0 is_stmt 0 discriminator 1
 20487 003e 40F20000 		movw	r0, #:lower16:.LC0
 20488 0042 C0F20000 		movt	r0, #:upper16:.LC0
 20489 0046 4FF02A01 		mov	r1, #42
 20490 004a 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20491 004e C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20492 0052 40F20003 		movw	r3, #:lower16:.LC2
 20493 0056 C0F20003 		movt	r3, #:upper16:.LC2
 20494 005a FFF7FEFF 		bl	__assert_func
 20495              	.L28:
  43:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(cmd != W_REGISTER);				// Use writeRegister() methods instead
 20496              		.loc 1 43 0 is_stmt 1
 20497 005e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20498 0060 012B     		cmp	r3, #1
 20499 0062 0FD1     		bne	.L29
 20500              		.loc 1 43 0 is_stmt 0 discriminator 1
 20501 0064 40F20000 		movw	r0, #:lower16:.LC0
 20502 0068 C0F20000 		movt	r0, #:upper16:.LC0
 20503 006c 4FF02B01 		mov	r1, #43
 20504 0070 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20505 0074 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20506 0078 40F20003 		movw	r3, #:lower16:.LC3
 20507 007c C0F20003 		movt	r3, #:upper16:.LC3
 20508 0080 FFF7FEFF 		bl	__assert_func
 20509              	.L29:
  44:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(cmd != R_REGISTER);				// Use readRegister() methods instead
 20510              		.loc 1 44 0 is_stmt 1
 20511 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20512 0086 002B     		cmp	r3, #0
 20513 0088 0FD1     		bne	.L30
 20514              		.loc 1 44 0 is_stmt 0 discriminator 1
 20515 008a 40F20000 		movw	r0, #:lower16:.LC0
 20516 008e C0F20000 		movt	r0, #:upper16:.LC0
 20517 0092 4FF02C01 		mov	r1, #44
 20518 0096 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20519 009a C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20520 009e 40F20003 		movw	r3, #:lower16:.LC4
 20521 00a2 C0F20003 		movt	r3, #:upper16:.LC4
 20522 00a6 FFF7FEFF 		bl	__assert_func
 20523              	.L30:
  45:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(cmd != W_ACK_PAYLOAD);
 20524              		.loc 1 45 0 is_stmt 1
 20525 00aa FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20526 00ac A12B     		cmp	r3, #161
 20527 00ae 0FD1     		bne	.L31
 20528              		.loc 1 45 0 is_stmt 0 discriminator 1
 20529 00b0 40F20000 		movw	r0, #:lower16:.LC0
 20530 00b4 C0F20000 		movt	r0, #:upper16:.LC0
 20531 00b8 4FF02D01 		mov	r1, #45
 20532 00bc 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20533 00c0 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20534 00c4 40F20003 		movw	r3, #:lower16:.LC5
 20535 00c8 C0F20003 		movt	r3, #:upper16:.LC5
 20536 00cc FFF7FEFF 		bl	__assert_func
 20537              	.L31:
  46:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(cmd != W_TX_PAYLOAD_NO_ACK);
 20538              		.loc 1 46 0 is_stmt 1
 20539 00d0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20540 00d2 B02B     		cmp	r3, #176
 20541 00d4 0FD1     		bne	.L32
 20542              		.loc 1 46 0 is_stmt 0 discriminator 1
 20543 00d6 40F20000 		movw	r0, #:lower16:.LC0
 20544 00da C0F20000 		movt	r0, #:upper16:.LC0
 20545 00de 4FF02E01 		mov	r1, #46
 20546 00e2 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20547 00e6 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
 20548 00ea 40F20003 		movw	r3, #:lower16:.LC6
 20549 00ee C0F20003 		movt	r3, #:upper16:.LC6
 20550 00f2 FFF7FEFF 		bl	__assert_func
 20551              	.L32:
  47:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  48:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	enableCS();
 20552              		.loc 1 48 0 is_stmt 1
 20553 00f6 7868     		ldr	r0, [r7, #4]
 20554 00f8 FFF7FEFF 		bl	_ZNK6NrfSpi8enableCSEv
  49:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  50:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	switch (cmd)
 20555              		.loc 1 50 0
 20556 00fc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20557 00fe A12B     		cmp	r3, #161
 20558 0100 0DDC     		bgt	.L38
 20559 0102 A02B     		cmp	r3, #160
 20560 0104 37DA     		bge	.L41
 20561 0106 502B     		cmp	r3, #80
 20562 0108 19D0     		beq	.L35
 20563 010a 502B     		cmp	r3, #80
 20564 010c 03DC     		bgt	.L39
 20565 010e 03F10003 		add	r3, r3, #0
 20566 0112 012B     		cmp	r3, #1
 20567 0114 30E0     		b	.L33
 20568              	.L39:
 20569 0116 602B     		cmp	r3, #96
 20570 0118 1ED0     		beq	.L36
 20571 011a 612B     		cmp	r3, #97
  51:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
  52:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case FLUSH_TX:
  53:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case FLUSH_RX:
  54:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case REUSE_TX_PL:
  55:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case NOP:
  56:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(cmd);
  57:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		break;
  58:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case ACTIVATE:
  59:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(cmd);
  60:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		sendByte(ACTIVATE_DATA);
  61:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		break;
  62:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case R_RX_PL_WID:
  63:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(cmd);
  64:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(NOP);
  65:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		break;
  66:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case R_RX_PAYLOAD:
  67:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case W_TX_PAYLOAD:
  68:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case W_REGISTER:
  69:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case R_REGISTER:
  70:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case W_ACK_PAYLOAD:
  71:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	case W_TX_PAYLOAD_NO_ACK:
  72:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		// To nothing
  73:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		break;
 20572              		.loc 1 73 0
 20573 011c 2CE0     		b	.L33
 20574              	.L38:
  50:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	switch (cmd)
 20575              		.loc 1 50 0
 20576 011e E32B     		cmp	r3, #227
 20577 0120 03DC     		bgt	.L40
 20578 0122 E12B     		cmp	r3, #225
 20579 0124 03DA     		bge	.L37
 20580 0126 B02B     		cmp	r3, #176
 20581              		.loc 1 73 0
 20582 0128 26E0     		b	.L33
 20583              	.L40:
  50:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	switch (cmd)
 20584              		.loc 1 50 0
 20585 012a FF2B     		cmp	r3, #255
 20586 012c 24D1     		bne	.L33
 20587              	.L37:
  56:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(cmd);
 20588              		.loc 1 56 0
 20589 012e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20590 0130 7868     		ldr	r0, [r7, #4]
 20591 0132 1946     		mov	r1, r3
 20592 0134 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20593 0138 0346     		mov	r3, r0
 20594 013a FB73     		strb	r3, [r7, #15]
  57:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		break;
 20595              		.loc 1 57 0
 20596 013c 1CE0     		b	.L33
 20597              	.L35:
  59:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(cmd);
 20598              		.loc 1 59 0
 20599 013e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20600 0140 7868     		ldr	r0, [r7, #4]
 20601 0142 1946     		mov	r1, r3
 20602 0144 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20603 0148 0346     		mov	r3, r0
 20604 014a FB73     		strb	r3, [r7, #15]
  60:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		sendByte(ACTIVATE_DATA);
 20605              		.loc 1 60 0
 20606 014c 7868     		ldr	r0, [r7, #4]
 20607 014e 4FF07301 		mov	r1, #115
 20608 0152 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
  61:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		break;
 20609              		.loc 1 61 0
 20610 0156 0FE0     		b	.L33
 20611              	.L36:
  63:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(cmd);
 20612              		.loc 1 63 0
 20613 0158 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20614 015a 7868     		ldr	r0, [r7, #4]
 20615 015c 1946     		mov	r1, r3
 20616 015e FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20617 0162 0346     		mov	r3, r0
 20618 0164 FB73     		strb	r3, [r7, #15]
  64:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		status = sendByte(NOP);
 20619              		.loc 1 64 0
 20620 0166 7868     		ldr	r0, [r7, #4]
 20621 0168 4FF0FF01 		mov	r1, #255
 20622 016c FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20623 0170 0346     		mov	r3, r0
 20624 0172 FB73     		strb	r3, [r7, #15]
  65:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		break;
 20625              		.loc 1 65 0
 20626 0174 00E0     		b	.L33
 20627              	.L41:
 20628              		.loc 1 73 0
 20629 0176 00BF     		nop
 20630              	.L33:
  74:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
  75:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  76:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	disableCS();
 20631              		.loc 1 76 0
 20632 0178 7868     		ldr	r0, [r7, #4]
 20633 017a FFF7FEFF 		bl	_ZNK6NrfSpi9disableCSEv
  77:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return status;
 20634              		.loc 1 77 0
 20635 017e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20636              	.LBE4:
  78:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20637              		.loc 1 78 0
 20638 0180 1846     		mov	r0, r3
 20639 0182 07F11007 		add	r7, r7, #16
 20640 0186 BD46     		mov	sp, r7
 20641 0188 80BD     		pop	{r7, pc}
 20642              		.cfi_endproc
 20643              	.LFE1035:
 20645 018a 00BF     		.section	.text._ZN6NrfSpi9sendFrameERK5Frame,"ax",%progbits
 20646              		.align	2
 20647              		.global	_ZN6NrfSpi9sendFrameERK5Frame
 20648              		.thumb
 20649              		.thumb_func
 20651              	_ZN6NrfSpi9sendFrameERK5Frame:
 20652              	.LFB1036:
  79:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  80:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** /**
  81:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp ****  * Sends a frame to the destination node. Use TX_ADDR register to
  82:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp ****  * set the address for the destination node.
  83:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp ****  */
  84:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::sendFrame(const Frame & frame)
  85:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 20653              		.loc 1 85 0
 20654              		.cfi_startproc
 20655              		@ args = 0, pretend = 0, frame = 16
 20656              		@ frame_needed = 1, uses_anonymous_args = 0
 20657 0000 80B5     		push	{r7, lr}
 20658              	.LCFI45:
 20659              		.cfi_def_cfa_offset 8
 20660 0002 84B0     		sub	sp, sp, #16
 20661              	.LCFI46:
 20662              		.cfi_def_cfa_offset 24
 20663 0004 00AF     		add	r7, sp, #0
 20664              		.cfi_offset 14, -4
 20665              		.cfi_offset 7, -8
 20666              	.LCFI47:
 20667              		.cfi_def_cfa_register 7
 20668 0006 7860     		str	r0, [r7, #4]
 20669 0008 3960     		str	r1, [r7, #0]
 20670              	.LBB5:
  86:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tStatus status = 0x00;
 20671              		.loc 1 86 0
 20672 000a 4FF00003 		mov	r3, #0
 20673 000e FB72     		strb	r3, [r7, #11]
  87:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  88:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	enableCS();
 20674              		.loc 1 88 0
 20675 0010 7868     		ldr	r0, [r7, #4]
 20676 0012 FFF7FEFF 		bl	_ZNK6NrfSpi8enableCSEv
  89:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  90:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	status = sendByte(W_TX_PAYLOAD);
 20677              		.loc 1 90 0
 20678 0016 7868     		ldr	r0, [r7, #4]
 20679 0018 4FF0A001 		mov	r1, #160
 20680 001c FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20681 0020 0346     		mov	r3, r0
 20682 0022 FB72     		strb	r3, [r7, #11]
 20683              	.LBB6:
  91:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  92:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < frame.payloadSize(); i++)
 20684              		.loc 1 92 0
 20685 0024 4FF00003 		mov	r3, #0
 20686 0028 FB60     		str	r3, [r7, #12]
 20687 002a 0DE0     		b	.L43
 20688              	.L44:
  93:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
  94:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		sendByte(frame[i]);
 20689              		.loc 1 94 0 discriminator 2
 20690 002c 3868     		ldr	r0, [r7, #0]
 20691 002e F968     		ldr	r1, [r7, #12]
 20692 0030 FFF7FEFF 		bl	_ZNK5FrameixEj
 20693 0034 0346     		mov	r3, r0
 20694 0036 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 20695 0038 7868     		ldr	r0, [r7, #4]
 20696 003a 1946     		mov	r1, r3
 20697 003c FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
  92:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < frame.payloadSize(); i++)
 20698              		.loc 1 92 0 discriminator 2
 20699 0040 FB68     		ldr	r3, [r7, #12]
 20700 0042 03F10103 		add	r3, r3, #1
 20701 0046 FB60     		str	r3, [r7, #12]
 20702              	.L43:
  92:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < frame.payloadSize(); i++)
 20703              		.loc 1 92 0 is_stmt 0 discriminator 1
 20704 0048 3868     		ldr	r0, [r7, #0]
 20705 004a FFF7FEFF 		bl	_ZNK5Frame11payloadSizeEv
 20706 004e 0246     		mov	r2, r0
 20707 0050 FB68     		ldr	r3, [r7, #12]
 20708 0052 9A42     		cmp	r2, r3
 20709 0054 94BF     		ite	ls
 20710 0056 0023     		movls	r3, #0
 20711 0058 0123     		movhi	r3, #1
 20712 005a DBB2     		uxtb	r3, r3
 20713 005c 002B     		cmp	r3, #0
 20714 005e E5D1     		bne	.L44
 20715              	.LBE6:
  95:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
  96:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
  97:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	disableCS();
 20716              		.loc 1 97 0 is_stmt 1
 20717 0060 7868     		ldr	r0, [r7, #4]
 20718 0062 FFF7FEFF 		bl	_ZNK6NrfSpi9disableCSEv
  98:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return status;
 20719              		.loc 1 98 0
 20720 0066 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20721              	.LBE5:
  99:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20722              		.loc 1 99 0
 20723 0068 1846     		mov	r0, r3
 20724 006a 07F11007 		add	r7, r7, #16
 20725 006e BD46     		mov	sp, r7
 20726 0070 80BD     		pop	{r7, pc}
 20727              		.cfi_endproc
 20728              	.LFE1036:
 20730 0072 00BF     		.section	.rodata
 20731 00bf 00       		.align	2
 20732              	.LC7:
 20733 00c0 6672616D 		.ascii	"frame.payloadSize()\000"
 20733      652E7061 
 20733      796C6F61 
 20733      6453697A 
 20733      65282900 
 20734              		.section	.text._ZN6NrfSpi9readFrameER5Frame,"ax",%progbits
 20735              		.align	2
 20736              		.global	_ZN6NrfSpi9readFrameER5Frame
 20737              		.thumb
 20738              		.thumb_func
 20740              	_ZN6NrfSpi9readFrameER5Frame:
 20741              	.LFB1037:
 100:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 101:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::readFrame(Frame & frame)
 102:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 20742              		.loc 1 102 0
 20743              		.cfi_startproc
 20744              		@ args = 0, pretend = 0, frame = 16
 20745              		@ frame_needed = 1, uses_anonymous_args = 0
 20746 0000 90B5     		push	{r4, r7, lr}
 20747              	.LCFI48:
 20748              		.cfi_def_cfa_offset 12
 20749 0002 85B0     		sub	sp, sp, #20
 20750              	.LCFI49:
 20751              		.cfi_def_cfa_offset 32
 20752 0004 00AF     		add	r7, sp, #0
 20753              		.cfi_offset 14, -4
 20754              		.cfi_offset 7, -8
 20755              		.cfi_offset 4, -12
 20756              	.LCFI50:
 20757              		.cfi_def_cfa_register 7
 20758 0006 7860     		str	r0, [r7, #4]
 20759 0008 3960     		str	r1, [r7, #0]
 20760              	.LBB7:
 103:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tStatus status = 0x00;
 20761              		.loc 1 103 0
 20762 000a 4FF00003 		mov	r3, #0
 20763 000e FB72     		strb	r3, [r7, #11]
 104:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 105:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(frame.payloadSize());		// Please specify how many bytes you want to read
 20764              		.loc 1 105 0
 20765 0010 3868     		ldr	r0, [r7, #0]
 20766 0012 FFF7FEFF 		bl	_ZNK5Frame11payloadSizeEv
 20767 0016 0346     		mov	r3, r0
 20768 0018 002B     		cmp	r3, #0
 20769 001a 0FD1     		bne	.L46
 20770              		.loc 1 105 0 is_stmt 0 discriminator 1
 20771 001c 40F20000 		movw	r0, #:lower16:.LC0
 20772 0020 C0F20000 		movt	r0, #:upper16:.LC0
 20773 0024 4FF06901 		mov	r1, #105
 20774 0028 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi9readFrameER5FrameE19__PRETTY_FUNCTION__
 20775 002c C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi9readFrameER5FrameE19__PRETTY_FUNCTION__
 20776 0030 40F20003 		movw	r3, #:lower16:.LC7
 20777 0034 C0F20003 		movt	r3, #:upper16:.LC7
 20778 0038 FFF7FEFF 		bl	__assert_func
 20779              	.L46:
 106:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 107:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	enableCS();
 20780              		.loc 1 107 0 is_stmt 1
 20781 003c 7868     		ldr	r0, [r7, #4]
 20782 003e FFF7FEFF 		bl	_ZNK6NrfSpi8enableCSEv
 108:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 109:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	status = sendByte(R_RX_PAYLOAD);
 20783              		.loc 1 109 0
 20784 0042 7868     		ldr	r0, [r7, #4]
 20785 0044 4FF06101 		mov	r1, #97
 20786 0048 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20787 004c 0346     		mov	r3, r0
 20788 004e FB72     		strb	r3, [r7, #11]
 20789              	.LBB8:
 110:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 111:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < frame.payloadSize(); i++)
 20790              		.loc 1 111 0
 20791 0050 4FF00003 		mov	r3, #0
 20792 0054 FB60     		str	r3, [r7, #12]
 20793 0056 0FE0     		b	.L47
 20794              	.L48:
 112:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
 113:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		frame[i] = sendByte(NOP);
 20795              		.loc 1 113 0 discriminator 2
 20796 0058 3868     		ldr	r0, [r7, #0]
 20797 005a F968     		ldr	r1, [r7, #12]
 20798 005c FFF7FEFF 		bl	_ZN5FrameixEj
 20799 0060 0446     		mov	r4, r0
 20800 0062 7868     		ldr	r0, [r7, #4]
 20801 0064 4FF0FF01 		mov	r1, #255
 20802 0068 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20803 006c 0346     		mov	r3, r0
 20804 006e 2370     		strb	r3, [r4, #0]
 111:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < frame.payloadSize(); i++)
 20805              		.loc 1 111 0 discriminator 2
 20806 0070 FB68     		ldr	r3, [r7, #12]
 20807 0072 03F10103 		add	r3, r3, #1
 20808 0076 FB60     		str	r3, [r7, #12]
 20809              	.L47:
 111:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < frame.payloadSize(); i++)
 20810              		.loc 1 111 0 is_stmt 0 discriminator 1
 20811 0078 3868     		ldr	r0, [r7, #0]
 20812 007a FFF7FEFF 		bl	_ZNK5Frame11payloadSizeEv
 20813 007e 0246     		mov	r2, r0
 20814 0080 FB68     		ldr	r3, [r7, #12]
 20815 0082 9A42     		cmp	r2, r3
 20816 0084 94BF     		ite	ls
 20817 0086 0023     		movls	r3, #0
 20818 0088 0123     		movhi	r3, #1
 20819 008a DBB2     		uxtb	r3, r3
 20820 008c 002B     		cmp	r3, #0
 20821 008e E3D1     		bne	.L48
 20822              	.LBE8:
 114:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
 115:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 116:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	disableCS();
 20823              		.loc 1 116 0 is_stmt 1
 20824 0090 7868     		ldr	r0, [r7, #4]
 20825 0092 FFF7FEFF 		bl	_ZNK6NrfSpi9disableCSEv
 117:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return status;
 20826              		.loc 1 117 0
 20827 0096 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20828              	.LBE7:
 118:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20829              		.loc 1 118 0
 20830 0098 1846     		mov	r0, r3
 20831 009a 07F11407 		add	r7, r7, #20
 20832 009e BD46     		mov	sp, r7
 20833 00a0 90BD     		pop	{r4, r7, pc}
 20834              		.cfi_endproc
 20835              	.LFE1037:
 20837 00a2 00BF     		.section	.rodata
 20838              		.align	2
 20839              	.LC8:
 20840 00d4 21287265 		.ascii	"!(reg == TX_ADDR || reg == RX_ADDR_P0 || reg == RX_"
 20840      67203D3D 
 20840      2054585F 
 20840      41444452 
 20840      207C7C20 
 20841 0107 41444452 		.ascii	"ADDR_P1)\000"
 20841      5F503129 
 20841      00
 20842              		.section	.text._ZN6NrfSpi12readRegisterENS_12eNrfRegisterE,"ax",%progbits
 20843              		.align	2
 20844              		.global	_ZN6NrfSpi12readRegisterENS_12eNrfRegisterE
 20845              		.thumb
 20846              		.thumb_func
 20848              	_ZN6NrfSpi12readRegisterENS_12eNrfRegisterE:
 20849              	.LFB1038:
 119:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 120:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tRegister NrfSpi::readRegister(eNrfRegister reg)
 121:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 20850              		.loc 1 121 0
 20851              		.cfi_startproc
 20852              		@ args = 0, pretend = 0, frame = 16
 20853              		@ frame_needed = 1, uses_anonymous_args = 0
 20854 0000 80B5     		push	{r7, lr}
 20855              	.LCFI51:
 20856              		.cfi_def_cfa_offset 8
 20857 0002 84B0     		sub	sp, sp, #16
 20858              	.LCFI52:
 20859              		.cfi_def_cfa_offset 24
 20860 0004 00AF     		add	r7, sp, #0
 20861              		.cfi_offset 14, -4
 20862              		.cfi_offset 7, -8
 20863              	.LCFI53:
 20864              		.cfi_def_cfa_register 7
 20865 0006 7860     		str	r0, [r7, #4]
 20866 0008 0B46     		mov	r3, r1
 20867 000a FB70     		strb	r3, [r7, #3]
 20868              	.LBB9:
 122:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tRegister value;
 123:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 124:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	// All but not these registers are allowed
 125:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(!(reg == TX_ADDR || reg == RX_ADDR_P0 || reg == RX_ADDR_P1));
 20869              		.loc 1 125 0
 20870 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20871 000e 102B     		cmp	r3, #16
 20872 0010 05D0     		beq	.L50
 20873              		.loc 1 125 0 is_stmt 0 discriminator 2
 20874 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20875 0014 0A2B     		cmp	r3, #10
 20876 0016 02D0     		beq	.L50
 20877              		.loc 1 125 0 discriminator 1
 20878 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20879 001a 0B2B     		cmp	r3, #11
 20880 001c 0FD1     		bne	.L51
 20881              	.L50:
 20882 001e 40F20000 		movw	r0, #:lower16:.LC0
 20883 0022 C0F20000 		movt	r0, #:upper16:.LC0
 20884 0026 4FF07D01 		mov	r1, #125
 20885 002a 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi12readRegisterENS_12eNrfRegisterEE19__PRETTY_FUNCTION__
 20886 002e C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi12readRegisterENS_12eNrfRegisterEE19__PRETTY_FUNCTION__
 20887 0032 40F20003 		movw	r3, #:lower16:.LC8
 20888 0036 C0F20003 		movt	r3, #:upper16:.LC8
 20889 003a FFF7FEFF 		bl	__assert_func
 20890              	.L51:
 126:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 127:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	enableCS();
 20891              		.loc 1 127 0 is_stmt 1
 20892 003e 7868     		ldr	r0, [r7, #4]
 20893 0040 FFF7FEFF 		bl	_ZNK6NrfSpi8enableCSEv
 128:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 129:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	sendByte((R_REGISTER << 5) | reg);
 20894              		.loc 1 129 0
 20895 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20896 0046 7868     		ldr	r0, [r7, #4]
 20897 0048 1946     		mov	r1, r3
 20898 004a FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 130:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	value = sendByte(NOP);
 20899              		.loc 1 130 0
 20900 004e 7868     		ldr	r0, [r7, #4]
 20901 0050 4FF0FF01 		mov	r1, #255
 20902 0054 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20903 0058 0346     		mov	r3, r0
 20904 005a FB73     		strb	r3, [r7, #15]
 131:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 132:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	disableCS();
 20905              		.loc 1 132 0
 20906 005c 7868     		ldr	r0, [r7, #4]
 20907 005e FFF7FEFF 		bl	_ZNK6NrfSpi9disableCSEv
 133:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return value;
 20908              		.loc 1 133 0
 20909 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20910              	.LBE9:
 134:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 20911              		.loc 1 134 0
 20912 0064 1846     		mov	r0, r3
 20913 0066 07F11007 		add	r7, r7, #16
 20914 006a BD46     		mov	sp, r7
 20915 006c 80BD     		pop	{r7, pc}
 20916              		.cfi_endproc
 20917              	.LFE1038:
 20919 006e 00BF     		.section	.rodata
 20920              		.align	2
 20921              	.LC9:
 20922 0110 72656720 		.ascii	"reg == TX_ADDR || reg == RX_ADDR_P0 || reg == RX_AD"
 20922      3D3D2054 
 20922      585F4144 
 20922      4452207C 
 20922      7C207265 
 20923 0143 44525F50 		.ascii	"DR_P1\000"
 20923      3100
 20924              		.section	.text._ZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EE,"ax",%progbits
 20925              		.align	2
 20926              		.global	_ZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EE
 20927              		.thumb
 20928              		.thumb_func
 20930              	_ZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EE:
 20931              	.LFB1039:
 135:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 136:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::readRegister(eNrfRegister reg, tAddress & address)
 137:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 20932              		.loc 1 137 0
 20933              		.cfi_startproc
 20934              		@ args = 0, pretend = 0, frame = 24
 20935              		@ frame_needed = 1, uses_anonymous_args = 0
 20936 0000 90B5     		push	{r4, r7, lr}
 20937              	.LCFI54:
 20938              		.cfi_def_cfa_offset 12
 20939 0002 87B0     		sub	sp, sp, #28
 20940              	.LCFI55:
 20941              		.cfi_def_cfa_offset 40
 20942 0004 00AF     		add	r7, sp, #0
 20943              		.cfi_offset 14, -4
 20944              		.cfi_offset 7, -8
 20945              		.cfi_offset 4, -12
 20946              	.LCFI56:
 20947              		.cfi_def_cfa_register 7
 20948 0006 F860     		str	r0, [r7, #12]
 20949 0008 0B46     		mov	r3, r1
 20950 000a 7A60     		str	r2, [r7, #4]
 20951 000c FB72     		strb	r3, [r7, #11]
 20952              	.LBB10:
 138:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tStatus status = 0x00;
 20953              		.loc 1 138 0
 20954 000e 4FF00003 		mov	r3, #0
 20955 0012 FB74     		strb	r3, [r7, #19]
 139:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 140:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	// Only these registers are allowed
 141:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(reg == TX_ADDR || reg == RX_ADDR_P0 || reg == RX_ADDR_P1);
 20956              		.loc 1 141 0
 20957 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20958 0016 102B     		cmp	r3, #16
 20959 0018 15D0     		beq	.L53
 20960              		.loc 1 141 0 is_stmt 0 discriminator 1
 20961 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20962 001c 0A2B     		cmp	r3, #10
 20963 001e 12D0     		beq	.L53
 20964              		.loc 1 141 0 discriminator 2
 20965 0020 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20966 0022 0B2B     		cmp	r3, #11
 20967 0024 0FD0     		beq	.L53
 20968              		.loc 1 141 0 discriminator 3
 20969 0026 40F20000 		movw	r0, #:lower16:.LC0
 20970 002a C0F20000 		movt	r0, #:upper16:.LC0
 20971 002e 4FF08D01 		mov	r1, #141
 20972 0032 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EEE19__PRETTY_FUNCTION
 20973 0036 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EEE19__PRETTY_FUNCTION
 20974 003a 40F20003 		movw	r3, #:lower16:.LC9
 20975 003e C0F20003 		movt	r3, #:upper16:.LC9
 20976 0042 FFF7FEFF 		bl	__assert_func
 20977              	.L53:
 142:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 143:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	enableCS();
 20978              		.loc 1 143 0 is_stmt 1
 20979 0046 F868     		ldr	r0, [r7, #12]
 20980 0048 FFF7FEFF 		bl	_ZNK6NrfSpi8enableCSEv
 144:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 145:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	status = sendByte((R_REGISTER << 5) | reg);
 20981              		.loc 1 145 0
 20982 004c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20983 004e F868     		ldr	r0, [r7, #12]
 20984 0050 1946     		mov	r1, r3
 20985 0052 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 20986 0056 0346     		mov	r3, r0
 20987 0058 FB74     		strb	r3, [r7, #19]
 20988              	.LBB11:
 146:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < address.addressSize(); i++)
 20989              		.loc 1 146 0
 20990 005a 4FF00003 		mov	r3, #0
 20991 005e 7B61     		str	r3, [r7, #20]
 20992 0060 0FE0     		b	.L54
 20993              	.L55:
 147:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
 148:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		address[i] = sendByte(NOP);
 20994              		.loc 1 148 0 discriminator 2
 20995 0062 7868     		ldr	r0, [r7, #4]
 20996 0064 7969     		ldr	r1, [r7, #20]
 20997 0066 FFF7FEFF 		bl	_ZN7AddressILj4EEixEj
 20998 006a 0446     		mov	r4, r0
 20999 006c F868     		ldr	r0, [r7, #12]
 21000 006e 4FF0FF01 		mov	r1, #255
 21001 0072 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 21002 0076 0346     		mov	r3, r0
 21003 0078 2370     		strb	r3, [r4, #0]
 146:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < address.addressSize(); i++)
 21004              		.loc 1 146 0 discriminator 2
 21005 007a 7B69     		ldr	r3, [r7, #20]
 21006 007c 03F10103 		add	r3, r3, #1
 21007 0080 7B61     		str	r3, [r7, #20]
 21008              	.L54:
 146:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < address.addressSize(); i++)
 21009              		.loc 1 146 0 is_stmt 0 discriminator 1
 21010 0082 FFF7FEFF 		bl	_ZN7AddressILj4EE11addressSizeEv
 21011 0086 0246     		mov	r2, r0
 21012 0088 7B69     		ldr	r3, [r7, #20]
 21013 008a 9A42     		cmp	r2, r3
 21014 008c 94BF     		ite	ls
 21015 008e 0023     		movls	r3, #0
 21016 0090 0123     		movhi	r3, #1
 21017 0092 DBB2     		uxtb	r3, r3
 21018 0094 002B     		cmp	r3, #0
 21019 0096 E4D1     		bne	.L55
 21020              	.LBE11:
 149:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
 150:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 151:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	disableCS();
 21021              		.loc 1 151 0 is_stmt 1
 21022 0098 F868     		ldr	r0, [r7, #12]
 21023 009a FFF7FEFF 		bl	_ZNK6NrfSpi9disableCSEv
 152:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return status;
 21024              		.loc 1 152 0
 21025 009e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 21026              	.LBE10:
 153:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 21027              		.loc 1 153 0
 21028 00a0 1846     		mov	r0, r3
 21029 00a2 07F11C07 		add	r7, r7, #28
 21030 00a6 BD46     		mov	sp, r7
 21031 00a8 90BD     		pop	{r4, r7, pc}
 21032              		.cfi_endproc
 21033              	.LFE1039:
 21035 00aa 00BF     		.section	.text._ZN6NrfSpi13writeRegisterENS_12eNrfRegisterEh,"ax",%progbits
 21036              		.align	2
 21037              		.global	_ZN6NrfSpi13writeRegisterENS_12eNrfRegisterEh
 21038              		.thumb
 21039              		.thumb_func
 21041              	_ZN6NrfSpi13writeRegisterENS_12eNrfRegisterEh:
 21042              	.LFB1040:
 154:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 155:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::writeRegister(eNrfRegister reg, tRegister value)
 156:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 21043              		.loc 1 156 0
 21044              		.cfi_startproc
 21045              		@ args = 0, pretend = 0, frame = 16
 21046              		@ frame_needed = 1, uses_anonymous_args = 0
 21047 0000 80B5     		push	{r7, lr}
 21048              	.LCFI57:
 21049              		.cfi_def_cfa_offset 8
 21050 0002 84B0     		sub	sp, sp, #16
 21051              	.LCFI58:
 21052              		.cfi_def_cfa_offset 24
 21053 0004 00AF     		add	r7, sp, #0
 21054              		.cfi_offset 14, -4
 21055              		.cfi_offset 7, -8
 21056              	.LCFI59:
 21057              		.cfi_def_cfa_register 7
 21058 0006 7860     		str	r0, [r7, #4]
 21059 0008 1346     		mov	r3, r2
 21060 000a 0A46     		mov	r2, r1
 21061 000c FA70     		strb	r2, [r7, #3]
 21062 000e BB70     		strb	r3, [r7, #2]
 21063              	.LBB12:
 157:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tStatus status = 0x00;
 21064              		.loc 1 157 0
 21065 0010 4FF00003 		mov	r3, #0
 21066 0014 FB73     		strb	r3, [r7, #15]
 158:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 159:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	// All but not these registers are allowed
 160:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(!(reg == TX_ADDR || reg == RX_ADDR_P0 || reg == RX_ADDR_P1));
 21067              		.loc 1 160 0
 21068 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21069 0018 102B     		cmp	r3, #16
 21070 001a 05D0     		beq	.L57
 21071              		.loc 1 160 0 is_stmt 0 discriminator 2
 21072 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21073 001e 0A2B     		cmp	r3, #10
 21074 0020 02D0     		beq	.L57
 21075              		.loc 1 160 0 discriminator 1
 21076 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21077 0024 0B2B     		cmp	r3, #11
 21078 0026 0FD1     		bne	.L58
 21079              	.L57:
 21080 0028 40F20000 		movw	r0, #:lower16:.LC0
 21081 002c C0F20000 		movt	r0, #:upper16:.LC0
 21082 0030 4FF0A001 		mov	r1, #160
 21083 0034 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterEhE19__PRETTY_FUNCTION__
 21084 0038 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterEhE19__PRETTY_FUNCTION__
 21085 003c 40F20003 		movw	r3, #:lower16:.LC8
 21086 0040 C0F20003 		movt	r3, #:upper16:.LC8
 21087 0044 FFF7FEFF 		bl	__assert_func
 21088              	.L58:
 161:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 162:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	enableCS();
 21089              		.loc 1 162 0 is_stmt 1
 21090 0048 7868     		ldr	r0, [r7, #4]
 21091 004a FFF7FEFF 		bl	_ZNK6NrfSpi8enableCSEv
 163:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 164:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	status = sendByte((W_REGISTER << 5) | reg);
 21092              		.loc 1 164 0
 21093 004e FB78     		ldrb	r3, [r7, #3]
 21094 0050 43F02003 		orr	r3, r3, #32
 21095 0054 DBB2     		uxtb	r3, r3
 21096 0056 7868     		ldr	r0, [r7, #4]
 21097 0058 1946     		mov	r1, r3
 21098 005a FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 21099 005e 0346     		mov	r3, r0
 21100 0060 FB73     		strb	r3, [r7, #15]
 165:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	sendByte(value);
 21101              		.loc 1 165 0
 21102 0062 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 21103 0064 7868     		ldr	r0, [r7, #4]
 21104 0066 1946     		mov	r1, r3
 21105 0068 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 166:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 167:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	disableCS();
 21106              		.loc 1 167 0
 21107 006c 7868     		ldr	r0, [r7, #4]
 21108 006e FFF7FEFF 		bl	_ZNK6NrfSpi9disableCSEv
 168:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return status;
 21109              		.loc 1 168 0
 21110 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21111              	.LBE12:
 169:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 21112              		.loc 1 169 0
 21113 0074 1846     		mov	r0, r3
 21114 0076 07F11007 		add	r7, r7, #16
 21115 007a BD46     		mov	sp, r7
 21116 007c 80BD     		pop	{r7, pc}
 21117              		.cfi_endproc
 21118              	.LFE1040:
 21120 007e 00BF     		.section	.text._ZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EE,"ax",%progbits
 21121              		.align	2
 21122              		.global	_ZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EE
 21123              		.thumb
 21124              		.thumb_func
 21126              	_ZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EE:
 21127              	.LFB1041:
 170:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 171:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::writeRegister(eNrfRegister reg, const tAddress & address)
 172:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 21128              		.loc 1 172 0
 21129              		.cfi_startproc
 21130              		@ args = 0, pretend = 0, frame = 24
 21131              		@ frame_needed = 1, uses_anonymous_args = 0
 21132 0000 80B5     		push	{r7, lr}
 21133              	.LCFI60:
 21134              		.cfi_def_cfa_offset 8
 21135 0002 86B0     		sub	sp, sp, #24
 21136              	.LCFI61:
 21137              		.cfi_def_cfa_offset 32
 21138 0004 00AF     		add	r7, sp, #0
 21139              		.cfi_offset 14, -4
 21140              		.cfi_offset 7, -8
 21141              	.LCFI62:
 21142              		.cfi_def_cfa_register 7
 21143 0006 F860     		str	r0, [r7, #12]
 21144 0008 0B46     		mov	r3, r1
 21145 000a 7A60     		str	r2, [r7, #4]
 21146 000c FB72     		strb	r3, [r7, #11]
 21147              	.LBB13:
 173:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tStatus status = 0x00;
 21148              		.loc 1 173 0
 21149 000e 4FF00003 		mov	r3, #0
 21150 0012 FB74     		strb	r3, [r7, #19]
 174:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 175:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	// Only these registers are allowed
 176:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(reg == TX_ADDR || reg == RX_ADDR_P0 || reg == RX_ADDR_P1);
 21151              		.loc 1 176 0
 21152 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 21153 0016 102B     		cmp	r3, #16
 21154 0018 15D0     		beq	.L60
 21155              		.loc 1 176 0 is_stmt 0 discriminator 1
 21156 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 21157 001c 0A2B     		cmp	r3, #10
 21158 001e 12D0     		beq	.L60
 21159              		.loc 1 176 0 discriminator 2
 21160 0020 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 21161 0022 0B2B     		cmp	r3, #11
 21162 0024 0FD0     		beq	.L60
 21163              		.loc 1 176 0 discriminator 3
 21164 0026 40F20000 		movw	r0, #:lower16:.LC0
 21165 002a C0F20000 		movt	r0, #:upper16:.LC0
 21166 002e 4FF0B001 		mov	r1, #176
 21167 0032 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EEE19__PRETTY_FUNCTI
 21168 0036 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EEE19__PRETTY_FUNCTI
 21169 003a 40F20003 		movw	r3, #:lower16:.LC9
 21170 003e C0F20003 		movt	r3, #:upper16:.LC9
 21171 0042 FFF7FEFF 		bl	__assert_func
 21172              	.L60:
 177:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 178:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	enableCS();
 21173              		.loc 1 178 0 is_stmt 1
 21174 0046 F868     		ldr	r0, [r7, #12]
 21175 0048 FFF7FEFF 		bl	_ZNK6NrfSpi8enableCSEv
 179:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 180:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	status = sendByte((W_REGISTER << 5) | reg);
 21176              		.loc 1 180 0
 21177 004c FB7A     		ldrb	r3, [r7, #11]
 21178 004e 43F02003 		orr	r3, r3, #32
 21179 0052 DBB2     		uxtb	r3, r3
 21180 0054 F868     		ldr	r0, [r7, #12]
 21181 0056 1946     		mov	r1, r3
 21182 0058 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 21183 005c 0346     		mov	r3, r0
 21184 005e FB74     		strb	r3, [r7, #19]
 21185              	.LBB14:
 181:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < address.addressSize(); i++)
 21186              		.loc 1 181 0
 21187 0060 4FF00003 		mov	r3, #0
 21188 0064 7B61     		str	r3, [r7, #20]
 21189 0066 0DE0     		b	.L61
 21190              	.L62:
 182:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
 183:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		sendByte(address[i]);
 21191              		.loc 1 183 0 discriminator 2
 21192 0068 7868     		ldr	r0, [r7, #4]
 21193 006a 7969     		ldr	r1, [r7, #20]
 21194 006c FFF7FEFF 		bl	_ZNK7AddressILj4EEixEj
 21195 0070 0346     		mov	r3, r0
 21196 0072 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21197 0074 F868     		ldr	r0, [r7, #12]
 21198 0076 1946     		mov	r1, r3
 21199 0078 FFF7FEFF 		bl	_ZN6NrfSpi8sendByteEh
 181:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < address.addressSize(); i++)
 21200              		.loc 1 181 0 discriminator 2
 21201 007c 7B69     		ldr	r3, [r7, #20]
 21202 007e 03F10103 		add	r3, r3, #1
 21203 0082 7B61     		str	r3, [r7, #20]
 21204              	.L61:
 181:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	for (size_t i = 0; i < address.addressSize(); i++)
 21205              		.loc 1 181 0 is_stmt 0 discriminator 1
 21206 0084 FFF7FEFF 		bl	_ZN7AddressILj4EE11addressSizeEv
 21207 0088 0246     		mov	r2, r0
 21208 008a 7B69     		ldr	r3, [r7, #20]
 21209 008c 9A42     		cmp	r2, r3
 21210 008e 94BF     		ite	ls
 21211 0090 0023     		movls	r3, #0
 21212 0092 0123     		movhi	r3, #1
 21213 0094 DBB2     		uxtb	r3, r3
 21214 0096 002B     		cmp	r3, #0
 21215 0098 E6D1     		bne	.L62
 21216              	.LBE14:
 184:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
 185:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 186:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	disableCS();
 21217              		.loc 1 186 0 is_stmt 1
 21218 009a F868     		ldr	r0, [r7, #12]
 21219 009c FFF7FEFF 		bl	_ZNK6NrfSpi9disableCSEv
 187:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return status;
 21220              		.loc 1 187 0
 21221 00a0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 21222              	.LBE13:
 188:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 21223              		.loc 1 188 0
 21224 00a2 1846     		mov	r0, r3
 21225 00a4 07F11807 		add	r7, r7, #24
 21226 00a8 BD46     		mov	sp, r7
 21227 00aa 80BD     		pop	{r7, pc}
 21228              		.cfi_endproc
 21229              	.LFE1041:
 21231              		.section	.text._ZN6NrfSpi16activateFeaturesEb,"ax",%progbits
 21232              		.align	2
 21233              		.global	_ZN6NrfSpi16activateFeaturesEb
 21234              		.thumb
 21235              		.thumb_func
 21237              	_ZN6NrfSpi16activateFeaturesEb:
 21238              	.LFB1042:
 189:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 190:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** bool NrfSpi::activateFeatures(bool enable)
 191:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 21239              		.loc 1 191 0
 21240              		.cfi_startproc
 21241              		@ args = 0, pretend = 0, frame = 8
 21242              		@ frame_needed = 1, uses_anonymous_args = 0
 21243 0000 80B5     		push	{r7, lr}
 21244              	.LCFI63:
 21245              		.cfi_def_cfa_offset 8
 21246 0002 82B0     		sub	sp, sp, #8
 21247              	.LCFI64:
 21248              		.cfi_def_cfa_offset 16
 21249 0004 00AF     		add	r7, sp, #0
 21250              		.cfi_offset 14, -4
 21251              		.cfi_offset 7, -8
 21252              	.LCFI65:
 21253              		.cfi_def_cfa_register 7
 21254 0006 7860     		str	r0, [r7, #4]
 21255 0008 0B46     		mov	r3, r1
 21256 000a FB70     		strb	r3, [r7, #3]
 192:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	// Check if not already in this state
 193:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	if (_bNrfFeaturesEnabled != enable)
 21257              		.loc 1 193 0
 21258 000c 7B68     		ldr	r3, [r7, #4]
 21259 000e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21260 0010 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21261 0012 9A42     		cmp	r2, r3
 21262 0014 0AD0     		beq	.L64
 194:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
 195:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		sendCmd(NrfSpi::ACTIVATE);
 21263              		.loc 1 195 0
 21264 0016 7868     		ldr	r0, [r7, #4]
 21265 0018 4FF05001 		mov	r1, #80
 21266 001c FFF7FEFF 		bl	_ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE
 196:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		_bNrfFeaturesEnabled = enable;
 21267              		.loc 1 196 0
 21268 0020 7B68     		ldr	r3, [r7, #4]
 21269 0022 FA78     		ldrb	r2, [r7, #3]
 21270 0024 1A73     		strb	r2, [r3, #12]
 197:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		return true;
 21271              		.loc 1 197 0
 21272 0026 4FF00103 		mov	r3, #1
 21273 002a 01E0     		b	.L65
 21274              	.L64:
 198:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
 199:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return false;
 21275              		.loc 1 199 0
 21276 002c 4FF00003 		mov	r3, #0
 21277              	.L65:
 200:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 21278              		.loc 1 200 0
 21279 0030 1846     		mov	r0, r3
 21280 0032 07F10807 		add	r7, r7, #8
 21281 0036 BD46     		mov	sp, r7
 21282 0038 80BD     		pop	{r7, pc}
 21283              		.cfi_endproc
 21284              	.LFE1042:
 21286 003a 00BF     		.section	.rodata
 21287 0149 000000   		.align	2
 21288              	.LC10:
 21289 014c 66616C73 		.ascii	"false\000"
 21289      6500
 21290              		.section	.text._ZN6NrfSpi20getRXFramePipeNumberEv,"ax",%progbits
 21291              		.align	2
 21292              		.global	_ZN6NrfSpi20getRXFramePipeNumberEv
 21293              		.thumb
 21294              		.thumb_func
 21296              	_ZN6NrfSpi20getRXFramePipeNumberEv:
 21297              	.LFB1043:
 201:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 202:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** unsigned char NrfSpi::getRXFramePipeNumber()
 203:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 21298              		.loc 1 203 0
 21299              		.cfi_startproc
 21300              		@ args = 0, pretend = 0, frame = 16
 21301              		@ frame_needed = 1, uses_anonymous_args = 0
 21302 0000 80B5     		push	{r7, lr}
 21303              	.LCFI66:
 21304              		.cfi_def_cfa_offset 8
 21305 0002 84B0     		sub	sp, sp, #16
 21306              	.LCFI67:
 21307              		.cfi_def_cfa_offset 24
 21308 0004 00AF     		add	r7, sp, #0
 21309              		.cfi_offset 14, -4
 21310              		.cfi_offset 7, -8
 21311              	.LCFI68:
 21312              		.cfi_def_cfa_register 7
 21313 0006 7860     		str	r0, [r7, #4]
 21314              	.LBB15:
 204:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	unsigned char pipeNumber;
 205:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	tStatus status = NrfSpi::status();
 21315              		.loc 1 205 0
 21316 0008 7868     		ldr	r0, [r7, #4]
 21317 000a FFF7FEFF 		bl	_ZN6NrfSpi6statusEv
 21318 000e 0346     		mov	r3, r0
 21319 0010 FB73     		strb	r3, [r7, #15]
 206:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 207:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	// Extract RX_P_NO field
 208:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	pipeNumber = ((status >> 1) & 0x07);
 21320              		.loc 1 208 0
 21321 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21322 0014 4FEA6303 		asr	r3, r3, #1
 21323 0018 DBB2     		uxtb	r3, r3
 21324 001a 03F00703 		and	r3, r3, #7
 21325 001e BB73     		strb	r3, [r7, #14]
 209:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 210:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	if (!(pipeNumber == 0x07 || pipeNumber == 0x06))
 21326              		.loc 1 210 0
 21327 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 21328 0022 072B     		cmp	r3, #7
 21329 0024 08D0     		beq	.L67
 21330              		.loc 1 210 0 is_stmt 0 discriminator 1
 21331 0026 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 21332 0028 062B     		cmp	r3, #6
 21333 002a 05D0     		beq	.L67
 211:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
 212:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		return pipeNumber;
 21334              		.loc 1 212 0 is_stmt 1
 21335 002c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 21336              	.LBE15:
 213:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
 214:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(false);	// Call this method only when you are sure there is a packet available
 215:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return 0xFF;
 216:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 21337              		.loc 1 216 0
 21338 002e 1846     		mov	r0, r3
 21339 0030 07F11007 		add	r7, r7, #16
 21340 0034 BD46     		mov	sp, r7
 21341 0036 80BD     		pop	{r7, pc}
 21342              	.L67:
 21343              	.LBB16:
 214:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(false);	// Call this method only when you are sure there is a packet available
 21344              		.loc 1 214 0
 21345 0038 40F20000 		movw	r0, #:lower16:.LC0
 21346 003c C0F20000 		movt	r0, #:upper16:.LC0
 21347 0040 4FF0D601 		mov	r1, #214
 21348 0044 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi20getRXFramePipeNumberEvE19__PRETTY_FUNCTION__
 21349 0048 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi20getRXFramePipeNumberEvE19__PRETTY_FUNCTION__
 21350 004c 40F20003 		movw	r3, #:lower16:.LC10
 21351 0050 C0F20003 		movt	r3, #:upper16:.LC10
 21352 0054 FFF7FEFF 		bl	__assert_func
 21353              	.LBE16:
 21354              		.cfi_endproc
 21355              	.LFE1043:
 21357              		.section	.rodata
 21358 0152 0000     		.align	2
 21359              	.LC11:
 21360 0154 70697065 		.ascii	"pipeNumber >= 0 && pipeNumber < 6\000"
 21360      4E756D62 
 21360      6572203E 
 21360      3D203020 
 21360      26262070 
 21361              		.section	.text._ZN6NrfSpi22getRXFramePaylpoadSizeEh,"ax",%progbits
 21362              		.align	2
 21363              		.global	_ZN6NrfSpi22getRXFramePaylpoadSizeEh
 21364              		.thumb
 21365              		.thumb_func
 21367              	_ZN6NrfSpi22getRXFramePaylpoadSizeEh:
 21368              	.LFB1044:
 217:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 218:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** size_t NrfSpi::getRXFramePaylpoadSize(unsigned char pipeNumber)
 219:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 21369              		.loc 1 219 0
 21370              		.cfi_startproc
 21371              		@ args = 0, pretend = 0, frame = 8
 21372              		@ frame_needed = 1, uses_anonymous_args = 0
 21373 0000 80B5     		push	{r7, lr}
 21374              	.LCFI69:
 21375              		.cfi_def_cfa_offset 8
 21376 0002 82B0     		sub	sp, sp, #8
 21377              	.LCFI70:
 21378              		.cfi_def_cfa_offset 16
 21379 0004 00AF     		add	r7, sp, #0
 21380              		.cfi_offset 14, -4
 21381              		.cfi_offset 7, -8
 21382              	.LCFI71:
 21383              		.cfi_def_cfa_register 7
 21384 0006 7860     		str	r0, [r7, #4]
 21385 0008 0B46     		mov	r3, r1
 21386 000a FB70     		strb	r3, [r7, #3]
 21387              	.LBB17:
 220:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	assert(pipeNumber >= 0 && pipeNumber < 6);
 21388              		.loc 1 220 0
 21389 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21390 000e 052B     		cmp	r3, #5
 21391 0010 0FD9     		bls	.L69
 21392              		.loc 1 220 0 is_stmt 0 discriminator 1
 21393 0012 40F20000 		movw	r0, #:lower16:.LC0
 21394 0016 C0F20000 		movt	r0, #:upper16:.LC0
 21395 001a 4FF0DC01 		mov	r1, #220
 21396 001e 40F20002 		movw	r2, #:lower16:_ZZN6NrfSpi22getRXFramePaylpoadSizeEhE19__PRETTY_FUNCTION__
 21397 0022 C0F20002 		movt	r2, #:upper16:_ZZN6NrfSpi22getRXFramePaylpoadSizeEhE19__PRETTY_FUNCTION__
 21398 0026 40F20003 		movw	r3, #:lower16:.LC11
 21399 002a C0F20003 		movt	r3, #:upper16:.LC11
 21400 002e FFF7FEFF 		bl	__assert_func
 21401              	.L69:
 221:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 222:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	if (!featuresEnabled())
 21402              		.loc 1 222 0 is_stmt 1
 21403 0032 7868     		ldr	r0, [r7, #4]
 21404 0034 FFF7FEFF 		bl	_ZNK6NrfSpi15featuresEnabledEv
 21405 0038 0346     		mov	r3, r0
 21406 003a 83F00103 		eor	r3, r3, #1
 21407 003e DBB2     		uxtb	r3, r3
 21408 0040 002B     		cmp	r3, #0
 21409 0042 09D0     		beq	.L70
 223:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
 224:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		return readRegister((NrfSpi::eNrfRegister)(RX_PW_P0 + pipeNumber));
 21410              		.loc 1 224 0
 21411 0044 FB78     		ldrb	r3, [r7, #3]
 21412 0046 03F11103 		add	r3, r3, #17
 21413 004a DBB2     		uxtb	r3, r3
 21414 004c 7868     		ldr	r0, [r7, #4]
 21415 004e 1946     		mov	r1, r3
 21416 0050 FFF7FEFF 		bl	_ZN6NrfSpi12readRegisterENS_12eNrfRegisterE
 21417 0054 0346     		mov	r3, r0
 21418 0056 05E0     		b	.L71
 21419              	.L70:
 225:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
 226:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	else
 227:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	{
 228:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		// DPL. Read value of next frame in RX FIFO by reading the R_RX_PL_WID register
 229:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 		return sendCmd(R_RX_PL_WID);
 21420              		.loc 1 229 0
 21421 0058 7868     		ldr	r0, [r7, #4]
 21422 005a 4FF06001 		mov	r1, #96
 21423 005e FFF7FEFF 		bl	_ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE
 21424 0062 0346     		mov	r3, r0
 21425              	.L71:
 21426              	.LBE17:
 230:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	}
 231:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 21427              		.loc 1 231 0
 21428 0064 1846     		mov	r0, r3
 21429 0066 07F10807 		add	r7, r7, #8
 21430 006a BD46     		mov	sp, r7
 21431 006c 80BD     		pop	{r7, pc}
 21432              		.cfi_endproc
 21433              	.LFE1044:
 21435 006e 00BF     		.section	.text._ZN6NrfSpi8sendByteEh,"ax",%progbits
 21436              		.align	2
 21437              		.global	_ZN6NrfSpi8sendByteEh
 21438              		.thumb
 21439              		.thumb_func
 21441              	_ZN6NrfSpi8sendByteEh:
 21442              	.LFB1045:
 232:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 
 233:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** NrfSpi::tStatus NrfSpi::sendByte(unsigned char data)
 234:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** {
 21443              		.loc 1 234 0
 21444              		.cfi_startproc
 21445              		@ args = 0, pretend = 0, frame = 8
 21446              		@ frame_needed = 1, uses_anonymous_args = 0
 21447 0000 80B5     		push	{r7, lr}
 21448              	.LCFI72:
 21449              		.cfi_def_cfa_offset 8
 21450 0002 82B0     		sub	sp, sp, #8
 21451              	.LCFI73:
 21452              		.cfi_def_cfa_offset 16
 21453 0004 00AF     		add	r7, sp, #0
 21454              		.cfi_offset 14, -4
 21455              		.cfi_offset 7, -8
 21456              	.LCFI74:
 21457              		.cfi_def_cfa_register 7
 21458 0006 7860     		str	r0, [r7, #4]
 21459 0008 0B46     		mov	r3, r1
 21460 000a FB70     		strb	r3, [r7, #3]
 235:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** 	return sharedSpi().sendByte(data);
 21461              		.loc 1 235 0
 21462 000c 7868     		ldr	r0, [r7, #4]
 21463 000e FFF7FEFF 		bl	_ZN6NrfSpi9sharedSpiEv
 21464 0012 0246     		mov	r2, r0
 21465 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21466 0016 1046     		mov	r0, r2
 21467 0018 1946     		mov	r1, r3
 21468 001a FFF7FEFF 		bl	_ZN19DisplayNrfSharedSpi8sendByteEh
 21469 001e 0346     		mov	r3, r0
 236:../board/olimex-stm32f103-stk/board/transceiver/nrfspi.cpp **** }
 21470              		.loc 1 236 0
 21471 0020 1846     		mov	r0, r3
 21472 0022 07F10807 		add	r7, r7, #8
 21473 0026 BD46     		mov	sp, r7
 21474 0028 80BD     		pop	{r7, pc}
 21475              		.cfi_endproc
 21476              	.LFE1045:
 21478 002a 00BF     		.section	.text._ZN7AddressILj4EE11addressSizeEv,"axG",%progbits,_ZN7AddressILj4EE11addressSizeEv,c
 21479              		.align	2
 21480              		.weak	_ZN7AddressILj4EE11addressSizeEv
 21481              		.thumb
 21482              		.thumb_func
 21484              	_ZN7AddressILj4EE11addressSizeEv:
 21485              	.LFB1047:
   1:/home/desem/workspace/desenet/utils/address.hpp **** #pragma once
   2:/home/desem/workspace/desenet/utils/address.hpp **** #include <cstring>
   3:/home/desem/workspace/desenet/utils/address.hpp **** #include <stdint.h>
   4:/home/desem/workspace/desenet/utils/address.hpp **** #include <algorithm>
   5:/home/desem/workspace/desenet/utils/address.hpp **** #include <string>
   6:/home/desem/workspace/desenet/utils/address.hpp **** #include <assert.h>
   7:/home/desem/workspace/desenet/utils/address.hpp **** #include <cstdio>
   8:/home/desem/workspace/desenet/utils/address.hpp **** #include <trace/Trace>
   9:/home/desem/workspace/desenet/utils/address.hpp **** 
  10:/home/desem/workspace/desenet/utils/address.hpp **** /**
  11:/home/desem/workspace/desenet/utils/address.hpp ****  * @defgroup utils Utils
  12:/home/desem/workspace/desenet/utils/address.hpp ****  * @brief Utility classes.
  13:/home/desem/workspace/desenet/utils/address.hpp ****  * @{
  14:/home/desem/workspace/desenet/utils/address.hpp ****  *
  15:/home/desem/workspace/desenet/utils/address.hpp ****  * @section utils_cd Class Diagram
  16:/home/desem/workspace/desenet/utils/address.hpp ****  * The Utils package contains classes that do not fit into other packages, so the classes inside th
  17:/home/desem/workspace/desenet/utils/address.hpp ****  * coupled that hard.
  18:/home/desem/workspace/desenet/utils/address.hpp ****  * @image html Utils.png
  19:/home/desem/workspace/desenet/utils/address.hpp ****  * The template class Address is a storage for any kind of address or id with a fixed size.
  20:/home/desem/workspace/desenet/utils/address.hpp ****  *
  21:/home/desem/workspace/desenet/utils/address.hpp ****  * The ObjectPool template offers a simple way to get objects of ANY kind from a pre-allocated poo
  22:/home/desem/workspace/desenet/utils/address.hpp ****  *
  23:/home/desem/workspace/desenet/utils/address.hpp ****  * The MonochromeDisplayPainter class enables transparent painting into monochrome displays, whatev
  24:/home/desem/workspace/desenet/utils/address.hpp ****  * drawing methods the display offers. This is handy to decoupe high-level code from the low-level 
  25:/home/desem/workspace/desenet/utils/address.hpp ****  * and offers the reuse of existing code.
  26:/home/desem/workspace/desenet/utils/address.hpp ****  */
  27:/home/desem/workspace/desenet/utils/address.hpp **** 
  28:/home/desem/workspace/desenet/utils/address.hpp **** 
  29:/home/desem/workspace/desenet/utils/address.hpp **** /**
  30:/home/desem/workspace/desenet/utils/address.hpp ****  * @brief Template class to use as a base for PHY/MAC/Network addresses or any other multi-byte ide
  31:/home/desem/workspace/desenet/utils/address.hpp ****  */
  32:/home/desem/workspace/desenet/utils/address.hpp **** template<size_t size>
  33:/home/desem/workspace/desenet/utils/address.hpp **** class Address
  34:/home/desem/workspace/desenet/utils/address.hpp **** {
  35:/home/desem/workspace/desenet/utils/address.hpp **** public:
  36:/home/desem/workspace/desenet/utils/address.hpp **** 	/**
  37:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @brief Creates an invalid (all bytes to 0 is considered invalid) address.
  38:/home/desem/workspace/desenet/utils/address.hpp **** 	 */
  39:/home/desem/workspace/desenet/utils/address.hpp **** 	explicit Address()
  40:/home/desem/workspace/desenet/utils/address.hpp **** 	{
  41:/home/desem/workspace/desenet/utils/address.hpp **** 		// Initialize address to default value of all bytes equal 0.
  42:/home/desem/workspace/desenet/utils/address.hpp **** 		memset( _address , 0 , size );
  43:/home/desem/workspace/desenet/utils/address.hpp **** 	}
  44:/home/desem/workspace/desenet/utils/address.hpp **** 
  45:/home/desem/workspace/desenet/utils/address.hpp **** 	/**
  46:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @brief Creates an address with the data taken from the memory region pointed by from.
  47:/home/desem/workspace/desenet/utils/address.hpp **** 	 *
  48:/home/desem/workspace/desenet/utils/address.hpp **** 	 * Note that it is your responsibility to ensure that there are enough bytes for the address size.
  49:/home/desem/workspace/desenet/utils/address.hpp **** 	 *
  50:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @param from Pointer to the memory region holding the address.
  51:/home/desem/workspace/desenet/utils/address.hpp **** 	 */
  52:/home/desem/workspace/desenet/utils/address.hpp **** 	explicit Address( const uint8_t * const from )
  53:/home/desem/workspace/desenet/utils/address.hpp **** 	{
  54:/home/desem/workspace/desenet/utils/address.hpp **** 		copyFrom( from );
  55:/home/desem/workspace/desenet/utils/address.hpp **** 	}
  56:/home/desem/workspace/desenet/utils/address.hpp **** 
  57:/home/desem/workspace/desenet/utils/address.hpp **** 	/**
  58:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @brief Destructor, actually it does nothing @ all.
  59:/home/desem/workspace/desenet/utils/address.hpp **** 	 */
  60:/home/desem/workspace/desenet/utils/address.hpp **** 	virtual ~Address()
  61:/home/desem/workspace/desenet/utils/address.hpp **** 	{}
  62:/home/desem/workspace/desenet/utils/address.hpp **** 
  63:/home/desem/workspace/desenet/utils/address.hpp **** 	/**
  64:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @brief Returns true if the address is considered as valid (An address is invalid if all bytes a
  65:/home/desem/workspace/desenet/utils/address.hpp **** 	 *
  66:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @return True if the address is valid, false otherwise.
  67:/home/desem/workspace/desenet/utils/address.hpp **** 	 */
  68:/home/desem/workspace/desenet/utils/address.hpp **** 	bool isValid() const
  69:/home/desem/workspace/desenet/utils/address.hpp **** 	{
  70:/home/desem/workspace/desenet/utils/address.hpp **** 		// An address is considered valid, if it is not the equal the default address.
  71:/home/desem/workspace/desenet/utils/address.hpp **** 		for ( size_t i = 0 ; i < size ; ++i )
  72:/home/desem/workspace/desenet/utils/address.hpp **** 			if ( _address[i] )
  73:/home/desem/workspace/desenet/utils/address.hpp **** 				return true;
  74:/home/desem/workspace/desenet/utils/address.hpp **** 
  75:/home/desem/workspace/desenet/utils/address.hpp **** 		return false;
  76:/home/desem/workspace/desenet/utils/address.hpp **** 	}
  77:/home/desem/workspace/desenet/utils/address.hpp **** 
  78:/home/desem/workspace/desenet/utils/address.hpp **** 	/**
  79:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @brief Returns actual with of address in byte (default ist 4).
  80:/home/desem/workspace/desenet/utils/address.hpp **** 	 *
  81:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @return Address size in byte
  82:/home/desem/workspace/desenet/utils/address.hpp **** 	 */
  83:/home/desem/workspace/desenet/utils/address.hpp **** 	static size_t addressSize()
 21486              		.loc 7 83 0
 21487              		.cfi_startproc
 21488              		@ args = 0, pretend = 0, frame = 0
 21489              		@ frame_needed = 1, uses_anonymous_args = 0
 21490              		@ link register save eliminated.
 21491 0000 80B4     		push	{r7}
 21492              	.LCFI75:
 21493              		.cfi_def_cfa_offset 4
 21494 0002 00AF     		add	r7, sp, #0
 21495              		.cfi_offset 7, -4
 21496              	.LCFI76:
 21497              		.cfi_def_cfa_register 7
  84:/home/desem/workspace/desenet/utils/address.hpp **** 	{
  85:/home/desem/workspace/desenet/utils/address.hpp **** 		return size;
 21498              		.loc 7 85 0
 21499 0004 4FF00403 		mov	r3, #4
  86:/home/desem/workspace/desenet/utils/address.hpp **** 	}
 21500              		.loc 7 86 0
 21501 0008 1846     		mov	r0, r3
 21502 000a BD46     		mov	sp, r7
 21503 000c 80BC     		pop	{r7}
 21504 000e 7047     		bx	lr
 21505              		.cfi_endproc
 21506              	.LFE1047:
 21508              		.section	.rodata
 21509 0176 0000     		.align	2
 21510              	.LC12:
 21511 0178 2F686F6D 		.ascii	"/home/desem/workspace/desenet/utils/address.hpp\000"
 21511      652F6465 
 21511      73656D2F 
 21511      776F726B 
 21511      73706163 
 21512              		.align	2
 21513              	.LC13:
 21514 01a8 696E6465 		.ascii	"index < size\000"
 21514      78203C20 
 21514      73697A65 
 21514      00
 21515 01b5 000000   		.section	.text._ZN7AddressILj4EEixEj,"axG",%progbits,_ZN7AddressILj4EEixEj,comdat
 21516              		.align	2
 21517              		.weak	_ZN7AddressILj4EEixEj
 21518              		.thumb
 21519              		.thumb_func
 21521              	_ZN7AddressILj4EEixEj:
 21522              	.LFB1048:
  87:/home/desem/workspace/desenet/utils/address.hpp **** 
  88:/home/desem/workspace/desenet/utils/address.hpp **** 	/**
  89:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @brief Index operator to access the different bytes of the address.
  90:/home/desem/workspace/desenet/utils/address.hpp **** 	 *
  91:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @param index 	Index of the byte to get the reference to.
  92:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @return 			Reference to the byte of the address at the given index.
  93:/home/desem/workspace/desenet/utils/address.hpp **** 	 */
  94:/home/desem/workspace/desenet/utils/address.hpp **** 	uint8_t & operator[]( size_t index )
 21523              		.loc 7 94 0
 21524              		.cfi_startproc
 21525              		@ args = 0, pretend = 0, frame = 16
 21526              		@ frame_needed = 1, uses_anonymous_args = 0
 21527 0000 80B5     		push	{r7, lr}
 21528              	.LCFI77:
 21529              		.cfi_def_cfa_offset 8
 21530 0002 84B0     		sub	sp, sp, #16
 21531              	.LCFI78:
 21532              		.cfi_def_cfa_offset 24
 21533 0004 00AF     		add	r7, sp, #0
 21534              		.cfi_offset 14, -4
 21535              		.cfi_offset 7, -8
 21536              	.LCFI79:
 21537              		.cfi_def_cfa_register 7
 21538 0006 7860     		str	r0, [r7, #4]
 21539 0008 3960     		str	r1, [r7, #0]
 21540              	.LBB18:
  95:/home/desem/workspace/desenet/utils/address.hpp **** 	{
  96:/home/desem/workspace/desenet/utils/address.hpp **** 		assert( index < size );
 21541              		.loc 7 96 0
 21542 000a 3B68     		ldr	r3, [r7, #0]
 21543 000c 032B     		cmp	r3, #3
 21544 000e 0FD9     		bls	.L75
 21545              		.loc 7 96 0 is_stmt 0 discriminator 1
 21546 0010 40F20000 		movw	r0, #:lower16:.LC12
 21547 0014 C0F20000 		movt	r0, #:upper16:.LC12
 21548 0018 4FF06001 		mov	r1, #96
 21549 001c 40F20002 		movw	r2, #:lower16:_ZZN7AddressILj4EEixEjE19__PRETTY_FUNCTION__
 21550 0020 C0F20002 		movt	r2, #:upper16:_ZZN7AddressILj4EEixEjE19__PRETTY_FUNCTION__
 21551 0024 40F20003 		movw	r3, #:lower16:.LC13
 21552 0028 C0F20003 		movt	r3, #:upper16:.LC13
 21553 002c FFF7FEFF 		bl	__assert_func
 21554              	.L75:
  97:/home/desem/workspace/desenet/utils/address.hpp **** 		return _address[std::min( index , size - 1 )];
 21555              		.loc 7 97 0 is_stmt 1
 21556 0030 4FF00303 		mov	r3, #3
 21557 0034 FB60     		str	r3, [r7, #12]
 21558 0036 3A46     		mov	r2, r7
 21559 0038 07F10C03 		add	r3, r7, #12
 21560 003c 1046     		mov	r0, r2
 21561 003e 1946     		mov	r1, r3
 21562 0040 FFF7FEFF 		bl	_ZSt3minIjERKT_S2_S2_
 21563 0044 0346     		mov	r3, r0
 21564 0046 1B68     		ldr	r3, [r3, #0]
 21565 0048 7A68     		ldr	r2, [r7, #4]
 21566 004a D318     		adds	r3, r2, r3
 21567 004c 03F10403 		add	r3, r3, #4
 21568              	.LBE18:
  98:/home/desem/workspace/desenet/utils/address.hpp **** 	}
 21569              		.loc 7 98 0
 21570 0050 1846     		mov	r0, r3
 21571 0052 07F11007 		add	r7, r7, #16
 21572 0056 BD46     		mov	sp, r7
 21573 0058 80BD     		pop	{r7, pc}
 21574              		.cfi_endproc
 21575              	.LFE1048:
 21577 005a 00BF     		.section	.text._ZNK7AddressILj4EEixEj,"axG",%progbits,_ZNK7AddressILj4EEixEj,comdat
 21578              		.align	2
 21579              		.weak	_ZNK7AddressILj4EEixEj
 21580              		.thumb
 21581              		.thumb_func
 21583              	_ZNK7AddressILj4EEixEj:
 21584              	.LFB1049:
  99:/home/desem/workspace/desenet/utils/address.hpp **** 
 100:/home/desem/workspace/desenet/utils/address.hpp **** 	/**
 101:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @brief Index operator to access the different bytes of the address as constants.
 102:/home/desem/workspace/desenet/utils/address.hpp **** 	 *
 103:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @param index 	Index of the byte to get the reference to.
 104:/home/desem/workspace/desenet/utils/address.hpp **** 	 * @return 			Read only reference to the byte of the address at the given index.
 105:/home/desem/workspace/desenet/utils/address.hpp **** 	 */
 106:/home/desem/workspace/desenet/utils/address.hpp **** 	const uint8_t & operator[]( size_t index ) const
 21585              		.loc 7 106 0
 21586              		.cfi_startproc
 21587              		@ args = 0, pretend = 0, frame = 16
 21588              		@ frame_needed = 1, uses_anonymous_args = 0
 21589 0000 80B5     		push	{r7, lr}
 21590              	.LCFI80:
 21591              		.cfi_def_cfa_offset 8
 21592 0002 84B0     		sub	sp, sp, #16
 21593              	.LCFI81:
 21594              		.cfi_def_cfa_offset 24
 21595 0004 00AF     		add	r7, sp, #0
 21596              		.cfi_offset 14, -4
 21597              		.cfi_offset 7, -8
 21598              	.LCFI82:
 21599              		.cfi_def_cfa_register 7
 21600 0006 7860     		str	r0, [r7, #4]
 21601 0008 3960     		str	r1, [r7, #0]
 21602              	.LBB19:
 107:/home/desem/workspace/desenet/utils/address.hpp **** 	{
 108:/home/desem/workspace/desenet/utils/address.hpp **** 		assert( index < size );
 21603              		.loc 7 108 0
 21604 000a 3B68     		ldr	r3, [r7, #0]
 21605 000c 032B     		cmp	r3, #3
 21606 000e 0FD9     		bls	.L77
 21607              		.loc 7 108 0 is_stmt 0 discriminator 1
 21608 0010 40F20000 		movw	r0, #:lower16:.LC12
 21609 0014 C0F20000 		movt	r0, #:upper16:.LC12
 21610 0018 4FF06C01 		mov	r1, #108
 21611 001c 40F20002 		movw	r2, #:lower16:_ZZNK7AddressILj4EEixEjE19__PRETTY_FUNCTION__
 21612 0020 C0F20002 		movt	r2, #:upper16:_ZZNK7AddressILj4EEixEjE19__PRETTY_FUNCTION__
 21613 0024 40F20003 		movw	r3, #:lower16:.LC13
 21614 0028 C0F20003 		movt	r3, #:upper16:.LC13
 21615 002c FFF7FEFF 		bl	__assert_func
 21616              	.L77:
 109:/home/desem/workspace/desenet/utils/address.hpp **** 		return _address[std::min( index , size - 1 )];
 21617              		.loc 7 109 0 is_stmt 1
 21618 0030 4FF00303 		mov	r3, #3
 21619 0034 FB60     		str	r3, [r7, #12]
 21620 0036 3A46     		mov	r2, r7
 21621 0038 07F10C03 		add	r3, r7, #12
 21622 003c 1046     		mov	r0, r2
 21623 003e 1946     		mov	r1, r3
 21624 0040 FFF7FEFF 		bl	_ZSt3minIjERKT_S2_S2_
 21625 0044 0346     		mov	r3, r0
 21626 0046 1B68     		ldr	r3, [r3, #0]
 21627 0048 7A68     		ldr	r2, [r7, #4]
 21628 004a D318     		adds	r3, r2, r3
 21629 004c 03F10403 		add	r3, r3, #4
 21630              	.LBE19:
 110:/home/desem/workspace/desenet/utils/address.hpp **** 	}
 21631              		.loc 7 110 0
 21632 0050 1846     		mov	r0, r3
 21633 0052 07F11007 		add	r7, r7, #16
 21634 0056 BD46     		mov	sp, r7
 21635 0058 80BD     		pop	{r7, pc}
 21636              		.cfi_endproc
 21637              	.LFE1049:
 21639 005a 00BF     		.section	.text._ZSt3minIjERKT_S2_S2_,"axG",%progbits,_ZSt3minIjERKT_S2_S2_,comdat
 21640              		.align	2
 21641              		.weak	_ZSt3minIjERKT_S2_S2_
 21642              		.thumb
 21643              		.thumb_func
 21645              	_ZSt3minIjERKT_S2_S2_:
 21646              	.LFB1052:
   1:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
   3:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
   4:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // Free Software Foundation, Inc.
   5:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** //
   6:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   7:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   8:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   9:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
  10:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // any later version.
  11:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  12:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  13:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // GNU General Public License for more details.
  16:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  17:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  18:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  19:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  20:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  21:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  22:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  25:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  26:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** /*
  27:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  *
  28:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * Copyright (c) 1994
  29:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * Hewlett-Packard Company
  30:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  *
  31:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  32:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  33:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  34:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  35:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  36:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  37:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  38:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  *
  39:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  *
  40:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  41:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  42:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  *
  43:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  44:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  45:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  46:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  47:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  48:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  49:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  50:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  */
  51:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  52:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** /** @file stl_algobase.h
  53:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  54:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  *  You should not attempt to use it directly.
  55:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****  */
  56:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  57:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  58:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  59:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  60:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/c++config.h>
  61:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <cstddef>
  62:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/functexcept.h>
  63:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  64:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <ext/type_traits.h>
  65:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  66:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  67:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  68:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  69:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  70:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/concept_check.h>
  71:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <debug/debug.h>
  72:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  73:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  74:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE(std)
  75:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  76:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  77:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  78:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  79:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   template<bool _BoolType>
  80:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     struct __iter_swap
  81:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     {
  82:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  83:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****         static void
  84:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  85:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****         {
  86:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  87:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****             _ValueType1;
  88:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  89:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  90:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  91:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	}
  92:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     };
  93:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
  94:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   template<>
  95:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     struct __iter_swap<true>
  96:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     {
  97:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  98:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****         static void 
  99:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 100:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****         {
 101:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****           swap(*__a, *__b);
 102:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****         }
 103:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     };
 104:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
 105:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   /**
 106:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 107:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 108:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @param  a  An iterator.
 109:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @param  b  Another iterator.
 110:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @return   Nothing.
 111:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *
 112:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 113:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  iterators themselves.
 114:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   */
 115:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     inline void
 117:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     {
 119:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	_ValueType1;
 121:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 122:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	_ValueType2;
 123:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
 124:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       // concept requirements
 125:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 127:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 128:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 129:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 130:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 				  _ValueType2>)
 131:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 132:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 				  _ValueType1>)
 133:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
 134:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 135:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	_ReferenceType1;
 136:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 137:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	_ReferenceType2;
 138:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 139:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 140:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 141:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 142:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     }
 143:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
 144:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   /**
 145:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 146:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 147:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @param  first1  A forward iterator.
 148:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @param  last1   A forward iterator.
 149:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @param  first2  A forward iterator.
 150:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 151:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *
 152:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 153:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 154:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  The ranges must not overlap.
 155:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   */
 156:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 157:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     _ForwardIterator2
 158:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 159:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 160:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     {
 161:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       // concept requirements
 162:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 163:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 164:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 165:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 166:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 167:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
 168:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 169:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 170:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       return __first2;
 171:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     }
 172:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 
 173:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   /**
 174:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 175:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 176:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @param  a  A thing of arbitrary type.
 177:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @param  b  Another thing of arbitrary type.
 178:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 179:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *
 180:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 181:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 182:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****    *  preprocessor macro.
 183:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   */
 184:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****   template<typename _Tp>
 185:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     inline const _Tp&
 186:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 21647              		.loc 34 186 0
 21648              		.cfi_startproc
 21649              		@ args = 0, pretend = 0, frame = 8
 21650              		@ frame_needed = 1, uses_anonymous_args = 0
 21651              		@ link register save eliminated.
 21652 0000 80B4     		push	{r7}
 21653              	.LCFI83:
 21654              		.cfi_def_cfa_offset 4
 21655 0002 83B0     		sub	sp, sp, #12
 21656              	.LCFI84:
 21657              		.cfi_def_cfa_offset 16
 21658 0004 00AF     		add	r7, sp, #0
 21659              		.cfi_offset 7, -4
 21660              	.LCFI85:
 21661              		.cfi_def_cfa_register 7
 21662 0006 7860     		str	r0, [r7, #4]
 21663 0008 3960     		str	r1, [r7, #0]
 187:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     {
 188:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       // concept requirements
 189:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 190:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 191:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       if (__b < __a)
 21664              		.loc 34 191 0
 21665 000a 3B68     		ldr	r3, [r7, #0]
 21666 000c 1A68     		ldr	r2, [r3, #0]
 21667 000e 7B68     		ldr	r3, [r7, #4]
 21668 0010 1B68     		ldr	r3, [r3, #0]
 21669 0012 9A42     		cmp	r2, r3
 21670 0014 01D2     		bcs	.L79
 192:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h **** 	return __b;
 21671              		.loc 34 192 0
 21672 0016 3B68     		ldr	r3, [r7, #0]
 21673 0018 00E0     		b	.L80
 21674              	.L79:
 193:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****       return __a;
 21675              		.loc 34 193 0
 21676 001a 7B68     		ldr	r3, [r7, #4]
 21677              	.L80:
 194:/opt/toolchains/arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/c++/4.5.2/bits/stl_algobase.h ****     }
 21678              		.loc 34 194 0
 21679 001c 1846     		mov	r0, r3
 21680 001e 07F10C07 		add	r7, r7, #12
 21681 0022 BD46     		mov	sp, r7
 21682 0024 80BC     		pop	{r7}
 21683 0026 7047     		bx	lr
 21684              		.cfi_endproc
 21685              	.LFE1052:
 21687              		.global	_ZTV6NrfSpi
 21688              		.section	.rodata._ZTV6NrfSpi,"a",%progbits
 21689              		.align	3
 21692              	_ZTV6NrfSpi:
 21693 0000 00000000 		.word	0
 21694 0004 00000000 		.word	0
 21695 0008 00000000 		.word	_ZN6NrfSpiD1Ev
 21696 000c 00000000 		.word	_ZN6NrfSpiD0Ev
 21697              		.section	.rodata._ZZN6NrfSpi22getRXFramePaylpoadSizeEhE19__PRETTY_FUNCTION__,"a",%progbits
 21698              		.align	2
 21701              	_ZZN6NrfSpi22getRXFramePaylpoadSizeEhE19__PRETTY_FUNCTION__:
 21702 0000 73697A65 		.ascii	"size_t NrfSpi::getRXFramePaylpoadSize(unsigned char"
 21702      5F74204E 
 21702      72665370 
 21702      693A3A67 
 21702      65745258 
 21703 0033 2900     		.ascii	")\000"
 21704 0035 000000   		.section	.rodata._ZZN6NrfSpi20getRXFramePipeNumberEvE19__PRETTY_FUNCTION__,"a",%progbits
 21705              		.align	2
 21708              	_ZZN6NrfSpi20getRXFramePipeNumberEvE19__PRETTY_FUNCTION__:
 21709 0000 756E7369 		.ascii	"unsigned char NrfSpi::getRXFramePipeNumber()\000"
 21709      676E6564 
 21709      20636861 
 21709      72204E72 
 21709      66537069 
 21710 002d 000000   		.section	.rodata._ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EEE19__PRETTY_FUNCTION
 21711              		.align	2
 21714              	_ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EEE19__PRETTY_FUNCTION__:
 21715 0000 4E726653 		.ascii	"NrfSpi::tStatus NrfSpi::writeRegister(NrfSpi::eNrfR"
 21715      70693A3A 
 21715      74537461 
 21715      74757320 
 21715      4E726653 
 21716 0033 65676973 		.ascii	"egister, const NrfSpi::tAddress&)\000"
 21716      7465722C 
 21716      20636F6E 
 21716      7374204E 
 21716      72665370 
 21717 0055 000000   		.section	.rodata._ZZNK7AddressILj4EEixEjE19__PRETTY_FUNCTION__,"a",%progbits
 21718              		.align	2
 21721              	_ZZNK7AddressILj4EEixEjE19__PRETTY_FUNCTION__:
 21722 0000 636F6E73 		.ascii	"const uint8_t& Address<size>::operator[](size_t) co"
 21722      74207569 
 21722      6E74385F 
 21722      74262041 
 21722      64647265 
 21723 0033 6E737420 		.ascii	"nst [with unsigned int size = 4u, uint8_t = unsigne"
 21723      5B776974 
 21723      6820756E 
 21723      7369676E 
 21723      65642069 
 21724 0066 64206368 		.ascii	"d char, size_t = unsigned int]\000"
 21724      61722C20 
 21724      73697A65 
 21724      5F74203D 
 21724      20756E73 
 21725 0085 000000   		.section	.rodata._ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterEhE19__PRETTY_FUNCTION__,"a",%progbit
 21726              		.align	2
 21729              	_ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterEhE19__PRETTY_FUNCTION__:
 21730 0000 4E726653 		.ascii	"NrfSpi::tStatus NrfSpi::writeRegister(NrfSpi::eNrfR"
 21730      70693A3A 
 21730      74537461 
 21730      74757320 
 21730      4E726653 
 21731 0033 65676973 		.ascii	"egister, NrfSpi::tRegister)\000"
 21731      7465722C 
 21731      204E7266 
 21731      5370693A 
 21731      3A745265 
 21732 004f 00       		.section	.rodata._ZZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EEE19__PRETTY_FUNCTION__
 21733              		.align	2
 21736              	_ZZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EEE19__PRETTY_FUNCTION__:
 21737 0000 4E726653 		.ascii	"NrfSpi::tStatus NrfSpi::readRegister(NrfSpi::eNrfRe"
 21737      70693A3A 
 21737      74537461 
 21737      74757320 
 21737      4E726653 
 21738 0033 67697374 		.ascii	"gister, NrfSpi::tAddress&)\000"
 21738      65722C20 
 21738      4E726653 
 21738      70693A3A 
 21738      74416464 
 21739 004e 0000     		.section	.rodata._ZZN7AddressILj4EEixEjE19__PRETTY_FUNCTION__,"a",%progbits
 21740              		.align	2
 21743              	_ZZN7AddressILj4EEixEjE19__PRETTY_FUNCTION__:
 21744 0000 75696E74 		.ascii	"uint8_t& Address<size>::operator[](size_t) [with un"
 21744      385F7426 
 21744      20416464 
 21744      72657373 
 21744      3C73697A 
 21745 0033 7369676E 		.ascii	"signed int size = 4u, uint8_t = unsigned char, size"
 21745      65642069 
 21745      6E742073 
 21745      697A6520 
 21745      3D203475 
 21746 0066 5F74203D 		.ascii	"_t = unsigned int]\000"
 21746      20756E73 
 21746      69676E65 
 21746      6420696E 
 21746      745D00
 21747 0079 000000   		.section	.rodata._ZZN6NrfSpi12readRegisterENS_12eNrfRegisterEE19__PRETTY_FUNCTION__,"a",%progbits
 21748              		.align	2
 21751              	_ZZN6NrfSpi12readRegisterENS_12eNrfRegisterEE19__PRETTY_FUNCTION__:
 21752 0000 4E726653 		.ascii	"NrfSpi::tRegister NrfSpi::readRegister(NrfSpi::eNrf"
 21752      70693A3A 
 21752      74526567 
 21752      69737465 
 21752      72204E72 
 21753 0033 52656769 		.ascii	"Register)\000"
 21753      73746572 
 21753      2900
 21754 003d 000000   		.section	.rodata._ZZN6NrfSpi9readFrameER5FrameE19__PRETTY_FUNCTION__,"a",%progbits
 21755              		.align	2
 21758              	_ZZN6NrfSpi9readFrameER5FrameE19__PRETTY_FUNCTION__:
 21759 0000 4E726653 		.ascii	"NrfSpi::tStatus NrfSpi::readFrame(Frame&)\000"
 21759      70693A3A 
 21759      74537461 
 21759      74757320 
 21759      4E726653 
 21760 002a 0000     		.section	.rodata._ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__,"a",%progbits
 21761              		.align	2
 21764              	_ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__:
 21765 0000 4E726653 		.ascii	"NrfSpi::tStatus NrfSpi::sendCmd(NrfSpi::eNrfSpiCmd)"
 21765      70693A3A 
 21765      74537461 
 21765      74757320 
 21765      4E726653 
 21766 0033 00       		.ascii	"\000"
 21767              		.text
 21768              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 nrfspi.cpp
     /tmp/ccomCT04.s:19837  .text._ZL20__gthread_key_deletei:00000000 $t
     /tmp/ccomCT04.s:19841  .text._ZL20__gthread_key_deletei:00000000 _ZL20__gthread_key_deletei
     /tmp/ccomCT04.s:19871  .text._ZN19DisplayNrfSharedSpi3spiEv:00000000 $t
     /tmp/ccomCT04.s:19876  .text._ZN19DisplayNrfSharedSpi3spiEv:00000000 _ZN19DisplayNrfSharedSpi3spiEv
     /tmp/ccomCT04.s:19906  .text._ZN19DisplayNrfSharedSpi8sendByteEh:00000000 $t
     /tmp/ccomCT04.s:19911  .text._ZN19DisplayNrfSharedSpi8sendByteEh:00000000 _ZN19DisplayNrfSharedSpi8sendByteEh
     /tmp/ccomCT04.s:19948  .text._ZNK6NrfSpi13isInitializedEv:00000000 $t
     /tmp/ccomCT04.s:19953  .text._ZNK6NrfSpi13isInitializedEv:00000000 _ZNK6NrfSpi13isInitializedEv
     /tmp/ccomCT04.s:19983  .text._ZNK6NrfSpi15featuresEnabledEv:00000000 $t
     /tmp/ccomCT04.s:19988  .text._ZNK6NrfSpi15featuresEnabledEv:00000000 _ZNK6NrfSpi15featuresEnabledEv
     /tmp/ccomCT04.s:20018  .text._ZNK6NrfSpi6sDelayEm:00000000 $t
     /tmp/ccomCT04.s:20023  .text._ZNK6NrfSpi6sDelayEm:00000000 _ZNK6NrfSpi6sDelayEm
     /tmp/ccomCT04.s:20064  .text._ZNK6NrfSpi8enableCSEv:00000000 $t
     /tmp/ccomCT04.s:20069  .text._ZNK6NrfSpi8enableCSEv:00000000 _ZNK6NrfSpi8enableCSEv
     /tmp/ccomCT04.s:20103  .text._ZNK6NrfSpi9disableCSEv:00000000 $t
     /tmp/ccomCT04.s:20108  .text._ZNK6NrfSpi9disableCSEv:00000000 _ZNK6NrfSpi9disableCSEv
     /tmp/ccomCT04.s:20139  .text._ZN6NrfSpi9sharedSpiEv:00000000 $t
     /tmp/ccomCT04.s:20144  .text._ZN6NrfSpi9sharedSpiEv:00000000 _ZN6NrfSpi9sharedSpiEv
     /tmp/ccomCT04.s:20174  .text._ZN6NrfSpiC2ER19DisplayNrfSharedSpi:00000000 $t
     /tmp/ccomCT04.s:20179  .text._ZN6NrfSpiC2ER19DisplayNrfSharedSpi:00000000 _ZN6NrfSpiC2ER19DisplayNrfSharedSpi
     /tmp/ccomCT04.s:20223  .text._ZN6NrfSpiC2ER19DisplayNrfSharedSpi:00000034 $d
     /tmp/ccomCT04.s:21692  .rodata._ZTV6NrfSpi:00000000 _ZTV6NrfSpi
     /tmp/ccomCT04.s:20179  .text._ZN6NrfSpiC2ER19DisplayNrfSharedSpi:00000000 _ZN6NrfSpiC1ER19DisplayNrfSharedSpi
     /tmp/ccomCT04.s:20230  .text._ZN6NrfSpiD2Ev:00000000 $t
     /tmp/ccomCT04.s:20235  .text._ZN6NrfSpiD2Ev:00000000 _ZN6NrfSpiD2Ev
     /tmp/ccomCT04.s:20278  .text._ZN6NrfSpiD2Ev:00000030 $d
     /tmp/ccomCT04.s:20235  .text._ZN6NrfSpiD2Ev:00000000 _ZN6NrfSpiD1Ev
     /tmp/ccomCT04.s:20285  .text._ZN6NrfSpiD0Ev:00000000 $t
     /tmp/ccomCT04.s:20290  .text._ZN6NrfSpiD0Ev:00000000 _ZN6NrfSpiD0Ev
     /tmp/ccomCT04.s:20322  .text._ZN6NrfSpi10initializeEv:00000000 $t
     /tmp/ccomCT04.s:20327  .text._ZN6NrfSpi10initializeEv:00000000 _ZN6NrfSpi10initializeEv
     /tmp/ccomCT04.s:20379  .text._ZN6NrfSpi6statusEv:00000000 $t
     /tmp/ccomCT04.s:20384  .text._ZN6NrfSpi6statusEv:00000000 _ZN6NrfSpi6statusEv
     /tmp/ccomCT04.s:20444  .text._ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE:00000000 _ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE
     /tmp/ccomCT04.s:20416  .rodata:00000000 $d
     /tmp/ccomCT04.s:20417  .rodata:00000000 .LC0
     /tmp/ccomCT04.s:20421  .rodata:0000003c .LC1
     /tmp/ccomCT04.s:20424  .rodata:00000050 .LC2
     /tmp/ccomCT04.s:20427  .rodata:00000064 .LC3
     /tmp/ccomCT04.s:20430  .rodata:00000078 .LC4
     /tmp/ccomCT04.s:20433  .rodata:0000008c .LC5
     /tmp/ccomCT04.s:20436  .rodata:000000a4 .LC6
     /tmp/ccomCT04.s:20439  .text._ZN6NrfSpi7sendCmdENS_10eNrfSpiCmdE:00000000 $t
     /tmp/ccomCT04.s:21764  .rodata._ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21441  .text._ZN6NrfSpi8sendByteEh:00000000 _ZN6NrfSpi8sendByteEh
     /tmp/ccomCT04.s:20646  .text._ZN6NrfSpi9sendFrameERK5Frame:00000000 $t
     /tmp/ccomCT04.s:20651  .text._ZN6NrfSpi9sendFrameERK5Frame:00000000 _ZN6NrfSpi9sendFrameERK5Frame
     /tmp/ccomCT04.s:20732  .rodata:000000c0 .LC7
     /tmp/ccomCT04.s:20735  .text._ZN6NrfSpi9readFrameER5Frame:00000000 $t
     /tmp/ccomCT04.s:20740  .text._ZN6NrfSpi9readFrameER5Frame:00000000 _ZN6NrfSpi9readFrameER5Frame
     /tmp/ccomCT04.s:21758  .rodata._ZZN6NrfSpi9readFrameER5FrameE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi9readFrameER5FrameE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:20839  .rodata:000000d4 .LC8
     /tmp/ccomCT04.s:20843  .text._ZN6NrfSpi12readRegisterENS_12eNrfRegisterE:00000000 $t
     /tmp/ccomCT04.s:20848  .text._ZN6NrfSpi12readRegisterENS_12eNrfRegisterE:00000000 _ZN6NrfSpi12readRegisterENS_12eNrfRegisterE
     /tmp/ccomCT04.s:21751  .rodata._ZZN6NrfSpi12readRegisterENS_12eNrfRegisterEE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi12readRegisterENS_12eNrfRegisterEE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:20921  .rodata:00000110 .LC9
     /tmp/ccomCT04.s:20925  .text._ZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EE:00000000 $t
     /tmp/ccomCT04.s:20930  .text._ZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EE:00000000 _ZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EE
     /tmp/ccomCT04.s:21736  .rodata._ZZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EEE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EEE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21521  .text._ZN7AddressILj4EEixEj:00000000 _ZN7AddressILj4EEixEj
     /tmp/ccomCT04.s:21484  .text._ZN7AddressILj4EE11addressSizeEv:00000000 _ZN7AddressILj4EE11addressSizeEv
     /tmp/ccomCT04.s:21036  .text._ZN6NrfSpi13writeRegisterENS_12eNrfRegisterEh:00000000 $t
     /tmp/ccomCT04.s:21041  .text._ZN6NrfSpi13writeRegisterENS_12eNrfRegisterEh:00000000 _ZN6NrfSpi13writeRegisterENS_12eNrfRegisterEh
     /tmp/ccomCT04.s:21729  .rodata._ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterEhE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterEhE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21121  .text._ZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EE:00000000 $t
     /tmp/ccomCT04.s:21126  .text._ZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EE:00000000 _ZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EE
     /tmp/ccomCT04.s:21714  .rodata._ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EEE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EEE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21583  .text._ZNK7AddressILj4EEixEj:00000000 _ZNK7AddressILj4EEixEj
     /tmp/ccomCT04.s:21232  .text._ZN6NrfSpi16activateFeaturesEb:00000000 $t
     /tmp/ccomCT04.s:21237  .text._ZN6NrfSpi16activateFeaturesEb:00000000 _ZN6NrfSpi16activateFeaturesEb
     /tmp/ccomCT04.s:21288  .rodata:0000014c .LC10
     /tmp/ccomCT04.s:21291  .text._ZN6NrfSpi20getRXFramePipeNumberEv:00000000 $t
     /tmp/ccomCT04.s:21296  .text._ZN6NrfSpi20getRXFramePipeNumberEv:00000000 _ZN6NrfSpi20getRXFramePipeNumberEv
     /tmp/ccomCT04.s:21708  .rodata._ZZN6NrfSpi20getRXFramePipeNumberEvE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi20getRXFramePipeNumberEvE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21359  .rodata:00000154 .LC11
     /tmp/ccomCT04.s:21362  .text._ZN6NrfSpi22getRXFramePaylpoadSizeEh:00000000 $t
     /tmp/ccomCT04.s:21367  .text._ZN6NrfSpi22getRXFramePaylpoadSizeEh:00000000 _ZN6NrfSpi22getRXFramePaylpoadSizeEh
     /tmp/ccomCT04.s:21701  .rodata._ZZN6NrfSpi22getRXFramePaylpoadSizeEhE19__PRETTY_FUNCTION__:00000000 _ZZN6NrfSpi22getRXFramePaylpoadSizeEhE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21436  .text._ZN6NrfSpi8sendByteEh:00000000 $t
     /tmp/ccomCT04.s:21479  .text._ZN7AddressILj4EE11addressSizeEv:00000000 $t
     /tmp/ccomCT04.s:21510  .rodata:00000178 .LC12
     /tmp/ccomCT04.s:21513  .rodata:000001a8 .LC13
     /tmp/ccomCT04.s:21516  .text._ZN7AddressILj4EEixEj:00000000 $t
     /tmp/ccomCT04.s:21743  .rodata._ZZN7AddressILj4EEixEjE19__PRETTY_FUNCTION__:00000000 _ZZN7AddressILj4EEixEjE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21645  .text._ZSt3minIjERKT_S2_S2_:00000000 _ZSt3minIjERKT_S2_S2_
     /tmp/ccomCT04.s:21578  .text._ZNK7AddressILj4EEixEj:00000000 $t
     /tmp/ccomCT04.s:21721  .rodata._ZZNK7AddressILj4EEixEjE19__PRETTY_FUNCTION__:00000000 _ZZNK7AddressILj4EEixEjE19__PRETTY_FUNCTION__
     /tmp/ccomCT04.s:21640  .text._ZSt3minIjERKT_S2_S2_:00000000 $t
     /tmp/ccomCT04.s:21689  .rodata._ZTV6NrfSpi:00000000 $d
     /tmp/ccomCT04.s:21698  .rodata._ZZN6NrfSpi22getRXFramePaylpoadSizeEhE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21705  .rodata._ZZN6NrfSpi20getRXFramePipeNumberEvE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21711  .rodata._ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterERK7AddressILj4EEE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21718  .rodata._ZZNK7AddressILj4EEixEjE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21726  .rodata._ZZN6NrfSpi13writeRegisterENS_12eNrfRegisterEhE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21733  .rodata._ZZN6NrfSpi12readRegisterENS_12eNrfRegisterER7AddressILj4EEE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21740  .rodata._ZZN7AddressILj4EEixEjE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21748  .rodata._ZZN6NrfSpi12readRegisterENS_12eNrfRegisterEE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21755  .rodata._ZZN6NrfSpi9readFrameER5FrameE19__PRETTY_FUNCTION__:00000000 $d
     /tmp/ccomCT04.s:21761  .rodata._ZZN6NrfSpi7sendCmdENS_10eNrfSpiCmdEE19__PRETTY_FUNCTION__:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN3SPI8sendByteEh
GPIO_WriteBit
_ZdlPv
_ZN19DisplayNrfSharedSpi10initializeEv
__assert_func
_ZNK5FrameixEj
_ZNK5Frame11payloadSizeEv
_ZN5FrameixEj
