   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"usb_int.c"
  23              	.Ltext0:
  24              		.file 1 "../target/stm32/vcom/usb_int.c"
 16443              		.align	2
 16444              		.global	CTR_LP
 16445              		.thumb
 16446              		.thumb_func
 16448              	CTR_LP:
 16449              	.LFB29:
   1:../target/stm32/vcom/usb_int.c **** /******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
   2:../target/stm32/vcom/usb_int.c **** * File Name          : usb_int.c
   3:../target/stm32/vcom/usb_int.c **** * Author             : MCD Application Team
   4:../target/stm32/vcom/usb_int.c **** * Version            : V1.0
   5:../target/stm32/vcom/usb_int.c **** * Date               : 10/08/2007
   6:../target/stm32/vcom/usb_int.c **** * Description        : Endpoint CTR (Low and High) interrupt's service routines
   7:../target/stm32/vcom/usb_int.c **** ********************************************************************************
   8:../target/stm32/vcom/usb_int.c **** * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:../target/stm32/vcom/usb_int.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:../target/stm32/vcom/usb_int.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:../target/stm32/vcom/usb_int.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:../target/stm32/vcom/usb_int.c **** * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:../target/stm32/vcom/usb_int.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:../target/stm32/vcom/usb_int.c **** *******************************************************************************/
  15:../target/stm32/vcom/usb_int.c **** 
  16:../target/stm32/vcom/usb_int.c **** /* Includes ------------------------------------------------------------------*/
  17:../target/stm32/vcom/usb_int.c **** #include "usb_lib.h"
  18:../target/stm32/vcom/usb_int.c **** 
  19:../target/stm32/vcom/usb_int.c **** /* Private typedef -----------------------------------------------------------*/
  20:../target/stm32/vcom/usb_int.c **** /* Private define ------------------------------------------------------------*/
  21:../target/stm32/vcom/usb_int.c **** /* Private macro -------------------------------------------------------------*/
  22:../target/stm32/vcom/usb_int.c **** /* Private variables ---------------------------------------------------------*/
  23:../target/stm32/vcom/usb_int.c **** u16 SaveRState;
  24:../target/stm32/vcom/usb_int.c **** u16 SaveTState;
  25:../target/stm32/vcom/usb_int.c **** 
  26:../target/stm32/vcom/usb_int.c **** /* Extern variables ----------------------------------------------------------*/
  27:../target/stm32/vcom/usb_int.c **** extern void (*pEpInt_IN[7])(void);    /*  Handles IN  interrupts   */
  28:../target/stm32/vcom/usb_int.c **** extern void (*pEpInt_OUT[7])(void);   /*  Handles OUT interrupts   */
  29:../target/stm32/vcom/usb_int.c **** 
  30:../target/stm32/vcom/usb_int.c **** /* Private function prototypes -----------------------------------------------*/
  31:../target/stm32/vcom/usb_int.c **** /* Private functions ---------------------------------------------------------*/
  32:../target/stm32/vcom/usb_int.c **** 
  33:../target/stm32/vcom/usb_int.c **** /*******************************************************************************
  34:../target/stm32/vcom/usb_int.c **** * Function Name  : CTR_LP.
  35:../target/stm32/vcom/usb_int.c **** * Description    : Low priority Endpoint Correct Transfer interrupt's service
  36:../target/stm32/vcom/usb_int.c **** *                  routine.
  37:../target/stm32/vcom/usb_int.c **** * Input          : None.
  38:../target/stm32/vcom/usb_int.c **** * Output         : None.
  39:../target/stm32/vcom/usb_int.c **** * Return         : None.
  40:../target/stm32/vcom/usb_int.c **** *******************************************************************************/
  41:../target/stm32/vcom/usb_int.c **** void CTR_LP(void)
  42:../target/stm32/vcom/usb_int.c **** {
 16450              		.loc 1 42 0
 16451              		.cfi_startproc
 16452              		@ args = 0, pretend = 0, frame = 8
 16453              		@ frame_needed = 1, uses_anonymous_args = 0
 16454 0000 90B5     		push	{r4, r7, lr}
 16455              	.LCFI0:
 16456              		.cfi_def_cfa_offset 12
 16457 0002 83B0     		sub	sp, sp, #12
 16458              	.LCFI1:
 16459              		.cfi_def_cfa_offset 24
 16460 0004 00AF     		add	r7, sp, #0
 16461              		.cfi_offset 14, -4
 16462              		.cfi_offset 7, -8
 16463              		.cfi_offset 4, -12
 16464              	.LCFI2:
 16465              		.cfi_def_cfa_register 7
  43:../target/stm32/vcom/usb_int.c ****   u32 wEPVal;
  44:../target/stm32/vcom/usb_int.c ****   /* stay in loop while pending ints */
  45:../target/stm32/vcom/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 16466              		.loc 1 45 0
 16467 0006 B0E1     		b	.L2
 16468              	.L13:
  46:../target/stm32/vcom/usb_int.c ****   {
  47:../target/stm32/vcom/usb_int.c ****     _SetISTR((u16)CLR_CTR); /* clear CTR flag */
 16469              		.loc 1 47 0
 16470 0008 45F64443 		movw	r3, #23620
 16471 000c C4F20003 		movt	r3, 16384
 16472 0010 47F6FF72 		movw	r2, #32767
 16473 0014 1A60     		str	r2, [r3, #0]
  48:../target/stm32/vcom/usb_int.c ****     /* extract highest priority endpoint number */
  49:../target/stm32/vcom/usb_int.c ****     EPindex = (u8)(wIstr & ISTR_EP_ID);
 16474              		.loc 1 49 0
 16475 0016 40F20003 		movw	r3, #:lower16:wIstr
 16476 001a C0F20003 		movt	r3, #:upper16:wIstr
 16477 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 16478 0020 9BB2     		uxth	r3, r3
 16479 0022 DBB2     		uxtb	r3, r3
 16480 0024 03F00F03 		and	r3, r3, #15
 16481 0028 DAB2     		uxtb	r2, r3
 16482 002a 40F20003 		movw	r3, #:lower16:EPindex
 16483 002e C0F20003 		movt	r3, #:upper16:EPindex
 16484 0032 1A70     		strb	r2, [r3, #0]
  50:../target/stm32/vcom/usb_int.c ****     if (EPindex == 0)
 16485              		.loc 1 50 0
 16486 0034 40F20003 		movw	r3, #:lower16:EPindex
 16487 0038 C0F20003 		movt	r3, #:upper16:EPindex
 16488 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16489 003e 002B     		cmp	r3, #0
 16490 0040 40F02381 		bne	.L3
  51:../target/stm32/vcom/usb_int.c ****     {
  52:../target/stm32/vcom/usb_int.c ****       /* Decode and service control endpoint interrupt */
  53:../target/stm32/vcom/usb_int.c ****       /* calling related service routine */
  54:../target/stm32/vcom/usb_int.c ****       /* (Setup0_Process, In0_Process, Out0_Process) */
  55:../target/stm32/vcom/usb_int.c **** 
  56:../target/stm32/vcom/usb_int.c ****       /* save RX & TX status */
  57:../target/stm32/vcom/usb_int.c ****       /* and set both to NAK */
  58:../target/stm32/vcom/usb_int.c ****       SaveRState = _GetEPRxStatus(ENDP0);
 16491              		.loc 1 58 0
 16492 0044 4FF4B843 		mov	r3, #23552
 16493 0048 C4F20003 		movt	r3, 16384
 16494 004c 1B68     		ldr	r3, [r3, #0]
 16495 004e 9BB2     		uxth	r3, r3
 16496 0050 03F44053 		and	r3, r3, #12288
 16497 0054 9AB2     		uxth	r2, r3
 16498 0056 40F20003 		movw	r3, #:lower16:SaveRState
 16499 005a C0F20003 		movt	r3, #:upper16:SaveRState
 16500 005e 1A80     		strh	r2, [r3, #0]	@ movhi
  59:../target/stm32/vcom/usb_int.c ****       SaveTState = _GetEPTxStatus(ENDP0);
 16501              		.loc 1 59 0
 16502 0060 4FF4B843 		mov	r3, #23552
 16503 0064 C4F20003 		movt	r3, 16384
 16504 0068 1B68     		ldr	r3, [r3, #0]
 16505 006a 9BB2     		uxth	r3, r3
 16506 006c 03F03003 		and	r3, r3, #48
 16507 0070 9AB2     		uxth	r2, r3
 16508 0072 40F20003 		movw	r3, #:lower16:SaveTState
 16509 0076 C0F20003 		movt	r3, #:upper16:SaveTState
 16510 007a 1A80     		strh	r2, [r3, #0]	@ movhi
 16511              	.LBB2:
  60:../target/stm32/vcom/usb_int.c ****       _SetEPRxStatus(ENDP0, EP_RX_NAK);
 16512              		.loc 1 60 0
 16513 007c 4FF4B843 		mov	r3, #23552
 16514 0080 C4F20003 		movt	r3, 16384
 16515 0084 1B68     		ldr	r3, [r3, #0]
 16516 0086 9BB2     		uxth	r3, r3
 16517 0088 23F48043 		bic	r3, r3, #16384
 16518 008c 23F07003 		bic	r3, r3, #112
 16519 0090 9CB2     		uxth	r4, r3
 16520 0092 84F40053 		eor	r3, r4, #8192
 16521 0096 9CB2     		uxth	r4, r3
 16522 0098 4FF4B843 		mov	r3, #23552
 16523 009c C4F20003 		movt	r3, 16384
 16524 00a0 2246     		mov	r2, r4
 16525 00a2 1A60     		str	r2, [r3, #0]
 16526              	.LBE2:
 16527              	.LBB3:
  61:../target/stm32/vcom/usb_int.c ****       _SetEPTxStatus(ENDP0, EP_TX_NAK);
 16528              		.loc 1 61 0
 16529 00a4 4FF4B843 		mov	r3, #23552
 16530 00a8 C4F20003 		movt	r3, 16384
 16531 00ac 1B68     		ldr	r3, [r3, #0]
 16532 00ae 9BB2     		uxth	r3, r3
 16533 00b0 23F4E043 		bic	r3, r3, #28672
 16534 00b4 23F04003 		bic	r3, r3, #64
 16535 00b8 9CB2     		uxth	r4, r3
 16536 00ba 84F02003 		eor	r3, r4, #32
 16537 00be 9CB2     		uxth	r4, r3
 16538 00c0 4FF4B843 		mov	r3, #23552
 16539 00c4 C4F20003 		movt	r3, 16384
 16540 00c8 2246     		mov	r2, r4
 16541 00ca 1A60     		str	r2, [r3, #0]
 16542              	.LBE3:
  62:../target/stm32/vcom/usb_int.c **** 
  63:../target/stm32/vcom/usb_int.c **** 
  64:../target/stm32/vcom/usb_int.c ****       /* DIR bit = origin of the interrupt */
  65:../target/stm32/vcom/usb_int.c **** 
  66:../target/stm32/vcom/usb_int.c ****       if ((wIstr & ISTR_DIR) == 0)
 16543              		.loc 1 66 0
 16544 00cc 40F20003 		movw	r3, #:lower16:wIstr
 16545 00d0 C0F20003 		movt	r3, #:upper16:wIstr
 16546 00d4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 16547 00d6 9BB2     		uxth	r3, r3
 16548 00d8 03F01003 		and	r3, r3, #16
 16549 00dc 002B     		cmp	r3, #0
 16550 00de 30D1     		bne	.L4
  67:../target/stm32/vcom/usb_int.c ****       {
  68:../target/stm32/vcom/usb_int.c ****         /* DIR = 0 */
  69:../target/stm32/vcom/usb_int.c **** 
  70:../target/stm32/vcom/usb_int.c ****         /* DIR = 0      => IN  int */
  71:../target/stm32/vcom/usb_int.c ****         /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
  72:../target/stm32/vcom/usb_int.c **** 
  73:../target/stm32/vcom/usb_int.c **** 
  74:../target/stm32/vcom/usb_int.c ****         _ClearEP_CTR_TX(ENDP0);
 16551              		.loc 1 74 0
 16552 00e0 4FF4B843 		mov	r3, #23552
 16553 00e4 C4F20003 		movt	r3, 16384
 16554 00e8 4FF4B842 		mov	r2, #23552
 16555 00ec C4F20002 		movt	r2, 16384
 16556 00f0 1268     		ldr	r2, [r2, #0]
 16557 00f2 92B2     		uxth	r2, r2
 16558 00f4 1146     		mov	r1, r2
 16559 00f6 48F60F72 		movw	r2, #36623
 16560 00fa 01EA0202 		and	r2, r1, r2
 16561 00fe 1A60     		str	r2, [r3, #0]
  75:../target/stm32/vcom/usb_int.c ****         In0_Process();
 16562              		.loc 1 75 0
 16563 0100 FFF7FEFF 		bl	In0_Process
  76:../target/stm32/vcom/usb_int.c **** 
  77:../target/stm32/vcom/usb_int.c ****         /* check if SETUP arrived during IN processing */
  78:../target/stm32/vcom/usb_int.c ****         wEPVal = _GetENDPOINT(ENDP0);
 16564              		.loc 1 78 0
 16565 0104 4FF4B843 		mov	r3, #23552
 16566 0108 C4F20003 		movt	r3, 16384
 16567 010c 1B68     		ldr	r3, [r3, #0]
 16568 010e 9BB2     		uxth	r3, r3
 16569 0110 7B60     		str	r3, [r7, #4]
  79:../target/stm32/vcom/usb_int.c ****         if ((wEPVal & (EP_CTR_RX | EP_SETUP)) != 0)
 16570              		.loc 1 79 0
 16571 0112 7B68     		ldr	r3, [r7, #4]
 16572 0114 03F40843 		and	r3, r3, #34816
 16573 0118 002B     		cmp	r3, #0
 16574 011a 5FD0     		beq	.L5
  80:../target/stm32/vcom/usb_int.c ****         {
  81:../target/stm32/vcom/usb_int.c ****           _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
 16575              		.loc 1 81 0
 16576 011c 4FF4B843 		mov	r3, #23552
 16577 0120 C4F20003 		movt	r3, 16384
 16578 0124 4FF4B842 		mov	r2, #23552
 16579 0128 C4F20002 		movt	r2, 16384
 16580 012c 1268     		ldr	r2, [r2, #0]
 16581 012e 92B2     		uxth	r2, r2
 16582 0130 1146     		mov	r1, r2
 16583 0132 40F68F72 		movw	r2, #3983
 16584 0136 01EA0202 		and	r2, r1, r2
 16585 013a 1A60     		str	r2, [r3, #0]
  82:../target/stm32/vcom/usb_int.c ****           Setup0_Process();
 16586              		.loc 1 82 0
 16587 013c FFF7FEFF 		bl	Setup0_Process
 16588 0140 4CE0     		b	.L5
 16589              	.L4:
  83:../target/stm32/vcom/usb_int.c ****         }
  84:../target/stm32/vcom/usb_int.c **** 
  85:../target/stm32/vcom/usb_int.c ****       }
  86:../target/stm32/vcom/usb_int.c **** 
  87:../target/stm32/vcom/usb_int.c ****       else
  88:../target/stm32/vcom/usb_int.c ****       {
  89:../target/stm32/vcom/usb_int.c ****         /* DIR = 1 */
  90:../target/stm32/vcom/usb_int.c **** 
  91:../target/stm32/vcom/usb_int.c ****         /* DIR = 1 & CTR_RX       => SETUP or OUT int */
  92:../target/stm32/vcom/usb_int.c ****         /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
  93:../target/stm32/vcom/usb_int.c **** 
  94:../target/stm32/vcom/usb_int.c ****         wEPVal = _GetENDPOINT(ENDP0);
 16590              		.loc 1 94 0
 16591 0142 4FF4B843 		mov	r3, #23552
 16592 0146 C4F20003 		movt	r3, 16384
 16593 014a 1B68     		ldr	r3, [r3, #0]
 16594 014c 9BB2     		uxth	r3, r3
 16595 014e 7B60     		str	r3, [r7, #4]
  95:../target/stm32/vcom/usb_int.c ****         if ((wEPVal & EP_CTR_TX) != 0)
 16596              		.loc 1 95 0
 16597 0150 7B68     		ldr	r3, [r7, #4]
 16598 0152 03F08003 		and	r3, r3, #128
 16599 0156 002B     		cmp	r3, #0
 16600 0158 11D0     		beq	.L6
  96:../target/stm32/vcom/usb_int.c ****         {
  97:../target/stm32/vcom/usb_int.c ****           _ClearEP_CTR_TX(ENDP0);
 16601              		.loc 1 97 0
 16602 015a 4FF4B843 		mov	r3, #23552
 16603 015e C4F20003 		movt	r3, 16384
 16604 0162 4FF4B842 		mov	r2, #23552
 16605 0166 C4F20002 		movt	r2, 16384
 16606 016a 1268     		ldr	r2, [r2, #0]
 16607 016c 92B2     		uxth	r2, r2
 16608 016e 1146     		mov	r1, r2
 16609 0170 48F60F72 		movw	r2, #36623
 16610 0174 01EA0202 		and	r2, r1, r2
 16611 0178 1A60     		str	r2, [r3, #0]
  98:../target/stm32/vcom/usb_int.c ****           In0_Process();
 16612              		.loc 1 98 0
 16613 017a FFF7FEFF 		bl	In0_Process
 16614              	.L6:
  99:../target/stm32/vcom/usb_int.c ****         }
 100:../target/stm32/vcom/usb_int.c ****         if ((wEPVal &EP_SETUP) != 0)
 16615              		.loc 1 100 0
 16616 017e 7B68     		ldr	r3, [r7, #4]
 16617 0180 03F40063 		and	r3, r3, #2048
 16618 0184 002B     		cmp	r3, #0
 16619 0186 12D0     		beq	.L7
 101:../target/stm32/vcom/usb_int.c ****         {
 102:../target/stm32/vcom/usb_int.c ****           _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
 16620              		.loc 1 102 0
 16621 0188 4FF4B843 		mov	r3, #23552
 16622 018c C4F20003 		movt	r3, 16384
 16623 0190 4FF4B842 		mov	r2, #23552
 16624 0194 C4F20002 		movt	r2, 16384
 16625 0198 1268     		ldr	r2, [r2, #0]
 16626 019a 92B2     		uxth	r2, r2
 16627 019c 1146     		mov	r1, r2
 16628 019e 40F68F72 		movw	r2, #3983
 16629 01a2 01EA0202 		and	r2, r1, r2
 16630 01a6 1A60     		str	r2, [r3, #0]
 103:../target/stm32/vcom/usb_int.c ****           Setup0_Process();
 16631              		.loc 1 103 0
 16632 01a8 FFF7FEFF 		bl	Setup0_Process
 16633 01ac 16E0     		b	.L5
 16634              	.L7:
 104:../target/stm32/vcom/usb_int.c ****         }
 105:../target/stm32/vcom/usb_int.c **** 
 106:../target/stm32/vcom/usb_int.c ****         else if ((wEPVal & EP_CTR_RX) != 0)
 16635              		.loc 1 106 0
 16636 01ae 7B68     		ldr	r3, [r7, #4]
 16637 01b0 03F40043 		and	r3, r3, #32768
 16638 01b4 002B     		cmp	r3, #0
 16639 01b6 11D0     		beq	.L5
 107:../target/stm32/vcom/usb_int.c ****         {
 108:../target/stm32/vcom/usb_int.c ****           _ClearEP_CTR_RX(ENDP0);
 16640              		.loc 1 108 0
 16641 01b8 4FF4B843 		mov	r3, #23552
 16642 01bc C4F20003 		movt	r3, 16384
 16643 01c0 4FF4B842 		mov	r2, #23552
 16644 01c4 C4F20002 		movt	r2, 16384
 16645 01c8 1268     		ldr	r2, [r2, #0]
 16646 01ca 92B2     		uxth	r2, r2
 16647 01cc 1146     		mov	r1, r2
 16648 01ce 40F68F72 		movw	r2, #3983
 16649 01d2 01EA0202 		and	r2, r1, r2
 16650 01d6 1A60     		str	r2, [r3, #0]
 109:../target/stm32/vcom/usb_int.c ****           Out0_Process();
 16651              		.loc 1 109 0
 16652 01d8 FFF7FEFF 		bl	Out0_Process
 16653              	.L5:
 16654              	.LBB4:
 110:../target/stm32/vcom/usb_int.c ****         }
 111:../target/stm32/vcom/usb_int.c **** 
 112:../target/stm32/vcom/usb_int.c ****       }
 113:../target/stm32/vcom/usb_int.c **** 
 114:../target/stm32/vcom/usb_int.c ****       /* before terminate set Tx & Rx status */
 115:../target/stm32/vcom/usb_int.c ****       _SetEPRxStatus(ENDP0, SaveRState);
 16655              		.loc 1 115 0
 16656 01dc 4FF4B843 		mov	r3, #23552
 16657 01e0 C4F20003 		movt	r3, 16384
 16658 01e4 1B68     		ldr	r3, [r3, #0]
 16659 01e6 9BB2     		uxth	r3, r3
 16660 01e8 23F48043 		bic	r3, r3, #16384
 16661 01ec 23F07003 		bic	r3, r3, #112
 16662 01f0 9CB2     		uxth	r4, r3
 16663 01f2 40F20003 		movw	r3, #:lower16:SaveRState
 16664 01f6 C0F20003 		movt	r3, #:upper16:SaveRState
 16665 01fa 1B88     		ldrh	r3, [r3, #0]
 16666 01fc 03F48053 		and	r3, r3, #4096
 16667 0200 9BB2     		uxth	r3, r3
 16668 0202 002B     		cmp	r3, #0
 16669 0204 02D0     		beq	.L8
 16670              		.loc 1 115 0 is_stmt 0 discriminator 1
 16671 0206 84F48053 		eor	r3, r4, #4096
 16672 020a 9CB2     		uxth	r4, r3
 16673              	.L8:
 16674              		.loc 1 115 0 discriminator 2
 16675 020c 40F20003 		movw	r3, #:lower16:SaveRState
 16676 0210 C0F20003 		movt	r3, #:upper16:SaveRState
 16677 0214 1B88     		ldrh	r3, [r3, #0]
 16678 0216 03F40053 		and	r3, r3, #8192
 16679 021a 9BB2     		uxth	r3, r3
 16680 021c 002B     		cmp	r3, #0
 16681 021e 02D0     		beq	.L9
 16682              		.loc 1 115 0 discriminator 3
 16683 0220 84F40053 		eor	r3, r4, #8192
 16684 0224 9CB2     		uxth	r4, r3
 16685              	.L9:
 16686              		.loc 1 115 0 discriminator 4
 16687 0226 4FF4B843 		mov	r3, #23552
 16688 022a C4F20003 		movt	r3, 16384
 16689 022e 2246     		mov	r2, r4
 16690 0230 1A60     		str	r2, [r3, #0]
 16691              	.LBE4:
 16692              	.LBB5:
 116:../target/stm32/vcom/usb_int.c ****       _SetEPTxStatus(ENDP0, SaveTState);
 16693              		.loc 1 116 0 is_stmt 1 discriminator 4
 16694 0232 4FF4B843 		mov	r3, #23552
 16695 0236 C4F20003 		movt	r3, 16384
 16696 023a 1B68     		ldr	r3, [r3, #0]
 16697 023c 9BB2     		uxth	r3, r3
 16698 023e 23F4E043 		bic	r3, r3, #28672
 16699 0242 23F04003 		bic	r3, r3, #64
 16700 0246 9CB2     		uxth	r4, r3
 16701 0248 40F20003 		movw	r3, #:lower16:SaveTState
 16702 024c C0F20003 		movt	r3, #:upper16:SaveTState
 16703 0250 1B88     		ldrh	r3, [r3, #0]
 16704 0252 03F01003 		and	r3, r3, #16
 16705 0256 9BB2     		uxth	r3, r3
 16706 0258 002B     		cmp	r3, #0
 16707 025a 02D0     		beq	.L10
 16708              		.loc 1 116 0 is_stmt 0 discriminator 1
 16709 025c 84F01003 		eor	r3, r4, #16
 16710 0260 9CB2     		uxth	r4, r3
 16711              	.L10:
 16712              		.loc 1 116 0 discriminator 2
 16713 0262 40F20003 		movw	r3, #:lower16:SaveTState
 16714 0266 C0F20003 		movt	r3, #:upper16:SaveTState
 16715 026a 1B88     		ldrh	r3, [r3, #0]
 16716 026c 03F02003 		and	r3, r3, #32
 16717 0270 9BB2     		uxth	r3, r3
 16718 0272 002B     		cmp	r3, #0
 16719 0274 02D0     		beq	.L11
 16720              		.loc 1 116 0 discriminator 3
 16721 0276 84F02003 		eor	r3, r4, #32
 16722 027a 9CB2     		uxth	r4, r3
 16723              	.L11:
 16724              		.loc 1 116 0 discriminator 4
 16725 027c 4FF4B843 		mov	r3, #23552
 16726 0280 C4F20003 		movt	r3, 16384
 16727 0284 2246     		mov	r2, r4
 16728 0286 1A60     		str	r2, [r3, #0]
 16729 0288 6FE0     		b	.L2
 16730              	.L3:
 16731              	.LBE5:
 117:../target/stm32/vcom/usb_int.c ****     }/* if(EPindex == 0) */
 118:../target/stm32/vcom/usb_int.c ****     else
 119:../target/stm32/vcom/usb_int.c ****     {
 120:../target/stm32/vcom/usb_int.c ****       /* Decode and service non control endpoints interrupt  */
 121:../target/stm32/vcom/usb_int.c **** 
 122:../target/stm32/vcom/usb_int.c ****       /* process related endpoint register */
 123:../target/stm32/vcom/usb_int.c ****       wEPVal = _GetENDPOINT(EPindex);
 16732              		.loc 1 123 0 is_stmt 1
 16733 028a 40F20003 		movw	r3, #:lower16:EPindex
 16734 028e C0F20003 		movt	r3, #:upper16:EPindex
 16735 0292 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16736 0294 4FEA8303 		lsl	r3, r3, #2
 16737 0298 03F18043 		add	r3, r3, #1073741824
 16738 029c 03F5B843 		add	r3, r3, #23552
 16739 02a0 1B68     		ldr	r3, [r3, #0]
 16740 02a2 9BB2     		uxth	r3, r3
 16741 02a4 7B60     		str	r3, [r7, #4]
 124:../target/stm32/vcom/usb_int.c ****       if ((wEPVal & EP_CTR_RX) != 0)
 16742              		.loc 1 124 0
 16743 02a6 7B68     		ldr	r3, [r7, #4]
 16744 02a8 03F40043 		and	r3, r3, #32768
 16745 02ac 002B     		cmp	r3, #0
 16746 02ae 2BD0     		beq	.L12
 125:../target/stm32/vcom/usb_int.c ****       {
 126:../target/stm32/vcom/usb_int.c ****         /* clear int flag */
 127:../target/stm32/vcom/usb_int.c ****         _ClearEP_CTR_RX(EPindex);
 16747              		.loc 1 127 0
 16748 02b0 40F20003 		movw	r3, #:lower16:EPindex
 16749 02b4 C0F20003 		movt	r3, #:upper16:EPindex
 16750 02b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16751 02ba 4FEA8303 		lsl	r3, r3, #2
 16752 02be 03F18043 		add	r3, r3, #1073741824
 16753 02c2 03F5B843 		add	r3, r3, #23552
 16754 02c6 40F20002 		movw	r2, #:lower16:EPindex
 16755 02ca C0F20002 		movt	r2, #:upper16:EPindex
 16756 02ce 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 16757 02d0 4FEA8202 		lsl	r2, r2, #2
 16758 02d4 02F18042 		add	r2, r2, #1073741824
 16759 02d8 02F5B842 		add	r2, r2, #23552
 16760 02dc 1268     		ldr	r2, [r2, #0]
 16761 02de 92B2     		uxth	r2, r2
 16762 02e0 1146     		mov	r1, r2
 16763 02e2 40F68F72 		movw	r2, #3983
 16764 02e6 01EA0202 		and	r2, r1, r2
 16765 02ea 1A60     		str	r2, [r3, #0]
 128:../target/stm32/vcom/usb_int.c **** 
 129:../target/stm32/vcom/usb_int.c ****         /* call OUT service function */
 130:../target/stm32/vcom/usb_int.c ****         (*pEpInt_OUT[EPindex-1])();
 16766              		.loc 1 130 0
 16767 02ec 40F20003 		movw	r3, #:lower16:EPindex
 16768 02f0 C0F20003 		movt	r3, #:upper16:EPindex
 16769 02f4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16770 02f6 03F1FF32 		add	r2, r3, #-1
 16771 02fa 40F20003 		movw	r3, #:lower16:pEpInt_OUT
 16772 02fe C0F20003 		movt	r3, #:upper16:pEpInt_OUT
 16773 0302 53F82230 		ldr	r3, [r3, r2, lsl #2]
 16774 0306 9847     		blx	r3
 16775              	.L12:
 131:../target/stm32/vcom/usb_int.c **** 
 132:../target/stm32/vcom/usb_int.c ****       } /* if((wEPVal & EP_CTR_RX) */
 133:../target/stm32/vcom/usb_int.c **** 
 134:../target/stm32/vcom/usb_int.c ****       if ((wEPVal & EP_CTR_TX) != 0)
 16776              		.loc 1 134 0
 16777 0308 7B68     		ldr	r3, [r7, #4]
 16778 030a 03F08003 		and	r3, r3, #128
 16779 030e 002B     		cmp	r3, #0
 16780 0310 2BD0     		beq	.L2
 135:../target/stm32/vcom/usb_int.c ****       {
 136:../target/stm32/vcom/usb_int.c ****         /* clear int flag */
 137:../target/stm32/vcom/usb_int.c ****         _ClearEP_CTR_TX(EPindex);
 16781              		.loc 1 137 0
 16782 0312 40F20003 		movw	r3, #:lower16:EPindex
 16783 0316 C0F20003 		movt	r3, #:upper16:EPindex
 16784 031a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16785 031c 4FEA8303 		lsl	r3, r3, #2
 16786 0320 03F18043 		add	r3, r3, #1073741824
 16787 0324 03F5B843 		add	r3, r3, #23552
 16788 0328 40F20002 		movw	r2, #:lower16:EPindex
 16789 032c C0F20002 		movt	r2, #:upper16:EPindex
 16790 0330 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 16791 0332 4FEA8202 		lsl	r2, r2, #2
 16792 0336 02F18042 		add	r2, r2, #1073741824
 16793 033a 02F5B842 		add	r2, r2, #23552
 16794 033e 1268     		ldr	r2, [r2, #0]
 16795 0340 92B2     		uxth	r2, r2
 16796 0342 1146     		mov	r1, r2
 16797 0344 48F60F72 		movw	r2, #36623
 16798 0348 01EA0202 		and	r2, r1, r2
 16799 034c 1A60     		str	r2, [r3, #0]
 138:../target/stm32/vcom/usb_int.c **** 
 139:../target/stm32/vcom/usb_int.c ****         /* call IN service function */
 140:../target/stm32/vcom/usb_int.c ****         (*pEpInt_IN[EPindex-1])();
 16800              		.loc 1 140 0
 16801 034e 40F20003 		movw	r3, #:lower16:EPindex
 16802 0352 C0F20003 		movt	r3, #:upper16:EPindex
 16803 0356 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16804 0358 03F1FF32 		add	r2, r3, #-1
 16805 035c 40F20003 		movw	r3, #:lower16:pEpInt_IN
 16806 0360 C0F20003 		movt	r3, #:upper16:pEpInt_IN
 16807 0364 53F82230 		ldr	r3, [r3, r2, lsl #2]
 16808 0368 9847     		blx	r3
 16809              	.L2:
  45:../target/stm32/vcom/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 16810              		.loc 1 45 0 discriminator 1
 16811 036a 45F64443 		movw	r3, #23620
 16812 036e C4F20003 		movt	r3, 16384
 16813 0372 1B68     		ldr	r3, [r3, #0]
 16814 0374 9AB2     		uxth	r2, r3
 16815 0376 40F20003 		movw	r3, #:lower16:wIstr
 16816 037a C0F20003 		movt	r3, #:upper16:wIstr
 16817 037e 1A80     		strh	r2, [r3, #0]	@ movhi
 16818 0380 40F20003 		movw	r3, #:lower16:wIstr
 16819 0384 C0F20003 		movt	r3, #:upper16:wIstr
 16820 0388 1B88     		ldrh	r3, [r3, #0]	@ movhi
 16821 038a 9BB2     		uxth	r3, r3
 16822 038c 9BB2     		uxth	r3, r3
 16823 038e 1BB2     		sxth	r3, r3
 16824 0390 002B     		cmp	r3, #0
 16825 0392 FFF639AE 		blt	.L13
 141:../target/stm32/vcom/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 142:../target/stm32/vcom/usb_int.c **** 
 143:../target/stm32/vcom/usb_int.c ****     }/* if(EPindex == 0) else */
 144:../target/stm32/vcom/usb_int.c **** 
 145:../target/stm32/vcom/usb_int.c ****   }/* while(...) */
 146:../target/stm32/vcom/usb_int.c **** }
 16826              		.loc 1 146 0
 16827 0396 07F10C07 		add	r7, r7, #12
 16828 039a BD46     		mov	sp, r7
 16829 039c 90BD     		pop	{r4, r7, pc}
 16830              		.cfi_endproc
 16831              	.LFE29:
 16833 039e 00BF     		.section	.text.CTR_HP,"ax",%progbits
 16834              		.align	2
 16835              		.global	CTR_HP
 16836              		.thumb
 16837              		.thumb_func
 16839              	CTR_HP:
 16840              	.LFB30:
 147:../target/stm32/vcom/usb_int.c **** 
 148:../target/stm32/vcom/usb_int.c **** /*******************************************************************************
 149:../target/stm32/vcom/usb_int.c **** * Function Name  : CTR_HP.
 150:../target/stm32/vcom/usb_int.c **** * Description    : High Priority Endpoint Correct Transfer interrupt's service 
 151:../target/stm32/vcom/usb_int.c **** *                  routine.
 152:../target/stm32/vcom/usb_int.c **** * Input          : None.
 153:../target/stm32/vcom/usb_int.c **** * Output         : None.
 154:../target/stm32/vcom/usb_int.c **** * Return         : None.
 155:../target/stm32/vcom/usb_int.c **** *******************************************************************************/
 156:../target/stm32/vcom/usb_int.c **** void CTR_HP(void)
 157:../target/stm32/vcom/usb_int.c **** {
 16841              		.loc 1 157 0
 16842              		.cfi_startproc
 16843              		@ args = 0, pretend = 0, frame = 8
 16844              		@ frame_needed = 1, uses_anonymous_args = 0
 16845 0000 80B5     		push	{r7, lr}
 16846              	.LCFI3:
 16847              		.cfi_def_cfa_offset 8
 16848 0002 82B0     		sub	sp, sp, #8
 16849              	.LCFI4:
 16850              		.cfi_def_cfa_offset 16
 16851 0004 00AF     		add	r7, sp, #0
 16852              		.cfi_offset 14, -4
 16853              		.cfi_offset 7, -8
 16854              	.LCFI5:
 16855              		.cfi_def_cfa_register 7
 158:../target/stm32/vcom/usb_int.c ****   u32 wEPVal;
 159:../target/stm32/vcom/usb_int.c **** 
 160:../target/stm32/vcom/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 16856              		.loc 1 160 0
 16857 0006 85E0     		b	.L15
 16858              	.L17:
 161:../target/stm32/vcom/usb_int.c ****   {
 162:../target/stm32/vcom/usb_int.c ****     _SetISTR((u16)CLR_CTR); /* clear CTR flag */
 16859              		.loc 1 162 0
 16860 0008 45F64443 		movw	r3, #23620
 16861 000c C4F20003 		movt	r3, 16384
 16862 0010 47F6FF72 		movw	r2, #32767
 16863 0014 1A60     		str	r2, [r3, #0]
 163:../target/stm32/vcom/usb_int.c ****     /* extract highest priority endpoint number */
 164:../target/stm32/vcom/usb_int.c ****     EPindex = (u8)(wIstr & ISTR_EP_ID);
 16864              		.loc 1 164 0
 16865 0016 40F20003 		movw	r3, #:lower16:wIstr
 16866 001a C0F20003 		movt	r3, #:upper16:wIstr
 16867 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 16868 0020 9BB2     		uxth	r3, r3
 16869 0022 DBB2     		uxtb	r3, r3
 16870 0024 03F00F03 		and	r3, r3, #15
 16871 0028 DAB2     		uxtb	r2, r3
 16872 002a 40F20003 		movw	r3, #:lower16:EPindex
 16873 002e C0F20003 		movt	r3, #:upper16:EPindex
 16874 0032 1A70     		strb	r2, [r3, #0]
 165:../target/stm32/vcom/usb_int.c ****     /* process related endpoint register */
 166:../target/stm32/vcom/usb_int.c ****     wEPVal = _GetENDPOINT(EPindex);
 16875              		.loc 1 166 0
 16876 0034 40F20003 		movw	r3, #:lower16:EPindex
 16877 0038 C0F20003 		movt	r3, #:upper16:EPindex
 16878 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16879 003e 4FEA8303 		lsl	r3, r3, #2
 16880 0042 03F18043 		add	r3, r3, #1073741824
 16881 0046 03F5B843 		add	r3, r3, #23552
 16882 004a 1B68     		ldr	r3, [r3, #0]
 16883 004c 9BB2     		uxth	r3, r3
 16884 004e 7B60     		str	r3, [r7, #4]
 167:../target/stm32/vcom/usb_int.c ****     if ((wEPVal & EP_CTR_RX) != 0)
 16885              		.loc 1 167 0
 16886 0050 7B68     		ldr	r3, [r7, #4]
 16887 0052 03F40043 		and	r3, r3, #32768
 16888 0056 002B     		cmp	r3, #0
 16889 0058 2BD0     		beq	.L16
 168:../target/stm32/vcom/usb_int.c ****     {
 169:../target/stm32/vcom/usb_int.c ****       /* clear int flag */
 170:../target/stm32/vcom/usb_int.c ****       _ClearEP_CTR_RX(EPindex);
 16890              		.loc 1 170 0
 16891 005a 40F20003 		movw	r3, #:lower16:EPindex
 16892 005e C0F20003 		movt	r3, #:upper16:EPindex
 16893 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16894 0064 4FEA8303 		lsl	r3, r3, #2
 16895 0068 03F18043 		add	r3, r3, #1073741824
 16896 006c 03F5B843 		add	r3, r3, #23552
 16897 0070 40F20002 		movw	r2, #:lower16:EPindex
 16898 0074 C0F20002 		movt	r2, #:upper16:EPindex
 16899 0078 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 16900 007a 4FEA8202 		lsl	r2, r2, #2
 16901 007e 02F18042 		add	r2, r2, #1073741824
 16902 0082 02F5B842 		add	r2, r2, #23552
 16903 0086 1268     		ldr	r2, [r2, #0]
 16904 0088 92B2     		uxth	r2, r2
 16905 008a 1146     		mov	r1, r2
 16906 008c 40F68F72 		movw	r2, #3983
 16907 0090 01EA0202 		and	r2, r1, r2
 16908 0094 1A60     		str	r2, [r3, #0]
 171:../target/stm32/vcom/usb_int.c **** 
 172:../target/stm32/vcom/usb_int.c ****       /* call OUT service function */
 173:../target/stm32/vcom/usb_int.c ****       (*pEpInt_OUT[EPindex-1])();
 16909              		.loc 1 173 0
 16910 0096 40F20003 		movw	r3, #:lower16:EPindex
 16911 009a C0F20003 		movt	r3, #:upper16:EPindex
 16912 009e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16913 00a0 03F1FF32 		add	r2, r3, #-1
 16914 00a4 40F20003 		movw	r3, #:lower16:pEpInt_OUT
 16915 00a8 C0F20003 		movt	r3, #:upper16:pEpInt_OUT
 16916 00ac 53F82230 		ldr	r3, [r3, r2, lsl #2]
 16917 00b0 9847     		blx	r3
 16918              	.L16:
 174:../target/stm32/vcom/usb_int.c **** 
 175:../target/stm32/vcom/usb_int.c ****     } /* if((wEPVal & EP_CTR_RX) */
 176:../target/stm32/vcom/usb_int.c ****     if ((wEPVal & EP_CTR_TX) != 0)
 16919              		.loc 1 176 0
 16920 00b2 7B68     		ldr	r3, [r7, #4]
 16921 00b4 03F08003 		and	r3, r3, #128
 16922 00b8 002B     		cmp	r3, #0
 16923 00ba 2BD0     		beq	.L15
 177:../target/stm32/vcom/usb_int.c ****     {
 178:../target/stm32/vcom/usb_int.c ****       /* clear int flag */
 179:../target/stm32/vcom/usb_int.c ****       _ClearEP_CTR_TX(EPindex);
 16924              		.loc 1 179 0
 16925 00bc 40F20003 		movw	r3, #:lower16:EPindex
 16926 00c0 C0F20003 		movt	r3, #:upper16:EPindex
 16927 00c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16928 00c6 4FEA8303 		lsl	r3, r3, #2
 16929 00ca 03F18043 		add	r3, r3, #1073741824
 16930 00ce 03F5B843 		add	r3, r3, #23552
 16931 00d2 40F20002 		movw	r2, #:lower16:EPindex
 16932 00d6 C0F20002 		movt	r2, #:upper16:EPindex
 16933 00da 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 16934 00dc 4FEA8202 		lsl	r2, r2, #2
 16935 00e0 02F18042 		add	r2, r2, #1073741824
 16936 00e4 02F5B842 		add	r2, r2, #23552
 16937 00e8 1268     		ldr	r2, [r2, #0]
 16938 00ea 92B2     		uxth	r2, r2
 16939 00ec 1146     		mov	r1, r2
 16940 00ee 48F60F72 		movw	r2, #36623
 16941 00f2 01EA0202 		and	r2, r1, r2
 16942 00f6 1A60     		str	r2, [r3, #0]
 180:../target/stm32/vcom/usb_int.c **** 
 181:../target/stm32/vcom/usb_int.c ****       /* call IN service function */
 182:../target/stm32/vcom/usb_int.c ****       (*pEpInt_IN[EPindex-1])();
 16943              		.loc 1 182 0
 16944 00f8 40F20003 		movw	r3, #:lower16:EPindex
 16945 00fc C0F20003 		movt	r3, #:upper16:EPindex
 16946 0100 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 16947 0102 03F1FF32 		add	r2, r3, #-1
 16948 0106 40F20003 		movw	r3, #:lower16:pEpInt_IN
 16949 010a C0F20003 		movt	r3, #:upper16:pEpInt_IN
 16950 010e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 16951 0112 9847     		blx	r3
 16952              	.L15:
 160:../target/stm32/vcom/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 16953              		.loc 1 160 0 discriminator 1
 16954 0114 45F64443 		movw	r3, #23620
 16955 0118 C4F20003 		movt	r3, 16384
 16956 011c 1B68     		ldr	r3, [r3, #0]
 16957 011e 9AB2     		uxth	r2, r3
 16958 0120 40F20003 		movw	r3, #:lower16:wIstr
 16959 0124 C0F20003 		movt	r3, #:upper16:wIstr
 16960 0128 1A80     		strh	r2, [r3, #0]	@ movhi
 16961 012a 40F20003 		movw	r3, #:lower16:wIstr
 16962 012e C0F20003 		movt	r3, #:upper16:wIstr
 16963 0132 1B88     		ldrh	r3, [r3, #0]	@ movhi
 16964 0134 9BB2     		uxth	r3, r3
 16965 0136 9BB2     		uxth	r3, r3
 16966 0138 1BB2     		sxth	r3, r3
 16967 013a 002B     		cmp	r3, #0
 16968 013c FFF664AF 		blt	.L17
 183:../target/stm32/vcom/usb_int.c **** 
 184:../target/stm32/vcom/usb_int.c **** 
 185:../target/stm32/vcom/usb_int.c ****     } /* if((wEPVal & EP_CTR_TX) != 0) */
 186:../target/stm32/vcom/usb_int.c **** 
 187:../target/stm32/vcom/usb_int.c ****   }/* while(...) */
 188:../target/stm32/vcom/usb_int.c **** }
 16969              		.loc 1 188 0
 16970 0140 07F10807 		add	r7, r7, #8
 16971 0144 BD46     		mov	sp, r7
 16972 0146 80BD     		pop	{r7, pc}
 16973              		.cfi_endproc
 16974              	.LFE30:
 16976              		.text
 16977              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 usb_int.c
                            *COM*:00000002 SaveRState
                            *COM*:00000002 SaveTState
     /tmp/ccwoIgRz.s:16443  .text.CTR_LP:00000000 $t
     /tmp/ccwoIgRz.s:16448  .text.CTR_LP:00000000 CTR_LP
     /tmp/ccwoIgRz.s:16834  .text.CTR_HP:00000000 $t
     /tmp/ccwoIgRz.s:16839  .text.CTR_HP:00000000 CTR_HP
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
wIstr
EPindex
In0_Process
Setup0_Process
Out0_Process
pEpInt_OUT
pEpInt_IN
