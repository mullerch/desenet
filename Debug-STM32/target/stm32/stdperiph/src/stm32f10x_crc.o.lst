   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_crc.c"
  23              	.Ltext0:
  24              		.file 1 "../target/stm32/stdperiph/src/stm32f10x_crc.c"
 15736              		.align	2
 15737              		.global	CRC_ResetDR
 15738              		.thumb
 15739              		.thumb_func
 15741              	CRC_ResetDR:
 15742              	.LFB29:
   1:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
   2:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   ******************************************************************************
   3:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @file    stm32f10x_crc.c
   4:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @author  MCD Application Team
   5:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @version V3.4.0
   6:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @date    10/15/2010
   7:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief   This file provides all the CRC firmware functions.
   8:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   ******************************************************************************
   9:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @copy
  10:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   *
  11:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   *
  18:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
  19:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */ 
  20:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  21:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /* Includes ------------------------------------------------------------------*/
  22:../target/stm32/stdperiph/src/stm32f10x_crc.c **** #include "stm32f10x_crc.h"
  23:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  24:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  25:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  26:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  27:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  28:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @defgroup CRC 
  29:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief CRC driver modules
  30:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  31:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  32:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  33:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @defgroup CRC_Private_TypesDefinitions
  34:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  35:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  36:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  37:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
  38:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @}
  39:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  40:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  41:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @defgroup CRC_Private_Defines
  42:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  43:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  44:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  45:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
  46:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @}
  47:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  48:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  49:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @defgroup CRC_Private_Macros
  50:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  51:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  52:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  53:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
  54:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @}
  55:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  56:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  57:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @defgroup CRC_Private_Variables
  58:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  59:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  60:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  61:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
  62:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @}
  63:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  64:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  65:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @defgroup CRC_Private_FunctionPrototypes
  66:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  67:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  68:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  69:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
  70:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @}
  71:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  72:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  73:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /** @defgroup CRC_Private_Functions
  74:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @{
  75:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  76:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  77:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
  78:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief  Resets the CRC Data register (DR).
  79:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @param  None
  80:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @retval None
  81:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  82:../target/stm32/stdperiph/src/stm32f10x_crc.c **** void CRC_ResetDR(void)
  83:../target/stm32/stdperiph/src/stm32f10x_crc.c **** {
 15743              		.loc 1 83 0
 15744              		.cfi_startproc
 15745              		@ args = 0, pretend = 0, frame = 0
 15746              		@ frame_needed = 1, uses_anonymous_args = 0
 15747              		@ link register save eliminated.
 15748 0000 80B4     		push	{r7}
 15749              	.LCFI0:
 15750              		.cfi_def_cfa_offset 4
 15751 0002 00AF     		add	r7, sp, #0
 15752              		.cfi_offset 7, -4
 15753              	.LCFI1:
 15754              		.cfi_def_cfa_register 7
  84:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   /* Reset CRC generator */
  85:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   CRC->CR = CRC_CR_RESET;
 15755              		.loc 1 85 0
 15756 0004 4FF44053 		mov	r3, #12288
 15757 0008 C4F20203 		movt	r3, 16386
 15758 000c 4FF00102 		mov	r2, #1
 15759 0010 9A60     		str	r2, [r3, #8]
  86:../target/stm32/stdperiph/src/stm32f10x_crc.c **** }
 15760              		.loc 1 86 0
 15761 0012 BD46     		mov	sp, r7
 15762 0014 80BC     		pop	{r7}
 15763 0016 7047     		bx	lr
 15764              		.cfi_endproc
 15765              	.LFE29:
 15767              		.section	.text.CRC_CalcCRC,"ax",%progbits
 15768              		.align	2
 15769              		.global	CRC_CalcCRC
 15770              		.thumb
 15771              		.thumb_func
 15773              	CRC_CalcCRC:
 15774              	.LFB30:
  87:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
  88:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
  89:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief  Computes the 32-bit CRC of a given data word(32-bit).
  90:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @param  Data: data word(32-bit) to compute its CRC
  91:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @retval 32-bit CRC
  92:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
  93:../target/stm32/stdperiph/src/stm32f10x_crc.c **** uint32_t CRC_CalcCRC(uint32_t Data)
  94:../target/stm32/stdperiph/src/stm32f10x_crc.c **** {
 15775              		.loc 1 94 0
 15776              		.cfi_startproc
 15777              		@ args = 0, pretend = 0, frame = 8
 15778              		@ frame_needed = 1, uses_anonymous_args = 0
 15779              		@ link register save eliminated.
 15780 0000 80B4     		push	{r7}
 15781              	.LCFI2:
 15782              		.cfi_def_cfa_offset 4
 15783 0002 83B0     		sub	sp, sp, #12
 15784              	.LCFI3:
 15785              		.cfi_def_cfa_offset 16
 15786 0004 00AF     		add	r7, sp, #0
 15787              		.cfi_offset 7, -4
 15788              	.LCFI4:
 15789              		.cfi_def_cfa_register 7
 15790 0006 7860     		str	r0, [r7, #4]
  95:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   CRC->DR = Data;
 15791              		.loc 1 95 0
 15792 0008 4FF44053 		mov	r3, #12288
 15793 000c C4F20203 		movt	r3, 16386
 15794 0010 7A68     		ldr	r2, [r7, #4]
 15795 0012 1A60     		str	r2, [r3, #0]
  96:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   
  97:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   return (CRC->DR);
 15796              		.loc 1 97 0
 15797 0014 4FF44053 		mov	r3, #12288
 15798 0018 C4F20203 		movt	r3, 16386
 15799 001c 1B68     		ldr	r3, [r3, #0]
  98:../target/stm32/stdperiph/src/stm32f10x_crc.c **** }
 15800              		.loc 1 98 0
 15801 001e 1846     		mov	r0, r3
 15802 0020 07F10C07 		add	r7, r7, #12
 15803 0024 BD46     		mov	sp, r7
 15804 0026 80BC     		pop	{r7}
 15805 0028 7047     		bx	lr
 15806              		.cfi_endproc
 15807              	.LFE30:
 15809 002a 00BF     		.section	.text.CRC_CalcBlockCRC,"ax",%progbits
 15810              		.align	2
 15811              		.global	CRC_CalcBlockCRC
 15812              		.thumb
 15813              		.thumb_func
 15815              	CRC_CalcBlockCRC:
 15816              	.LFB31:
  99:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
 100:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
 101:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
 102:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @param  pBuffer: pointer to the buffer containing the data to be computed
 103:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @param  BufferLength: length of the buffer to be computed					
 104:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @retval 32-bit CRC
 105:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
 106:../target/stm32/stdperiph/src/stm32f10x_crc.c **** uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
 107:../target/stm32/stdperiph/src/stm32f10x_crc.c **** {
 15817              		.loc 1 107 0
 15818              		.cfi_startproc
 15819              		@ args = 0, pretend = 0, frame = 16
 15820              		@ frame_needed = 1, uses_anonymous_args = 0
 15821              		@ link register save eliminated.
 15822 0000 80B4     		push	{r7}
 15823              	.LCFI5:
 15824              		.cfi_def_cfa_offset 4
 15825 0002 85B0     		sub	sp, sp, #20
 15826              	.LCFI6:
 15827              		.cfi_def_cfa_offset 24
 15828 0004 00AF     		add	r7, sp, #0
 15829              		.cfi_offset 7, -4
 15830              	.LCFI7:
 15831              		.cfi_def_cfa_register 7
 15832 0006 7860     		str	r0, [r7, #4]
 15833 0008 3960     		str	r1, [r7, #0]
 108:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   uint32_t index = 0;
 15834              		.loc 1 108 0
 15835 000a 4FF00003 		mov	r3, #0
 15836 000e FB60     		str	r3, [r7, #12]
 109:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   
 110:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   for(index = 0; index < BufferLength; index++)
 15837              		.loc 1 110 0
 15838 0010 4FF00003 		mov	r3, #0
 15839 0014 FB60     		str	r3, [r7, #12]
 15840 0016 0EE0     		b	.L4
 15841              	.L5:
 111:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   {
 112:../target/stm32/stdperiph/src/stm32f10x_crc.c ****     CRC->DR = pBuffer[index];
 15842              		.loc 1 112 0 discriminator 2
 15843 0018 4FF44053 		mov	r3, #12288
 15844 001c C4F20203 		movt	r3, 16386
 15845 0020 FA68     		ldr	r2, [r7, #12]
 15846 0022 4FEA8202 		lsl	r2, r2, #2
 15847 0026 7968     		ldr	r1, [r7, #4]
 15848 0028 8A18     		adds	r2, r1, r2
 15849 002a 1268     		ldr	r2, [r2, #0]
 15850 002c 1A60     		str	r2, [r3, #0]
 110:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   for(index = 0; index < BufferLength; index++)
 15851              		.loc 1 110 0 discriminator 2
 15852 002e FB68     		ldr	r3, [r7, #12]
 15853 0030 03F10103 		add	r3, r3, #1
 15854 0034 FB60     		str	r3, [r7, #12]
 15855              	.L4:
 110:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   for(index = 0; index < BufferLength; index++)
 15856              		.loc 1 110 0 is_stmt 0 discriminator 1
 15857 0036 FA68     		ldr	r2, [r7, #12]
 15858 0038 3B68     		ldr	r3, [r7, #0]
 15859 003a 9A42     		cmp	r2, r3
 15860 003c ECD3     		bcc	.L5
 113:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   }
 114:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   return (CRC->DR);
 15861              		.loc 1 114 0 is_stmt 1
 15862 003e 4FF44053 		mov	r3, #12288
 15863 0042 C4F20203 		movt	r3, 16386
 15864 0046 1B68     		ldr	r3, [r3, #0]
 115:../target/stm32/stdperiph/src/stm32f10x_crc.c **** }
 15865              		.loc 1 115 0
 15866 0048 1846     		mov	r0, r3
 15867 004a 07F11407 		add	r7, r7, #20
 15868 004e BD46     		mov	sp, r7
 15869 0050 80BC     		pop	{r7}
 15870 0052 7047     		bx	lr
 15871              		.cfi_endproc
 15872              	.LFE31:
 15874              		.section	.text.CRC_GetCRC,"ax",%progbits
 15875              		.align	2
 15876              		.global	CRC_GetCRC
 15877              		.thumb
 15878              		.thumb_func
 15880              	CRC_GetCRC:
 15881              	.LFB32:
 116:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
 117:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
 118:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief  Returns the current CRC value.
 119:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @param  None
 120:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @retval 32-bit CRC
 121:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
 122:../target/stm32/stdperiph/src/stm32f10x_crc.c **** uint32_t CRC_GetCRC(void)
 123:../target/stm32/stdperiph/src/stm32f10x_crc.c **** {
 15882              		.loc 1 123 0
 15883              		.cfi_startproc
 15884              		@ args = 0, pretend = 0, frame = 0
 15885              		@ frame_needed = 1, uses_anonymous_args = 0
 15886              		@ link register save eliminated.
 15887 0000 80B4     		push	{r7}
 15888              	.LCFI8:
 15889              		.cfi_def_cfa_offset 4
 15890 0002 00AF     		add	r7, sp, #0
 15891              		.cfi_offset 7, -4
 15892              	.LCFI9:
 15893              		.cfi_def_cfa_register 7
 124:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   return (CRC->DR);
 15894              		.loc 1 124 0
 15895 0004 4FF44053 		mov	r3, #12288
 15896 0008 C4F20203 		movt	r3, 16386
 15897 000c 1B68     		ldr	r3, [r3, #0]
 125:../target/stm32/stdperiph/src/stm32f10x_crc.c **** }
 15898              		.loc 1 125 0
 15899 000e 1846     		mov	r0, r3
 15900 0010 BD46     		mov	sp, r7
 15901 0012 80BC     		pop	{r7}
 15902 0014 7047     		bx	lr
 15903              		.cfi_endproc
 15904              	.LFE32:
 15906 0016 00BF     		.section	.text.CRC_SetIDRegister,"ax",%progbits
 15907              		.align	2
 15908              		.global	CRC_SetIDRegister
 15909              		.thumb
 15910              		.thumb_func
 15912              	CRC_SetIDRegister:
 15913              	.LFB33:
 126:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
 127:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
 128:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief  Stores a 8-bit data in the Independent Data(ID) register.
 129:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @param  IDValue: 8-bit value to be stored in the ID register 					
 130:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @retval None
 131:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
 132:../target/stm32/stdperiph/src/stm32f10x_crc.c **** void CRC_SetIDRegister(uint8_t IDValue)
 133:../target/stm32/stdperiph/src/stm32f10x_crc.c **** {
 15914              		.loc 1 133 0
 15915              		.cfi_startproc
 15916              		@ args = 0, pretend = 0, frame = 8
 15917              		@ frame_needed = 1, uses_anonymous_args = 0
 15918              		@ link register save eliminated.
 15919 0000 80B4     		push	{r7}
 15920              	.LCFI10:
 15921              		.cfi_def_cfa_offset 4
 15922 0002 83B0     		sub	sp, sp, #12
 15923              	.LCFI11:
 15924              		.cfi_def_cfa_offset 16
 15925 0004 00AF     		add	r7, sp, #0
 15926              		.cfi_offset 7, -4
 15927              	.LCFI12:
 15928              		.cfi_def_cfa_register 7
 15929 0006 0346     		mov	r3, r0
 15930 0008 FB71     		strb	r3, [r7, #7]
 134:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   CRC->IDR = IDValue;
 15931              		.loc 1 134 0
 15932 000a 4FF44053 		mov	r3, #12288
 15933 000e C4F20203 		movt	r3, 16386
 15934 0012 FA79     		ldrb	r2, [r7, #7]
 15935 0014 1A71     		strb	r2, [r3, #4]
 135:../target/stm32/stdperiph/src/stm32f10x_crc.c **** }
 15936              		.loc 1 135 0
 15937 0016 07F10C07 		add	r7, r7, #12
 15938 001a BD46     		mov	sp, r7
 15939 001c 80BC     		pop	{r7}
 15940 001e 7047     		bx	lr
 15941              		.cfi_endproc
 15942              	.LFE33:
 15944              		.section	.text.CRC_GetIDRegister,"ax",%progbits
 15945              		.align	2
 15946              		.global	CRC_GetIDRegister
 15947              		.thumb
 15948              		.thumb_func
 15950              	CRC_GetIDRegister:
 15951              	.LFB34:
 136:../target/stm32/stdperiph/src/stm32f10x_crc.c **** 
 137:../target/stm32/stdperiph/src/stm32f10x_crc.c **** /**
 138:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
 139:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @param  None
 140:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   * @retval 8-bit value of the ID register 
 141:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   */
 142:../target/stm32/stdperiph/src/stm32f10x_crc.c **** uint8_t CRC_GetIDRegister(void)
 143:../target/stm32/stdperiph/src/stm32f10x_crc.c **** {
 15952              		.loc 1 143 0
 15953              		.cfi_startproc
 15954              		@ args = 0, pretend = 0, frame = 0
 15955              		@ frame_needed = 1, uses_anonymous_args = 0
 15956              		@ link register save eliminated.
 15957 0000 80B4     		push	{r7}
 15958              	.LCFI13:
 15959              		.cfi_def_cfa_offset 4
 15960 0002 00AF     		add	r7, sp, #0
 15961              		.cfi_offset 7, -4
 15962              	.LCFI14:
 15963              		.cfi_def_cfa_register 7
 144:../target/stm32/stdperiph/src/stm32f10x_crc.c ****   return (CRC->IDR);
 15964              		.loc 1 144 0
 15965 0004 4FF44053 		mov	r3, #12288
 15966 0008 C4F20203 		movt	r3, 16386
 15967 000c 1B79     		ldrb	r3, [r3, #4]
 15968 000e DBB2     		uxtb	r3, r3
 145:../target/stm32/stdperiph/src/stm32f10x_crc.c **** }
 15969              		.loc 1 145 0
 15970 0010 1846     		mov	r0, r3
 15971 0012 BD46     		mov	sp, r7
 15972 0014 80BC     		pop	{r7}
 15973 0016 7047     		bx	lr
 15974              		.cfi_endproc
 15975              	.LFE34:
 15977              		.text
 15978              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_crc.c
     /tmp/cchOm3QN.s:15736  .text.CRC_ResetDR:00000000 $t
     /tmp/cchOm3QN.s:15741  .text.CRC_ResetDR:00000000 CRC_ResetDR
     /tmp/cchOm3QN.s:15768  .text.CRC_CalcCRC:00000000 $t
     /tmp/cchOm3QN.s:15773  .text.CRC_CalcCRC:00000000 CRC_CalcCRC
     /tmp/cchOm3QN.s:15810  .text.CRC_CalcBlockCRC:00000000 $t
     /tmp/cchOm3QN.s:15815  .text.CRC_CalcBlockCRC:00000000 CRC_CalcBlockCRC
     /tmp/cchOm3QN.s:15875  .text.CRC_GetCRC:00000000 $t
     /tmp/cchOm3QN.s:15880  .text.CRC_GetCRC:00000000 CRC_GetCRC
     /tmp/cchOm3QN.s:15907  .text.CRC_SetIDRegister:00000000 $t
     /tmp/cchOm3QN.s:15912  .text.CRC_SetIDRegister:00000000 CRC_SetIDRegister
     /tmp/cchOm3QN.s:15945  .text.CRC_GetIDRegister:00000000 $t
     /tmp/cchOm3QN.s:15950  .text.CRC_GetIDRegister:00000000 CRC_GetIDRegister
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
